# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: Git Mailing List <git@vger.kernel.org>\n"
"POT-Creation-Date: 2016-05-24 23:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#: advice.c
#, c-format
msgid "hint: %.*s\n"
msgstr ""

#: advice.c
msgid ""
"Fix them up in the work tree, and then use 'git add/rm <file>'\n"
"as appropriate to mark resolution and make a commit."
msgstr ""

#: advice.c builtin/merge.c
msgid "You have not concluded your merge (MERGE_HEAD exists)."
msgstr ""

#: advice.c
msgid "Please, commit your changes before merging."
msgstr ""

#: advice.c
msgid "Exiting because of unfinished merge."
msgstr ""

#: archive.c
msgid "git archive [<options>] <tree-ish> [<path>...]"
msgstr ""

#: archive.c
msgid "git archive --list"
msgstr ""

#: archive.c
msgid ""
"git archive --remote <repo> [--exec <cmd>] [<options>] <tree-ish> [<path>...]"
msgstr ""

#: archive.c
msgid "git archive --remote <repo> [--exec <cmd>] --list"
msgstr ""

#: archive.c builtin/add.c builtin/rm.c
#, c-format
msgid "pathspec '%s' did not match any files"
msgstr ""

#: archive.c
msgid "fmt"
msgstr ""

#: archive.c
msgid "archive format"
msgstr ""

#: archive.c builtin/log.c
msgid "prefix"
msgstr ""

#: archive.c
msgid "prepend prefix to each pathname in the archive"
msgstr ""

#: archive.c builtin/archive.c builtin/blame.c builtin/config.c
#: builtin/fast-export.c builtin/grep.c builtin/hash-object.c
#: builtin/ls-files.c builtin/notes.c builtin/read-tree.c parse-options.h
msgid "file"
msgstr ""

#: archive.c builtin/archive.c
msgid "write the archive to this file"
msgstr ""

#: archive.c
msgid "read .gitattributes in working directory"
msgstr ""

#: archive.c
msgid "report archived files on stderr"
msgstr ""

#: archive.c
msgid "store only"
msgstr ""

#: archive.c
msgid "compress faster"
msgstr ""

#: archive.c
msgid "compress better"
msgstr ""

#: archive.c
msgid "list supported archive formats"
msgstr ""

#: archive.c builtin/archive.c builtin/clone.c builtin/submodule--helper.c
msgid "repo"
msgstr ""

#: archive.c builtin/archive.c
msgid "retrieve the archive from remote repository <repo>"
msgstr ""

#: archive.c builtin/archive.c builtin/notes.c
msgid "command"
msgstr ""

#: archive.c builtin/archive.c
msgid "path to the remote git-upload-archive command"
msgstr ""

#: attr.c
msgid ""
"Negative patterns are ignored in git attributes\n"
"Use '\\!' for literal leading exclamation."
msgstr ""

#: branch.c
#, c-format
msgid ""
"\n"
"After fixing the error cause you may try to fix up\n"
"the remote tracking information by invoking\n"
"\"git branch --set-upstream-to=%s%s%s\"."
msgstr ""

#: branch.c
#, c-format
msgid "Not setting branch %s as its own upstream."
msgstr ""

#: branch.c
#, c-format
msgid "Branch %s set up to track remote branch %s from %s by rebasing."
msgstr ""

#: branch.c
#, c-format
msgid "Branch %s set up to track remote branch %s from %s."
msgstr ""

#: branch.c
#, c-format
msgid "Branch %s set up to track local branch %s by rebasing."
msgstr ""

#: branch.c
#, c-format
msgid "Branch %s set up to track local branch %s."
msgstr ""

#: branch.c
#, c-format
msgid "Branch %s set up to track remote ref %s by rebasing."
msgstr ""

#: branch.c
#, c-format
msgid "Branch %s set up to track remote ref %s."
msgstr ""

#: branch.c
#, c-format
msgid "Branch %s set up to track local ref %s by rebasing."
msgstr ""

#: branch.c
#, c-format
msgid "Branch %s set up to track local ref %s."
msgstr ""

#: branch.c
msgid "Unable to write upstream branch configuration"
msgstr ""

#: branch.c
#, c-format
msgid "Not tracking: ambiguous information for ref %s"
msgstr ""

#: branch.c
#, c-format
msgid "'%s' is not a valid branch name."
msgstr ""

#: branch.c
#, c-format
msgid "A branch named '%s' already exists."
msgstr ""

#: branch.c
msgid "Cannot force update the current branch."
msgstr ""

#: branch.c
#, c-format
msgid "Cannot setup tracking information; starting point '%s' is not a branch."
msgstr ""

#: branch.c
#, c-format
msgid "the requested upstream branch '%s' does not exist"
msgstr ""

#: branch.c
msgid ""
"\n"
"If you are planning on basing your work on an upstream\n"
"branch that already exists at the remote, you may need to\n"
"run \"git fetch\" to retrieve it.\n"
"\n"
"If you are planning to push out a new local branch that\n"
"will track its remote counterpart, you may want to use\n"
"\"git push -u\" to set the upstream config as you push."
msgstr ""

#: branch.c
#, c-format
msgid "Not a valid object name: '%s'."
msgstr ""

#: branch.c
#, c-format
msgid "Ambiguous object name: '%s'."
msgstr ""

#: branch.c
#, c-format
msgid "Not a valid branch point: '%s'."
msgstr ""

#: branch.c
#, c-format
msgid "'%s' is already checked out at '%s'"
msgstr ""

#: branch.c
#, c-format
msgid "HEAD of working tree %s is not updated"
msgstr ""

#: bundle.c
#, c-format
msgid "'%s' does not look like a v2 bundle file"
msgstr ""

#: bundle.c
#, c-format
msgid "unrecognized header: %s%s (%d)"
msgstr ""

#: bundle.c builtin/commit.c
#, c-format
msgid "could not open '%s'"
msgstr ""

#: bundle.c
msgid "Repository lacks these prerequisite commits:"
msgstr ""

#: bundle.c ref-filter.c sequencer.c builtin/blame.c builtin/commit.c
#: builtin/log.c builtin/merge.c builtin/shortlog.c
msgid "revision walk setup failed"
msgstr ""

#: bundle.c
#, c-format
msgid "The bundle contains this ref:"
msgid_plural "The bundle contains these %d refs:"
msgstr[0] ""
msgstr[1] ""

#: bundle.c
msgid "The bundle records a complete history."
msgstr ""

#: bundle.c
#, c-format
msgid "The bundle requires this ref:"
msgid_plural "The bundle requires these %d refs:"
msgstr[0] ""
msgstr[1] ""

#: bundle.c
msgid "Could not spawn pack-objects"
msgstr ""

#: bundle.c
msgid "pack-objects died"
msgstr ""

#: bundle.c
msgid "rev-list died"
msgstr ""

#: bundle.c
#, c-format
msgid "ref '%s' is excluded by the rev-list options"
msgstr ""

#: bundle.c builtin/log.c builtin/shortlog.c
#, c-format
msgid "unrecognized argument: %s"
msgstr ""

#: bundle.c
msgid "Refusing to create empty bundle."
msgstr ""

#: bundle.c
#, c-format
msgid "cannot create '%s'"
msgstr ""

#: bundle.c
msgid "index-pack died"
msgstr ""

#: color.c
#, c-format
msgid "invalid color value: %.*s"
msgstr ""

#: commit.c builtin/am.c
#, c-format
msgid "could not parse %s"
msgstr ""

#: commit.c
#, c-format
msgid "%s %s is not a commit!"
msgstr ""

#: compat/obstack.c
msgid "memory exhausted"
msgstr ""

#: config.c
#, c-format
msgid "bad config line %d in %s %s"
msgstr ""

#: config.c
#, c-format
msgid "bad numeric config value '%s' for '%s' in %s %s: %s"
msgstr ""

#: config.c
#, c-format
msgid "bad numeric config value '%s' for '%s': %s"
msgstr ""

#: config.c
#, c-format
msgid "failed to expand user dir in: '%s'"
msgstr ""

#: config.c
#, c-format
msgid "bad zlib compression level %d"
msgstr ""

#: config.c
#, c-format
msgid "invalid mode for object creation: %s"
msgstr ""

#: config.c
msgid "unable to parse command-line config"
msgstr ""

#: config.c
msgid "unknown error occured while reading the configuration files"
msgstr ""

#: config.c
#, c-format
msgid "unable to parse '%s' from command-line config"
msgstr ""

#: config.c
#, c-format
msgid "bad config variable '%s' in file '%s' at line %d"
msgstr ""

#: config.c
#, c-format
msgid "%s has multiple values"
msgstr ""

#: config.c
#, c-format
msgid "could not set '%s' to '%s'"
msgstr ""

#: config.c
#, c-format
msgid "could not unset '%s'"
msgstr ""

#: connected.c
msgid "Could not run 'git rev-list'"
msgstr ""

#: connected.c
msgid "failed write to rev-list"
msgstr ""

#: connected.c
msgid "failed to close rev-list's stdin"
msgstr ""

#: date.c
msgid "in the future"
msgstr ""

#: date.c
#, c-format
msgid "%lu second ago"
msgid_plural "%lu seconds ago"
msgstr[0] ""
msgstr[1] ""

#: date.c
#, c-format
msgid "%lu minute ago"
msgid_plural "%lu minutes ago"
msgstr[0] ""
msgstr[1] ""

#: date.c
#, c-format
msgid "%lu hour ago"
msgid_plural "%lu hours ago"
msgstr[0] ""
msgstr[1] ""

#: date.c
#, c-format
msgid "%lu day ago"
msgid_plural "%lu days ago"
msgstr[0] ""
msgstr[1] ""

#: date.c
#, c-format
msgid "%lu week ago"
msgid_plural "%lu weeks ago"
msgstr[0] ""
msgstr[1] ""

#: date.c
#, c-format
msgid "%lu month ago"
msgid_plural "%lu months ago"
msgstr[0] ""
msgstr[1] ""

#: date.c
#, c-format
msgid "%lu year"
msgid_plural "%lu years"
msgstr[0] ""
msgstr[1] ""

#. TRANSLATORS: "%s" is "<n> years"
#: date.c
#, c-format
msgid "%s, %lu month ago"
msgid_plural "%s, %lu months ago"
msgstr[0] ""
msgstr[1] ""

#: date.c
#, c-format
msgid "%lu year ago"
msgid_plural "%lu years ago"
msgstr[0] ""
msgstr[1] ""

#: diffcore-order.c
#, c-format
msgid "failed to read orderfile '%s'"
msgstr ""

#: diffcore-rename.c
msgid "Performing inexact rename detection"
msgstr ""

#: diff.c
#, c-format
msgid "  Failed to parse dirstat cut-off percentage '%s'\n"
msgstr ""

#: diff.c
#, c-format
msgid "  Unknown dirstat parameter '%s'\n"
msgstr ""

#: diff.c
#, c-format
msgid "Unknown value for 'diff.submodule' config variable: '%s'"
msgstr ""

#: diff.c
#, c-format
msgid ""
"Found errors in 'diff.dirstat' config variable:\n"
"%s"
msgstr ""

#: diff.c
#, c-format
msgid "external diff died, stopping at %s"
msgstr ""

#: diff.c
msgid "--follow requires exactly one pathspec"
msgstr ""

#: diff.c
#, c-format
msgid ""
"Failed to parse --dirstat/-X option parameter:\n"
"%s"
msgstr ""

#: diff.c
#, c-format
msgid "Failed to parse --submodule option parameter: '%s'"
msgstr ""

#: dir.c
msgid "failed to get kernel name and information"
msgstr ""

#: dir.c
msgid "Untracked cache is disabled on this system or location."
msgstr ""

#: gpg-interface.c
msgid "could not run gpg."
msgstr ""

#: gpg-interface.c
msgid "gpg did not accept the data"
msgstr ""

#: gpg-interface.c
msgid "gpg failed to sign the data"
msgstr ""

#: gpg-interface.c
#, c-format
msgid "could not create temporary file '%s'"
msgstr ""

#: gpg-interface.c
#, c-format
msgid "failed writing detached signature to '%s'"
msgstr ""

#: grep.c
#, c-format
msgid "'%s': unable to read %s"
msgstr ""

#: grep.c builtin/clone.c builtin/diff.c builtin/rm.c
#, c-format
msgid "failed to stat '%s'"
msgstr ""

#: grep.c
#, c-format
msgid "'%s': short read"
msgstr ""

#: help.c
#, c-format
msgid "available git commands in '%s'"
msgstr ""

#: help.c
msgid "git commands available from elsewhere on your $PATH"
msgstr ""

#: help.c
msgid "These are common Git commands used in various situations:"
msgstr ""

#: help.c
#, c-format
msgid ""
"'%s' appears to be a git command, but we were not\n"
"able to execute it. Maybe git-%s is broken?"
msgstr ""

#: help.c
msgid "Uh oh. Your system reports no Git commands at all."
msgstr ""

#: help.c
#, c-format
msgid ""
"WARNING: You called a Git command named '%s', which does not exist.\n"
"Continuing under the assumption that you meant '%s'"
msgstr ""

#: help.c
#, c-format
msgid "in %0.1f seconds automatically..."
msgstr ""

#: help.c
#, c-format
msgid "git: '%s' is not a git command. See 'git --help'."
msgstr ""

#: help.c
msgid ""
"\n"
"Did you mean this?"
msgid_plural ""
"\n"
"Did you mean one of these?"
msgstr[0] ""
msgstr[1] ""

#: help.c
#, c-format
msgid "%s: %s - %s"
msgstr ""

#: lockfile.c
#, c-format
msgid ""
"Unable to create '%s.lock': %s.\n"
"\n"
"Another git process seems to be running in this repository, e.g.\n"
"an editor opened by 'git commit'. Please make sure all processes\n"
"are terminated then try again. If it still fails, a git process\n"
"may have crashed in this repository earlier:\n"
"remove the file manually to continue."
msgstr ""

#: lockfile.c
#, c-format
msgid "Unable to create '%s.lock': %s"
msgstr ""

#: merge.c
msgid "failed to read the cache"
msgstr ""

#: merge.c builtin/am.c builtin/checkout.c builtin/clone.c
msgid "unable to write new index file"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "(bad commit)\n"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "addinfo_cache failed for path '%s'"
msgstr ""

#: merge-recursive.c
msgid "error building trees"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "failed to create path '%s'%s"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "Removing %s to make room for subdirectory\n"
msgstr ""

#: merge-recursive.c
msgid ": perhaps a D/F conflict?"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "refusing to lose untracked file at '%s'"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "cannot read object %s '%s'"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "blob expected for %s '%s'"
msgstr ""

#: merge-recursive.c builtin/clone.c
#, c-format
msgid "failed to open '%s'"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "failed to symlink '%s'"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "do not know what to do with %06o %s '%s'"
msgstr ""

#: merge-recursive.c
msgid "Failed to execute internal merge"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "Unable to add %s to database"
msgstr ""

#: merge-recursive.c
msgid "unsupported object type in the tree"
msgstr ""

#: merge-recursive.c
#, c-format
msgid ""
"CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
"in tree."
msgstr ""

#: merge-recursive.c
#, c-format
msgid ""
"CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left "
"in tree at %s."
msgstr ""

#: merge-recursive.c
msgid "rename"
msgstr ""

#: merge-recursive.c
msgid "renamed"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "%s is a directory in %s adding as %s instead"
msgstr ""

#: merge-recursive.c
#, c-format
msgid ""
"CONFLICT (rename/rename): Rename \"%s\"->\"%s\" in branch \"%s\" rename \"%s"
"\"->\"%s\" in \"%s\"%s"
msgstr ""

#: merge-recursive.c
msgid " (left unresolved)"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "Renaming %s to %s and %s to %s instead"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "Adding merged %s"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "Adding as %s instead"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "cannot read object %s"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "object %s is not a blob"
msgstr ""

#: merge-recursive.c
msgid "modify"
msgstr ""

#: merge-recursive.c
msgid "modified"
msgstr ""

#: merge-recursive.c
msgid "content"
msgstr ""

#: merge-recursive.c
msgid "add/add"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "Skipped %s (merged same as existing)"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "Auto-merging %s"
msgstr ""

#: merge-recursive.c git-submodule.sh
msgid "submodule"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "CONFLICT (%s): Merge conflict in %s"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "Removing %s"
msgstr ""

#: merge-recursive.c
msgid "file/directory"
msgstr ""

#: merge-recursive.c
msgid "directory/file"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "Adding %s"
msgstr ""

#: merge-recursive.c
msgid "Fatal merge failure, shouldn't happen."
msgstr ""

#: merge-recursive.c
msgid "Already up-to-date!"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "merging of trees %s and %s failed"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "Unprocessed path??? %s"
msgstr ""

#: merge-recursive.c
msgid "Merging:"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "found %u common ancestor:"
msgid_plural "found %u common ancestors:"
msgstr[0] ""
msgstr[1] ""

#: merge-recursive.c
msgid "merge returned no commit"
msgstr ""

#: merge-recursive.c
#, c-format
msgid "Could not parse object '%s'"
msgstr ""

#: merge-recursive.c builtin/merge.c
msgid "Unable to write index."
msgstr ""

#: notes-utils.c
msgid "Cannot commit uninitialized/unreferenced notes tree"
msgstr ""

#: notes-utils.c
#, c-format
msgid "Bad notes.rewriteMode value: '%s'"
msgstr ""

#: notes-utils.c
#, c-format
msgid "Refusing to rewrite notes in %s (outside of refs/notes/)"
msgstr ""

#. TRANSLATORS: The first %s is the name of the
#. environment variable, the second %s is its value
#: notes-utils.c
#, c-format
msgid "Bad %s value: '%s'"
msgstr ""

#: object.c
#, c-format
msgid "unable to parse object: %s"
msgstr ""

#: parse-options.c
msgid "..."
msgstr ""

#: parse-options.c
#, c-format
msgid "usage: %s"
msgstr ""

#. TRANSLATORS: the colon here should align with the
#. one in "usage: %s" translation
#: parse-options.c
#, c-format
msgid "   or: %s"
msgstr ""

#: parse-options.c
#, c-format
msgid "    %s"
msgstr ""

#: parse-options.c
msgid "-NUM"
msgstr ""

#: parse-options-cb.c
#, c-format
msgid "malformed object name '%s'"
msgstr ""

#: path.c
#, c-format
msgid "Could not make %s writable by group"
msgstr ""

#: pathspec.c
msgid "global 'glob' and 'noglob' pathspec settings are incompatible"
msgstr ""

#: pathspec.c
msgid ""
"global 'literal' pathspec setting is incompatible with all other global "
"pathspec settings"
msgstr ""

#: pathspec.c
msgid "invalid parameter for pathspec magic 'prefix'"
msgstr ""

#: pathspec.c
#, c-format
msgid "Invalid pathspec magic '%.*s' in '%s'"
msgstr ""

#: pathspec.c
#, c-format
msgid "Missing ')' at the end of pathspec magic in '%s'"
msgstr ""

#: pathspec.c
#, c-format
msgid "Unimplemented pathspec magic '%c' in '%s'"
msgstr ""

#: pathspec.c
#, c-format
msgid "%s: 'literal' and 'glob' are incompatible"
msgstr ""

#: pathspec.c
#, c-format
msgid "%s: '%s' is outside repository"
msgstr ""

#: pathspec.c
#, c-format
msgid "Pathspec '%s' is in submodule '%.*s'"
msgstr ""

#: pathspec.c
#, c-format
msgid "%s: pathspec magic not supported by this command: %s"
msgstr ""

#: pathspec.c
#, c-format
msgid "pathspec '%s' is beyond a symbolic link"
msgstr ""

#: pathspec.c
msgid ""
"There is nothing to exclude from by :(exclude) patterns.\n"
"Perhaps you forgot to add either ':/' or '.' ?"
msgstr ""

#: pretty.c
msgid "unable to parse --pretty format"
msgstr ""

#: progress.c
msgid "done"
msgstr ""

#: read-cache.c
#, c-format
msgid ""
"index.version set, but the value is invalid.\n"
"Using version %i"
msgstr ""

#: read-cache.c
#, c-format
msgid ""
"GIT_INDEX_VERSION set, but the value is invalid.\n"
"Using version %i"
msgstr ""

#: refs.c builtin/merge.c
#, c-format
msgid "Could not open '%s' for writing"
msgstr ""

#: refs/files-backend.c
#, c-format
msgid "could not delete reference %s: %s"
msgstr ""

#: refs/files-backend.c
#, c-format
msgid "could not delete references: %s"
msgstr ""

#: refs/files-backend.c
#, c-format
msgid "could not remove reference %s"
msgstr ""

#: ref-filter.c
#, c-format
msgid "expected format: %%(color:<color>)"
msgstr ""

#: ref-filter.c
#, c-format
msgid "unrecognized color: %%(color:%s)"
msgstr ""

#: ref-filter.c
#, c-format
msgid "unrecognized format: %%(%s)"
msgstr ""

#: ref-filter.c
#, c-format
msgid "%%(body) does not take arguments"
msgstr ""

#: ref-filter.c
#, c-format
msgid "%%(subject) does not take arguments"
msgstr ""

#: ref-filter.c
#, c-format
msgid "positive value expected contents:lines=%s"
msgstr ""

#: ref-filter.c
#, c-format
msgid "unrecognized %%(contents) argument: %s"
msgstr ""

#: ref-filter.c
#, c-format
msgid "unrecognized %%(objectname) argument: %s"
msgstr ""

#: ref-filter.c
#, c-format
msgid "expected format: %%(align:<width>,<position>)"
msgstr ""

#: ref-filter.c
#, c-format
msgid "unrecognized position:%s"
msgstr ""

#: ref-filter.c
#, c-format
msgid "unrecognized width:%s"
msgstr ""

#: ref-filter.c
#, c-format
msgid "unrecognized %%(align) argument: %s"
msgstr ""

#: ref-filter.c
#, c-format
msgid "positive width expected with the %%(align) atom"
msgstr ""

#: ref-filter.c
#, c-format
msgid "malformed field name: %.*s"
msgstr ""

#: ref-filter.c
#, c-format
msgid "unknown field name: %.*s"
msgstr ""

#: ref-filter.c
#, c-format
msgid "format: %%(end) atom used without corresponding atom"
msgstr ""

#: ref-filter.c
#, c-format
msgid "malformed format string %s"
msgstr ""

#: ref-filter.c
msgid ":strip= requires a positive integer argument"
msgstr ""

#: ref-filter.c
#, c-format
msgid "ref '%s' does not have %ld components to :strip"
msgstr ""

#: ref-filter.c
#, c-format
msgid "unknown %.*s format %s"
msgstr ""

#: ref-filter.c
#, c-format
msgid "missing object %s for %s"
msgstr ""

#: ref-filter.c
#, c-format
msgid "parse_object_buffer failed on %s for %s"
msgstr ""

#: ref-filter.c
#, c-format
msgid "malformed object at '%s'"
msgstr ""

#: ref-filter.c
#, c-format
msgid "ignoring ref with broken name %s"
msgstr ""

#: ref-filter.c
#, c-format
msgid "ignoring broken ref %s"
msgstr ""

#: ref-filter.c
#, c-format
msgid "format: %%(end) atom missing"
msgstr ""

#: ref-filter.c
#, c-format
msgid "malformed object name %s"
msgstr ""

#: remote.c
#, c-format
msgid "Cannot fetch both %s and %s to %s"
msgstr ""

#: remote.c
#, c-format
msgid "%s usually tracks %s, not %s"
msgstr ""

#: remote.c
#, c-format
msgid "%s tracks both %s and %s"
msgstr ""

#: remote.c
msgid "Internal error"
msgstr ""

#: remote.c
msgid "HEAD does not point to a branch"
msgstr ""

#: remote.c
#, c-format
msgid "no such branch: '%s'"
msgstr ""

#: remote.c
#, c-format
msgid "no upstream configured for branch '%s'"
msgstr ""

#: remote.c
#, c-format
msgid "upstream branch '%s' not stored as a remote-tracking branch"
msgstr ""

#: remote.c
#, c-format
msgid "push destination '%s' on remote '%s' has no local tracking branch"
msgstr ""

#: remote.c
#, c-format
msgid "branch '%s' has no remote for pushing"
msgstr ""

#: remote.c
#, c-format
msgid "push refspecs for '%s' do not include '%s'"
msgstr ""

#: remote.c
msgid "push has no destination (push.default is 'nothing')"
msgstr ""

#: remote.c
msgid "cannot resolve 'simple' push to a single destination"
msgstr ""

#: remote.c
#, c-format
msgid "Your branch is based on '%s', but the upstream is gone.\n"
msgstr ""

#: remote.c
msgid "  (use \"git branch --unset-upstream\" to fixup)\n"
msgstr ""

#: remote.c
#, c-format
msgid "Your branch is up-to-date with '%s'.\n"
msgstr ""

#: remote.c
#, c-format
msgid "Your branch is ahead of '%s' by %d commit.\n"
msgid_plural "Your branch is ahead of '%s' by %d commits.\n"
msgstr[0] ""
msgstr[1] ""

#: remote.c
msgid "  (use \"git push\" to publish your local commits)\n"
msgstr ""

#: remote.c
#, c-format
msgid "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n"
msgid_plural ""
"Your branch is behind '%s' by %d commits, and can be fast-forwarded.\n"
msgstr[0] ""
msgstr[1] ""

#: remote.c
msgid "  (use \"git pull\" to update your local branch)\n"
msgstr ""

#: remote.c
#, c-format
msgid ""
"Your branch and '%s' have diverged,\n"
"and have %d and %d different commit each, respectively.\n"
msgid_plural ""
"Your branch and '%s' have diverged,\n"
"and have %d and %d different commits each, respectively.\n"
msgstr[0] ""
msgstr[1] ""

#: remote.c
msgid "  (use \"git pull\" to merge the remote branch into yours)\n"
msgstr ""

#: revision.c
msgid "your current branch appears to be broken"
msgstr ""

#: revision.c
#, c-format
msgid "your current branch '%s' does not have any commits yet"
msgstr ""

#: revision.c
msgid "--first-parent is incompatible with --bisect"
msgstr ""

#: run-command.c
msgid "open /dev/null failed"
msgstr ""

#: run-command.c
#, c-format
msgid "dup2(%d,%d) failed"
msgstr ""

#: send-pack.c
msgid "failed to sign the push certificate"
msgstr ""

#: send-pack.c
msgid "the receiving end does not support --signed push"
msgstr ""

#: send-pack.c
msgid ""
"not sending a push certificate since the receiving end does not support --"
"signed push"
msgstr ""

#: send-pack.c
msgid "the receiving end does not support --atomic push"
msgstr ""

#: sequencer.c
msgid ""
"after resolving the conflicts, mark the corrected paths\n"
"with 'git add <paths>' or 'git rm <paths>'"
msgstr ""

#: sequencer.c
msgid ""
"after resolving the conflicts, mark the corrected paths\n"
"with 'git add <paths>' or 'git rm <paths>'\n"
"and commit the result with 'git commit'"
msgstr ""

#: sequencer.c
#, c-format
msgid "Could not write to %s"
msgstr ""

#: sequencer.c
#, c-format
msgid "Error wrapping up %s"
msgstr ""

#: sequencer.c
msgid "Your local changes would be overwritten by cherry-pick."
msgstr ""

#: sequencer.c
msgid "Your local changes would be overwritten by revert."
msgstr ""

#: sequencer.c
msgid "Commit your changes or stash them to proceed."
msgstr ""

#. TRANSLATORS: %s will be "revert" or "cherry-pick"
#: sequencer.c
#, c-format
msgid "%s: Unable to write new index file"
msgstr ""

#: sequencer.c
msgid "Could not resolve HEAD commit\n"
msgstr ""

#: sequencer.c
msgid "Unable to update cache tree\n"
msgstr ""

#: sequencer.c
#, c-format
msgid "Could not parse commit %s\n"
msgstr ""

#: sequencer.c
#, c-format
msgid "Could not parse parent commit %s\n"
msgstr ""

#: sequencer.c
msgid "Your index file is unmerged."
msgstr ""

#: sequencer.c
#, c-format
msgid "Commit %s is a merge but no -m option was given."
msgstr ""

#: sequencer.c
#, c-format
msgid "Commit %s does not have parent %d"
msgstr ""

#: sequencer.c
#, c-format
msgid "Mainline was specified but commit %s is not a merge."
msgstr ""

#. TRANSLATORS: The first %s will be "revert" or
#. "cherry-pick", the second %s a SHA1
#: sequencer.c
#, c-format
msgid "%s: cannot parse parent commit %s"
msgstr ""

#: sequencer.c
#, c-format
msgid "Cannot get commit message for %s"
msgstr ""

#: sequencer.c
#, c-format
msgid "could not revert %s... %s"
msgstr ""

#: sequencer.c
#, c-format
msgid "could not apply %s... %s"
msgstr ""

#: sequencer.c
msgid "empty commit set passed"
msgstr ""

#: sequencer.c
#, c-format
msgid "git %s: failed to read the index"
msgstr ""

#: sequencer.c
#, c-format
msgid "git %s: failed to refresh the index"
msgstr ""

#: sequencer.c
#, c-format
msgid "Cannot %s during a %s"
msgstr ""

#: sequencer.c
#, c-format
msgid "Could not parse line %d."
msgstr ""

#: sequencer.c
msgid "No commits parsed."
msgstr ""

#: sequencer.c
#, c-format
msgid "Could not open %s"
msgstr ""

#: sequencer.c
#, c-format
msgid "Could not read %s."
msgstr ""

#: sequencer.c
#, c-format
msgid "Unusable instruction sheet: %s"
msgstr ""

#: sequencer.c
#, c-format
msgid "Invalid key: %s"
msgstr ""

#: sequencer.c builtin/pull.c
#, c-format
msgid "Invalid value for %s: %s"
msgstr ""

#: sequencer.c
#, c-format
msgid "Malformed options sheet: %s"
msgstr ""

#: sequencer.c
msgid "a cherry-pick or revert is already in progress"
msgstr ""

#: sequencer.c
msgid "try \"git cherry-pick (--continue | --quit | --abort)\""
msgstr ""

#: sequencer.c
#, c-format
msgid "Could not create sequencer directory %s"
msgstr ""

#: sequencer.c
#, c-format
msgid "Error wrapping up %s."
msgstr ""

#: sequencer.c
msgid "no cherry-pick or revert in progress"
msgstr ""

#: sequencer.c
msgid "cannot resolve HEAD"
msgstr ""

#: sequencer.c
msgid "cannot abort from a branch yet to be born"
msgstr ""

#: sequencer.c builtin/fetch.c
#, c-format
msgid "cannot open %s"
msgstr ""

#: sequencer.c
#, c-format
msgid "cannot read %s: %s"
msgstr ""

#: sequencer.c
msgid "unexpected end of file"
msgstr ""

#: sequencer.c
#, c-format
msgid "stored pre-cherry-pick HEAD file '%s' is corrupt"
msgstr ""

#: sequencer.c
#, c-format
msgid "Could not format %s."
msgstr ""

#: sequencer.c
#, c-format
msgid "%s: can't cherry-pick a %s"
msgstr ""

#: sequencer.c
#, c-format
msgid "%s: bad revision"
msgstr ""

#: sequencer.c
msgid "Can't revert as initial commit"
msgstr ""

#: sequencer.c
msgid "Can't cherry-pick into empty head"
msgstr ""

#: setup.c
#, c-format
msgid "failed to read %s"
msgstr ""

#: setup.c
#, c-format
msgid "Expected git repo version <= %d, found %d"
msgstr ""

#: setup.c
msgid "unknown repository extensions found:"
msgstr ""

#: sha1_file.c
msgid "offset before end of packfile (broken .idx?)"
msgstr ""

#: sha1_file.c
#, c-format
msgid "offset before start of pack index for %s (corrupt index?)"
msgstr ""

#: sha1_file.c
#, c-format
msgid "offset beyond end of pack index for %s (truncated index?)"
msgstr ""

#: sha1_name.c
msgid ""
"Git normally never creates a ref that ends with 40 hex characters\n"
"because it will be ignored when you just specify 40-hex. These refs\n"
"may be created by mistake. For example,\n"
"\n"
"  git checkout -b $br $(git rev-parse ...)\n"
"\n"
"where \"$br\" is somehow empty and a 40-hex ref is created. Please\n"
"examine these refs and maybe delete them. Turn this message off by\n"
"running \"git config advice.objectNameWarning false\""
msgstr ""

#: submodule.c
msgid "Cannot change unmerged .gitmodules, resolve merge conflicts first"
msgstr ""

#: submodule.c
#, c-format
msgid "Could not find section in .gitmodules where path=%s"
msgstr ""

#: submodule.c
#, c-format
msgid "Could not update .gitmodules entry %s"
msgstr ""

#: submodule.c
#, c-format
msgid "Could not remove .gitmodules entry for %s"
msgstr ""

#: submodule.c
msgid "staging updated .gitmodules failed"
msgstr ""

#: submodule.c
msgid "negative values not allowed for submodule.fetchJobs"
msgstr ""

#: submodule-config.c
#, c-format
msgid "invalid value for %s"
msgstr ""

#: trailer.c
#, c-format
msgid "running trailer command '%s' failed"
msgstr ""

#: trailer.c
#, c-format
msgid "unknown value '%s' for key '%s'"
msgstr ""

#: trailer.c builtin/remote.c
#, c-format
msgid "more than one %s"
msgstr ""

#: trailer.c
#, c-format
msgid "empty trailer token in trailer '%.*s'"
msgstr ""

#: trailer.c
#, c-format
msgid "could not read input file '%s'"
msgstr ""

#: trailer.c
msgid "could not read from stdin"
msgstr ""

#: trailer.c builtin/am.c
#, c-format
msgid "could not stat %s"
msgstr ""

#: trailer.c
#, c-format
msgid "file %s is not a regular file"
msgstr ""

#: trailer.c
#, c-format
msgid "file %s is not writable by user"
msgstr ""

#: trailer.c
msgid "could not open temporary file"
msgstr ""

#: trailer.c
#, c-format
msgid "could not rename temporary file to %s"
msgstr ""

#: transport-helper.c
#, c-format
msgid "Could not read ref %s"
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"Your local changes to the following files would be overwritten by checkout:\n"
"%%sPlease commit your changes or stash them before you can switch branches."
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"Your local changes to the following files would be overwritten by checkout:\n"
"%%s"
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"Your local changes to the following files would be overwritten by merge:\n"
"%%sPlease commit your changes or stash them before you can merge."
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"Your local changes to the following files would be overwritten by merge:\n"
"%%s"
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"Your local changes to the following files would be overwritten by %s:\n"
"%%sPlease commit your changes or stash them before you can %s."
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"Your local changes to the following files would be overwritten by %s:\n"
"%%s"
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"Updating the following directories would lose untracked files in it:\n"
"%s"
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"The following untracked working tree files would be removed by checkout:\n"
"%%sPlease move or remove them before you can switch branches."
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"The following untracked working tree files would be removed by checkout:\n"
"%%s"
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"The following untracked working tree files would be removed by merge:\n"
"%%sPlease move or remove them before you can merge."
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"The following untracked working tree files would be removed by merge:\n"
"%%s"
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"The following untracked working tree files would be removed by %s:\n"
"%%sPlease move or remove them before you can %s."
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"The following untracked working tree files would be removed by %s:\n"
"%%s"
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"The following untracked working tree files would be overwritten by "
"checkout:\n"
"%%sPlease move or remove them before you can switch branches."
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"The following untracked working tree files would be overwritten by "
"checkout:\n"
"%%s"
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"The following untracked working tree files would be overwritten by merge:\n"
"%%sPlease move or remove them before you can merge."
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"The following untracked working tree files would be overwritten by merge:\n"
"%%s"
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"The following untracked working tree files would be overwritten by %s:\n"
"%%sPlease move or remove them before you can %s."
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"The following untracked working tree files would be overwritten by %s:\n"
"%%s"
msgstr ""

#: unpack-trees.c
#, c-format
msgid "Entry '%s' overlaps with '%s'.  Cannot bind."
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"Cannot update sparse checkout: the following entries are not up-to-date:\n"
"%s"
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"The following Working tree files would be overwritten by sparse checkout "
"update:\n"
"%s"
msgstr ""

#: unpack-trees.c
#, c-format
msgid ""
"The following Working tree files would be removed by sparse checkout "
"update:\n"
"%s"
msgstr ""

#: unpack-trees.c
#, c-format
msgid "Aborting\n"
msgstr ""

#: unpack-trees.c
msgid "Checking out files"
msgstr ""

#: urlmatch.c
msgid "invalid URL scheme name or missing '://' suffix"
msgstr ""

#: urlmatch.c
#, c-format
msgid "invalid %XX escape sequence"
msgstr ""

#: urlmatch.c
msgid "missing host and scheme is not 'file:'"
msgstr ""

#: urlmatch.c
msgid "a 'file:' URL may not have a port number"
msgstr ""

#: urlmatch.c
msgid "invalid characters in host name"
msgstr ""

#: urlmatch.c
msgid "invalid port number"
msgstr ""

#: urlmatch.c
msgid "invalid '..' path segment"
msgstr ""

#: wrapper.c
#, c-format
msgid "could not open '%s' for reading and writing"
msgstr ""

#: wrapper.c builtin/am.c
#, c-format
msgid "could not open '%s' for writing"
msgstr ""

#: wrapper.c builtin/am.c builtin/commit.c builtin/merge.c builtin/pull.c
#, c-format
msgid "could not open '%s' for reading"
msgstr ""

#: wrapper.c
#, c-format
msgid "unable to access '%s'"
msgstr ""

#: wrapper.c
msgid "unable to get current working directory"
msgstr ""

#: wrapper.c
#, c-format
msgid "could not open %s for writing"
msgstr ""

#: wrapper.c builtin/am.c
#, c-format
msgid "could not write to %s"
msgstr ""

#: wrapper.c
#, c-format
msgid "could not close %s"
msgstr ""

#: wt-status.c
msgid "Unmerged paths:"
msgstr ""

#: wt-status.c
#, c-format
msgid "  (use \"git reset %s <file>...\" to unstage)"
msgstr ""

#: wt-status.c
msgid "  (use \"git rm --cached <file>...\" to unstage)"
msgstr ""

#: wt-status.c
msgid "  (use \"git add <file>...\" to mark resolution)"
msgstr ""

#: wt-status.c
msgid "  (use \"git add/rm <file>...\" as appropriate to mark resolution)"
msgstr ""

#: wt-status.c
msgid "  (use \"git rm <file>...\" to mark resolution)"
msgstr ""

#: wt-status.c
msgid "Changes to be committed:"
msgstr ""

#: wt-status.c
msgid "Changes not staged for commit:"
msgstr ""

#: wt-status.c
msgid "  (use \"git add <file>...\" to update what will be committed)"
msgstr ""

#: wt-status.c
msgid "  (use \"git add/rm <file>...\" to update what will be committed)"
msgstr ""

#: wt-status.c
msgid ""
"  (use \"git checkout -- <file>...\" to discard changes in working directory)"
msgstr ""

#: wt-status.c
msgid "  (commit or discard the untracked or modified content in submodules)"
msgstr ""

#: wt-status.c
#, c-format
msgid "  (use \"git %s <file>...\" to include in what will be committed)"
msgstr ""

#: wt-status.c
msgid "both deleted:"
msgstr ""

#: wt-status.c
msgid "added by us:"
msgstr ""

#: wt-status.c
msgid "deleted by them:"
msgstr ""

#: wt-status.c
msgid "added by them:"
msgstr ""

#: wt-status.c
msgid "deleted by us:"
msgstr ""

#: wt-status.c
msgid "both added:"
msgstr ""

#: wt-status.c
msgid "both modified:"
msgstr ""

#: wt-status.c
#, c-format
msgid "bug: unhandled unmerged status %x"
msgstr ""

#: wt-status.c
msgid "new file:"
msgstr ""

#: wt-status.c
msgid "copied:"
msgstr ""

#: wt-status.c
msgid "deleted:"
msgstr ""

#: wt-status.c
msgid "modified:"
msgstr ""

#: wt-status.c
msgid "renamed:"
msgstr ""

#: wt-status.c
msgid "typechange:"
msgstr ""

#: wt-status.c
msgid "unknown:"
msgstr ""

#: wt-status.c
msgid "unmerged:"
msgstr ""

#: wt-status.c
msgid "new commits, "
msgstr ""

#: wt-status.c
msgid "modified content, "
msgstr ""

#: wt-status.c
msgid "untracked content, "
msgstr ""

#: wt-status.c
#, c-format
msgid "bug: unhandled diff status %c"
msgstr ""

#: wt-status.c
msgid "Submodules changed but not updated:"
msgstr ""

#: wt-status.c
msgid "Submodule changes to be committed:"
msgstr ""

#: wt-status.c
msgid ""
"Do not touch the line above.\n"
"Everything below will be removed."
msgstr ""

#: wt-status.c
msgid "You have unmerged paths."
msgstr ""

#: wt-status.c
msgid "  (fix conflicts and run \"git commit\")"
msgstr ""

#: wt-status.c
msgid "All conflicts fixed but you are still merging."
msgstr ""

#: wt-status.c
msgid "  (use \"git commit\" to conclude merge)"
msgstr ""

#: wt-status.c
msgid "You are in the middle of an am session."
msgstr ""

#: wt-status.c
msgid "The current patch is empty."
msgstr ""

#: wt-status.c
msgid "  (fix conflicts and then run \"git am --continue\")"
msgstr ""

#: wt-status.c
msgid "  (use \"git am --skip\" to skip this patch)"
msgstr ""

#: wt-status.c
msgid "  (use \"git am --abort\" to restore the original branch)"
msgstr ""

#: wt-status.c
msgid "No commands done."
msgstr ""

#: wt-status.c
#, c-format
msgid "Last command done (%d command done):"
msgid_plural "Last commands done (%d commands done):"
msgstr[0] ""
msgstr[1] ""

#: wt-status.c
#, c-format
msgid "  (see more in file %s)"
msgstr ""

#: wt-status.c
msgid "No commands remaining."
msgstr ""

#: wt-status.c
#, c-format
msgid "Next command to do (%d remaining command):"
msgid_plural "Next commands to do (%d remaining commands):"
msgstr[0] ""
msgstr[1] ""

#: wt-status.c
msgid "  (use \"git rebase --edit-todo\" to view and edit)"
msgstr ""

#: wt-status.c
#, c-format
msgid "You are currently rebasing branch '%s' on '%s'."
msgstr ""

#: wt-status.c
msgid "You are currently rebasing."
msgstr ""

#: wt-status.c
msgid "  (fix conflicts and then run \"git rebase --continue\")"
msgstr ""

#: wt-status.c
msgid "  (use \"git rebase --skip\" to skip this patch)"
msgstr ""

#: wt-status.c
msgid "  (use \"git rebase --abort\" to check out the original branch)"
msgstr ""

#: wt-status.c
msgid "  (all conflicts fixed: run \"git rebase --continue\")"
msgstr ""

#: wt-status.c
#, c-format
msgid ""
"You are currently splitting a commit while rebasing branch '%s' on '%s'."
msgstr ""

#: wt-status.c
msgid "You are currently splitting a commit during a rebase."
msgstr ""

#: wt-status.c
msgid "  (Once your working directory is clean, run \"git rebase --continue\")"
msgstr ""

#: wt-status.c
#, c-format
msgid "You are currently editing a commit while rebasing branch '%s' on '%s'."
msgstr ""

#: wt-status.c
msgid "You are currently editing a commit during a rebase."
msgstr ""

#: wt-status.c
msgid "  (use \"git commit --amend\" to amend the current commit)"
msgstr ""

#: wt-status.c
msgid ""
"  (use \"git rebase --continue\" once you are satisfied with your changes)"
msgstr ""

#: wt-status.c
#, c-format
msgid "You are currently cherry-picking commit %s."
msgstr ""

#: wt-status.c
msgid "  (fix conflicts and run \"git cherry-pick --continue\")"
msgstr ""

#: wt-status.c
msgid "  (all conflicts fixed: run \"git cherry-pick --continue\")"
msgstr ""

#: wt-status.c
msgid "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)"
msgstr ""

#: wt-status.c
#, c-format
msgid "You are currently reverting commit %s."
msgstr ""

#: wt-status.c
msgid "  (fix conflicts and run \"git revert --continue\")"
msgstr ""

#: wt-status.c
msgid "  (all conflicts fixed: run \"git revert --continue\")"
msgstr ""

#: wt-status.c
msgid "  (use \"git revert --abort\" to cancel the revert operation)"
msgstr ""

#: wt-status.c
#, c-format
msgid "You are currently bisecting, started from branch '%s'."
msgstr ""

#: wt-status.c
msgid "You are currently bisecting."
msgstr ""

#: wt-status.c
msgid "  (use \"git bisect reset\" to get back to the original branch)"
msgstr ""

#: wt-status.c
msgid "On branch "
msgstr ""

#: wt-status.c
msgid "interactive rebase in progress; onto "
msgstr ""

#: wt-status.c
msgid "rebase in progress; onto "
msgstr ""

#: wt-status.c
msgid "HEAD detached at "
msgstr ""

#: wt-status.c
msgid "HEAD detached from "
msgstr ""

#: wt-status.c
msgid "Not currently on any branch."
msgstr ""

#: wt-status.c
msgid "Initial commit"
msgstr ""

#: wt-status.c
msgid "Untracked files"
msgstr ""

#: wt-status.c
msgid "Ignored files"
msgstr ""

#: wt-status.c
#, c-format
msgid ""
"It took %.2f seconds to enumerate untracked files. 'status -uno'\n"
"may speed it up, but you have to be careful not to forget to add\n"
"new files yourself (see 'git help status')."
msgstr ""

#: wt-status.c
#, c-format
msgid "Untracked files not listed%s"
msgstr ""

#: wt-status.c
msgid " (use -u option to show untracked files)"
msgstr ""

#: wt-status.c
msgid "No changes"
msgstr ""

#: wt-status.c
#, c-format
msgid "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n"
msgstr ""

#: wt-status.c
#, c-format
msgid "no changes added to commit\n"
msgstr ""

#: wt-status.c
#, c-format
msgid ""
"nothing added to commit but untracked files present (use \"git add\" to "
"track)\n"
msgstr ""

#: wt-status.c
#, c-format
msgid "nothing added to commit but untracked files present\n"
msgstr ""

#: wt-status.c
#, c-format
msgid "nothing to commit (create/copy files and use \"git add\" to track)\n"
msgstr ""

#: wt-status.c
#, c-format
msgid "nothing to commit\n"
msgstr ""

#: wt-status.c
#, c-format
msgid "nothing to commit (use -u to show untracked files)\n"
msgstr ""

#: wt-status.c
#, c-format
msgid "nothing to commit, working directory clean\n"
msgstr ""

#: wt-status.c
msgid "Initial commit on "
msgstr ""

#: wt-status.c
msgid "HEAD (no branch)"
msgstr ""

#: wt-status.c
msgid "gone"
msgstr ""

#: wt-status.c
msgid "behind "
msgstr ""

#: wt-status.c
msgid "ahead "
msgstr ""

#: compat/precompose_utf8.c builtin/clone.c
#, c-format
msgid "failed to unlink '%s'"
msgstr ""

#: builtin/add.c
msgid "git add [<options>] [--] <pathspec>..."
msgstr ""

#: builtin/add.c
#, c-format
msgid "unexpected diff status %c"
msgstr ""

#: builtin/add.c builtin/commit.c
msgid "updating files failed"
msgstr ""

#: builtin/add.c
#, c-format
msgid "remove '%s'\n"
msgstr ""

#: builtin/add.c
msgid "Unstaged changes after refreshing the index:"
msgstr ""

#: builtin/add.c builtin/rev-parse.c
msgid "Could not read the index"
msgstr ""

#: builtin/add.c
#, c-format
msgid "Could not open '%s' for writing."
msgstr ""

#: builtin/add.c
msgid "Could not write patch"
msgstr ""

#: builtin/add.c
msgid "editing patch failed"
msgstr ""

#: builtin/add.c
#, c-format
msgid "Could not stat '%s'"
msgstr ""

#: builtin/add.c
msgid "Empty patch. Aborted."
msgstr ""

#: builtin/add.c
#, c-format
msgid "Could not apply '%s'"
msgstr ""

#: builtin/add.c
msgid "The following paths are ignored by one of your .gitignore files:\n"
msgstr ""

#: builtin/add.c builtin/clean.c builtin/fetch.c builtin/mv.c
#: builtin/prune-packed.c builtin/pull.c builtin/push.c builtin/remote.c
#: builtin/rm.c builtin/send-pack.c
msgid "dry run"
msgstr ""

#: builtin/add.c builtin/apply.c builtin/check-ignore.c builtin/commit.c
#: builtin/count-objects.c builtin/fsck.c builtin/log.c builtin/mv.c
#: builtin/read-tree.c
msgid "be verbose"
msgstr ""

#: builtin/add.c
msgid "interactive picking"
msgstr ""

#: builtin/add.c builtin/checkout.c builtin/reset.c
msgid "select hunks interactively"
msgstr ""

#: builtin/add.c
msgid "edit current diff and apply"
msgstr ""

#: builtin/add.c
msgid "allow adding otherwise ignored files"
msgstr ""

#: builtin/add.c
msgid "update tracked files"
msgstr ""

#: builtin/add.c
msgid "record only the fact that the path will be added later"
msgstr ""

#: builtin/add.c
msgid "add changes from all tracked and untracked files"
msgstr ""

#: builtin/add.c
msgid "ignore paths removed in the working tree (same as --no-all)"
msgstr ""

#: builtin/add.c
msgid "don't add, only refresh the index"
msgstr ""

#: builtin/add.c
msgid "just skip files which cannot be added because of errors"
msgstr ""

#: builtin/add.c
msgid "check if - even missing - files are ignored in dry run"
msgstr ""

#: builtin/add.c
#, c-format
msgid "Use -f if you really want to add them.\n"
msgstr ""

#: builtin/add.c
msgid "adding files failed"
msgstr ""

#: builtin/add.c
msgid "-A and -u are mutually incompatible"
msgstr ""

#: builtin/add.c
msgid "Option --ignore-missing can only be used together with --dry-run"
msgstr ""

#: builtin/add.c
#, c-format
msgid "Nothing specified, nothing added.\n"
msgstr ""

#: builtin/add.c
#, c-format
msgid "Maybe you wanted to say 'git add .'?\n"
msgstr ""

#: builtin/add.c builtin/check-ignore.c builtin/clean.c builtin/commit.c
#: builtin/mv.c builtin/reset.c builtin/rm.c builtin/submodule--helper.c
msgid "index file corrupt"
msgstr ""

#: builtin/add.c builtin/apply.c builtin/mv.c builtin/rm.c
msgid "Unable to write new index file"
msgstr ""

#: builtin/am.c builtin/commit.c builtin/merge.c
#, c-format
msgid "could not read '%s'"
msgstr ""

#: builtin/am.c
msgid "could not parse author script"
msgstr ""

#: builtin/am.c
#, c-format
msgid "'%s' was deleted by the applypatch-msg hook"
msgstr ""

#: builtin/am.c builtin/notes.c
#, c-format
msgid "Malformed input line: '%s'."
msgstr ""

#: builtin/am.c builtin/notes.c
#, c-format
msgid "Failed to copy notes from '%s' to '%s'"
msgstr ""

#: builtin/am.c
msgid "fseek failed"
msgstr ""

#: builtin/am.c
#, c-format
msgid "could not parse patch '%s'"
msgstr ""

#: builtin/am.c
msgid "Only one StGIT patch series can be applied at once"
msgstr ""

#: builtin/am.c
msgid "invalid timestamp"
msgstr ""

#: builtin/am.c
msgid "invalid Date line"
msgstr ""

#: builtin/am.c
msgid "invalid timezone offset"
msgstr ""

#: builtin/am.c
msgid "Patch format detection failed."
msgstr ""

#: builtin/am.c builtin/clone.c
#, c-format
msgid "failed to create directory '%s'"
msgstr ""

#: builtin/am.c
msgid "Failed to split patches."
msgstr ""

#: builtin/am.c builtin/commit.c
msgid "unable to write index file"
msgstr ""

#: builtin/am.c
#, c-format
msgid "When you have resolved this problem, run \"%s --continue\"."
msgstr ""

#: builtin/am.c
#, c-format
msgid "If you prefer to skip this patch, run \"%s --skip\" instead."
msgstr ""

#: builtin/am.c
#, c-format
msgid "To restore the original branch and stop patching, run \"%s --abort\"."
msgstr ""

#: builtin/am.c
msgid "Patch is empty. Was it split wrong?"
msgstr ""

#: builtin/am.c builtin/log.c
#, c-format
msgid "invalid ident line: %s"
msgstr ""

#: builtin/am.c
#, c-format
msgid "unable to parse commit %s"
msgstr ""

#: builtin/am.c
msgid "Repository lacks necessary blobs to fall back on 3-way merge."
msgstr ""

#: builtin/am.c
msgid "Using index info to reconstruct a base tree..."
msgstr ""

#: builtin/am.c
msgid ""
"Did you hand edit your patch?\n"
"It does not apply to blobs recorded in its index."
msgstr ""

#: builtin/am.c
msgid "Falling back to patching base and 3-way merge..."
msgstr ""

#: builtin/am.c
msgid "Failed to merge in the changes."
msgstr ""

#: builtin/am.c builtin/merge.c
msgid "git write-tree failed to write a tree"
msgstr ""

#: builtin/am.c
msgid "applying to an empty history"
msgstr ""

#: builtin/am.c builtin/commit.c builtin/merge.c
msgid "failed to write commit object"
msgstr ""

#: builtin/am.c
#, c-format
msgid "cannot resume: %s does not exist."
msgstr ""

#: builtin/am.c
msgid "cannot be interactive without stdin connected to a terminal."
msgstr ""

#: builtin/am.c
msgid "Commit Body is:"
msgstr ""

#. TRANSLATORS: Make sure to include [y], [n], [e], [v] and [a]
#. in your translation. The program will only accept English
#. input at this point.
#.
#: builtin/am.c
msgid "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all: "
msgstr ""

#: builtin/am.c
#, c-format
msgid "Dirty index: cannot apply patches (dirty: %s)"
msgstr ""

#: builtin/am.c
#, c-format
msgid "Applying: %.*s"
msgstr ""

#: builtin/am.c
msgid "No changes -- Patch already applied."
msgstr ""

#: builtin/am.c
#, c-format
msgid "Patch failed at %s %.*s"
msgstr ""

#: builtin/am.c
#, c-format
msgid "The copy of the patch that failed is found in: %s"
msgstr ""

#: builtin/am.c
msgid ""
"No changes - did you forget to use 'git add'?\n"
"If there is nothing left to stage, chances are that something else\n"
"already introduced the same changes; you might want to skip this patch."
msgstr ""

#: builtin/am.c
msgid ""
"You still have unmerged paths in your index.\n"
"Did you forget to use 'git add'?"
msgstr ""

#: builtin/am.c builtin/reset.c
#, c-format
msgid "Could not parse object '%s'."
msgstr ""

#: builtin/am.c
msgid "failed to clean index"
msgstr ""

#: builtin/am.c
msgid ""
"You seem to have moved HEAD since the last 'am' failure.\n"
"Not rewinding to ORIG_HEAD"
msgstr ""

#: builtin/am.c
#, c-format
msgid "Invalid value for --patch-format: %s"
msgstr ""

#: builtin/am.c
msgid "git am [<options>] [(<mbox>|<Maildir>)...]"
msgstr ""

#: builtin/am.c
msgid "git am [<options>] (--continue | --skip | --abort)"
msgstr ""

#: builtin/am.c
msgid "run interactively"
msgstr ""

#: builtin/am.c
msgid "historical option -- no-op"
msgstr ""

#: builtin/am.c
msgid "allow fall back on 3way merging if needed"
msgstr ""

#: builtin/am.c builtin/init-db.c builtin/prune-packed.c builtin/repack.c
msgid "be quiet"
msgstr ""

#: builtin/am.c
msgid "add a Signed-off-by line to the commit message"
msgstr ""

#: builtin/am.c
msgid "recode into utf8 (default)"
msgstr ""

#: builtin/am.c
msgid "pass -k flag to git-mailinfo"
msgstr ""

#: builtin/am.c
msgid "pass -b flag to git-mailinfo"
msgstr ""

#: builtin/am.c
msgid "pass -m flag to git-mailinfo"
msgstr ""

#: builtin/am.c
msgid "pass --keep-cr flag to git-mailsplit for mbox format"
msgstr ""

#: builtin/am.c
msgid "do not pass --keep-cr flag to git-mailsplit independent of am.keepcr"
msgstr ""

#: builtin/am.c
msgid "strip everything before a scissors line"
msgstr ""

#: builtin/am.c builtin/apply.c
msgid "action"
msgstr ""

#: builtin/am.c
msgid "pass it through git-apply"
msgstr ""

#: builtin/am.c builtin/apply.c
msgid "root"
msgstr ""

#: builtin/am.c builtin/apply.c builtin/clone.c builtin/fetch.c builtin/pull.c
#: builtin/submodule--helper.c
msgid "path"
msgstr ""

#: builtin/am.c builtin/fmt-merge-msg.c builtin/grep.c builtin/merge.c
#: builtin/pull.c builtin/repack.c builtin/show-branch.c builtin/show-ref.c
#: builtin/tag.c parse-options.h
msgid "n"
msgstr ""

#: builtin/am.c builtin/apply.c
msgid "num"
msgstr ""

#: builtin/am.c builtin/for-each-ref.c builtin/replace.c builtin/tag.c
msgid "format"
msgstr ""

#: builtin/am.c
msgid "format the patch(es) are in"
msgstr ""

#: builtin/am.c
msgid "override error message when patch failure occurs"
msgstr ""

#: builtin/am.c
msgid "continue applying patches after resolving a conflict"
msgstr ""

#: builtin/am.c
msgid "synonyms for --continue"
msgstr ""

#: builtin/am.c
msgid "skip the current patch"
msgstr ""

#: builtin/am.c
msgid "restore the original branch and abort the patching operation."
msgstr ""

#: builtin/am.c
msgid "lie about committer date"
msgstr ""

#: builtin/am.c
msgid "use current timestamp for author date"
msgstr ""

#: builtin/am.c builtin/commit.c builtin/merge.c builtin/pull.c
#: builtin/revert.c builtin/tag.c
msgid "key-id"
msgstr ""

#: builtin/am.c
msgid "GPG-sign commits"
msgstr ""

#: builtin/am.c
msgid "(internal use for git-rebase)"
msgstr ""

#: builtin/am.c
msgid ""
"The -b/--binary option has been a no-op for long time, and\n"
"it will be removed. Please do not use it anymore."
msgstr ""

#: builtin/am.c
msgid "failed to read the index"
msgstr ""

#: builtin/am.c
#, c-format
msgid "previous rebase directory %s still exists but mbox given."
msgstr ""

#: builtin/am.c
#, c-format
msgid ""
"Stray %s directory found.\n"
"Use \"git am --abort\" to remove it."
msgstr ""

#: builtin/am.c
msgid "Resolve operation not in progress, we are not resuming."
msgstr ""

#: builtin/apply.c
msgid "git apply [<options>] [<patch>...]"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "unrecognized whitespace option '%s'"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "unrecognized whitespace ignore option '%s'"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "Cannot prepare timestamp regexp %s"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "regexec returned %d for input: %s"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "unable to find filename in patch at line %d"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "git apply: bad git-diff - expected /dev/null, got %s on line %d"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "git apply: bad git-diff - inconsistent new filename on line %d"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "git apply: bad git-diff - inconsistent old filename on line %d"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "git apply: bad git-diff - expected /dev/null on line %d"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "recount: unexpected line: %.*s"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "patch fragment without header at line %d: %.*s"
msgstr ""

#: builtin/apply.c
#, c-format
msgid ""
"git diff header lacks filename information when removing %d leading pathname "
"component (line %d)"
msgid_plural ""
"git diff header lacks filename information when removing %d leading pathname "
"components (line %d)"
msgstr[0] ""
msgstr[1] ""

#: builtin/apply.c
msgid "new file depends on old contents"
msgstr ""

#: builtin/apply.c
msgid "deleted file still has contents"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "corrupt patch at line %d"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "new file %s depends on old contents"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "deleted file %s still has contents"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "** warning: file %s becomes empty but is not deleted"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "corrupt binary patch at line %d: %.*s"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "unrecognized binary patch at line %d"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "patch with only garbage at line %d"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "unable to read symlink %s"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "unable to open or read %s"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "invalid start of line: '%c'"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "Hunk #%d succeeded at %d (offset %d line)."
msgid_plural "Hunk #%d succeeded at %d (offset %d lines)."
msgstr[0] ""
msgstr[1] ""

#: builtin/apply.c
#, c-format
msgid "Context reduced to (%ld/%ld) to apply fragment at %d"
msgstr ""

#: builtin/apply.c
#, c-format
msgid ""
"while searching for:\n"
"%.*s"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "missing binary patch data for '%s'"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "binary patch does not apply to '%s'"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "binary patch to '%s' creates incorrect result (expecting %s, got %s)"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "patch failed: %s:%ld"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "cannot checkout %s"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "read of %s failed"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "reading from '%s' beyond a symbolic link"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "path %s has been renamed/deleted"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "%s: does not exist in index"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "%s: %s"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "%s: does not match index"
msgstr ""

#: builtin/apply.c
msgid "removal patch leaves file contents"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "%s: wrong type"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "%s has type %o, expected %o"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "invalid path '%s'"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "%s: already exists in index"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "%s: already exists in working directory"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "new mode (%o) of %s does not match old mode (%o)"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "new mode (%o) of %s does not match old mode (%o) of %s"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "affected file '%s' is beyond a symbolic link"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "%s: patch does not apply"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "Checking patch %s..."
msgstr ""

#: builtin/apply.c builtin/checkout.c builtin/reset.c
#, c-format
msgid "make_cache_entry failed for path '%s'"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "unable to remove %s from index"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "corrupt patch for submodule %s"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "unable to stat newly created file '%s'"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "unable to create backing store for newly created file %s"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "unable to add cache entry for %s"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "closing file '%s'"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "unable to write file '%s' mode %o"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "Applied patch %s cleanly."
msgstr ""

#: builtin/apply.c
msgid "internal error"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "Applying patch %%s with %d reject..."
msgid_plural "Applying patch %%s with %d rejects..."
msgstr[0] ""
msgstr[1] ""

#: builtin/apply.c
#, c-format
msgid "truncating .rej filename to %.*s.rej"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "cannot open %s: %s"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "Hunk #%d applied cleanly."
msgstr ""

#: builtin/apply.c
#, c-format
msgid "Rejected hunk #%d."
msgstr ""

#: builtin/apply.c
#, c-format
msgid "Skipped patch '%s'."
msgstr ""

#: builtin/apply.c
msgid "unrecognized input"
msgstr ""

#: builtin/apply.c
msgid "unable to read index file"
msgstr ""

#: builtin/apply.c
msgid "don't apply changes matching the given path"
msgstr ""

#: builtin/apply.c
msgid "apply changes matching the given path"
msgstr ""

#: builtin/apply.c
msgid "remove <num> leading slashes from traditional diff paths"
msgstr ""

#: builtin/apply.c
msgid "ignore additions made by the patch"
msgstr ""

#: builtin/apply.c
msgid "instead of applying the patch, output diffstat for the input"
msgstr ""

#: builtin/apply.c
msgid "show number of added and deleted lines in decimal notation"
msgstr ""

#: builtin/apply.c
msgid "instead of applying the patch, output a summary for the input"
msgstr ""

#: builtin/apply.c
msgid "instead of applying the patch, see if the patch is applicable"
msgstr ""

#: builtin/apply.c
msgid "make sure the patch is applicable to the current index"
msgstr ""

#: builtin/apply.c
msgid "apply a patch without touching the working tree"
msgstr ""

#: builtin/apply.c
msgid "accept a patch that touches outside the working area"
msgstr ""

#: builtin/apply.c
msgid "also apply the patch (use with --stat/--summary/--check)"
msgstr ""

#: builtin/apply.c
msgid "attempt three-way merge if a patch does not apply"
msgstr ""

#: builtin/apply.c
msgid "build a temporary index based on embedded index information"
msgstr ""

#: builtin/apply.c builtin/checkout-index.c builtin/ls-files.c
msgid "paths are separated with NUL character"
msgstr ""

#: builtin/apply.c
msgid "ensure at least <n> lines of context match"
msgstr ""

#: builtin/apply.c
msgid "detect new or modified lines that have whitespace errors"
msgstr ""

#: builtin/apply.c
msgid "ignore changes in whitespace when finding context"
msgstr ""

#: builtin/apply.c
msgid "apply the patch in reverse"
msgstr ""

#: builtin/apply.c
msgid "don't expect at least one line of context"
msgstr ""

#: builtin/apply.c
msgid "leave the rejected hunks in corresponding *.rej files"
msgstr ""

#: builtin/apply.c
msgid "allow overlapping hunks"
msgstr ""

#: builtin/apply.c
msgid "tolerate incorrectly detected missing new-line at the end of file"
msgstr ""

#: builtin/apply.c
msgid "do not trust the line counts in the hunk headers"
msgstr ""

#: builtin/apply.c
msgid "prepend <root> to all filenames"
msgstr ""

#: builtin/apply.c
msgid "--3way outside a repository"
msgstr ""

#: builtin/apply.c
msgid "--index outside a repository"
msgstr ""

#: builtin/apply.c
msgid "--cached outside a repository"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "can't open patch '%s'"
msgstr ""

#: builtin/apply.c
#, c-format
msgid "squelched %d whitespace error"
msgid_plural "squelched %d whitespace errors"
msgstr[0] ""
msgstr[1] ""

#: builtin/apply.c
#, c-format
msgid "%d line adds whitespace errors."
msgid_plural "%d lines add whitespace errors."
msgstr[0] ""
msgstr[1] ""

#: builtin/archive.c
#, c-format
msgid "could not create archive file '%s'"
msgstr ""

#: builtin/archive.c
msgid "could not redirect output"
msgstr ""

#: builtin/archive.c
msgid "git archive: Remote with no URL"
msgstr ""

#: builtin/archive.c
msgid "git archive: expected ACK/NAK, got EOF"
msgstr ""

#: builtin/archive.c
#, c-format
msgid "git archive: NACK %s"
msgstr ""

#: builtin/archive.c
#, c-format
msgid "remote error: %s"
msgstr ""

#: builtin/archive.c
msgid "git archive: protocol error"
msgstr ""

#: builtin/archive.c
msgid "git archive: expected a flush"
msgstr ""

#: builtin/bisect--helper.c
msgid "git bisect--helper --next-all [--no-checkout]"
msgstr ""

#: builtin/bisect--helper.c
msgid "perform 'git bisect next'"
msgstr ""

#: builtin/bisect--helper.c
msgid "update BISECT_HEAD instead of checking out the current commit"
msgstr ""

#: builtin/blame.c
msgid "git blame [<options>] [<rev-opts>] [<rev>] [--] <file>"
msgstr ""

#: builtin/blame.c
msgid "<rev-opts> are documented in git-rev-list(1)"
msgstr ""

#: builtin/blame.c
msgid "Blaming lines"
msgstr ""

#: builtin/blame.c
msgid "Show blame entries as we find them, incrementally"
msgstr ""

#: builtin/blame.c
msgid "Show blank SHA-1 for boundary commits (Default: off)"
msgstr ""

#: builtin/blame.c
msgid "Do not treat root commits as boundaries (Default: off)"
msgstr ""

#: builtin/blame.c
msgid "Show work cost statistics"
msgstr ""

#: builtin/blame.c
msgid "Force progress reporting"
msgstr ""

#: builtin/blame.c
msgid "Show output score for blame entries"
msgstr ""

#: builtin/blame.c
msgid "Show original filename (Default: auto)"
msgstr ""

#: builtin/blame.c
msgid "Show original linenumber (Default: off)"
msgstr ""

#: builtin/blame.c
msgid "Show in a format designed for machine consumption"
msgstr ""

#: builtin/blame.c
msgid "Show porcelain format with per-line commit information"
msgstr ""

#: builtin/blame.c
msgid "Use the same output mode as git-annotate (Default: off)"
msgstr ""

#: builtin/blame.c
msgid "Show raw timestamp (Default: off)"
msgstr ""

#: builtin/blame.c
msgid "Show long commit SHA1 (Default: off)"
msgstr ""

#: builtin/blame.c
msgid "Suppress author name and timestamp (Default: off)"
msgstr ""

#: builtin/blame.c
msgid "Show author email instead of name (Default: off)"
msgstr ""

#: builtin/blame.c
msgid "Ignore whitespace differences"
msgstr ""

#: builtin/blame.c
msgid "Spend extra cycles to find better match"
msgstr ""

#: builtin/blame.c
msgid "Use revisions from <file> instead of calling git-rev-list"
msgstr ""

#: builtin/blame.c
msgid "Use <file>'s contents as the final image"
msgstr ""

#: builtin/blame.c
msgid "score"
msgstr ""

#: builtin/blame.c
msgid "Find line copies within and across files"
msgstr ""

#: builtin/blame.c
msgid "Find line movements within and across files"
msgstr ""

#: builtin/blame.c
msgid "n,m"
msgstr ""

#: builtin/blame.c
msgid "Process only line range n,m, counting from 1"
msgstr ""

#. TRANSLATORS: This string is used to tell us the maximum
#. display width for a relative timestamp in "git blame"
#. output.  For C locale, "4 years, 11 months ago", which
#. takes 22 places, is the longest among various forms of
#. relative timestamps, but your language may need more or
#. fewer display columns.
#: builtin/blame.c
msgid "4 years, 11 months ago"
msgstr ""

#: builtin/branch.c
msgid "git branch [<options>] [-r | -a] [--merged | --no-merged]"
msgstr ""

#: builtin/branch.c
msgid "git branch [<options>] [-l] [-f] <branch-name> [<start-point>]"
msgstr ""

#: builtin/branch.c
msgid "git branch [<options>] [-r] (-d | -D) <branch-name>..."
msgstr ""

#: builtin/branch.c
msgid "git branch [<options>] (-m | -M) [<old-branch>] <new-branch>"
msgstr ""

#: builtin/branch.c
msgid "git branch [<options>] [-r | -a] [--points-at]"
msgstr ""

#: builtin/branch.c
#, c-format
msgid ""
"deleting branch '%s' that has been merged to\n"
"         '%s', but not yet merged to HEAD."
msgstr ""

#: builtin/branch.c
#, c-format
msgid ""
"not deleting branch '%s' that is not yet merged to\n"
"         '%s', even though it is merged to HEAD."
msgstr ""

#: builtin/branch.c
#, c-format
msgid "Couldn't look up commit object for '%s'"
msgstr ""

#: builtin/branch.c
#, c-format
msgid ""
"The branch '%s' is not fully merged.\n"
"If you are sure you want to delete it, run 'git branch -D %s'."
msgstr ""

#: builtin/branch.c
msgid "Update of config-file failed"
msgstr ""

#: builtin/branch.c
msgid "cannot use -a with -d"
msgstr ""

#: builtin/branch.c
msgid "Couldn't look up commit object for HEAD"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "Cannot delete branch '%s' checked out at '%s'"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "remote-tracking branch '%s' not found."
msgstr ""

#: builtin/branch.c
#, c-format
msgid "branch '%s' not found."
msgstr ""

#: builtin/branch.c
#, c-format
msgid "Error deleting remote-tracking branch '%s'"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "Error deleting branch '%s'"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "Deleted remote-tracking branch %s (was %s).\n"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "Deleted branch %s (was %s).\n"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "[%s: gone]"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "[%s]"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "[%s: behind %d]"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "[behind %d]"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "[%s: ahead %d]"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "[ahead %d]"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "[%s: ahead %d, behind %d]"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "[ahead %d, behind %d]"
msgstr ""

#: builtin/branch.c
msgid " **** invalid ref ****"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "(no branch, rebasing %s)"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "(no branch, bisect started on %s)"
msgstr ""

#. TRANSLATORS: make sure this matches
#. "HEAD detached at " in wt-status.c
#: builtin/branch.c
#, c-format
msgid "(HEAD detached at %s)"
msgstr ""

#. TRANSLATORS: make sure this matches
#. "HEAD detached from " in wt-status.c
#: builtin/branch.c
#, c-format
msgid "(HEAD detached from %s)"
msgstr ""

#: builtin/branch.c
msgid "(no branch)"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "Branch %s is being rebased at %s"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "Branch %s is being bisected at %s"
msgstr ""

#: builtin/branch.c
msgid "cannot rename the current branch while not on any."
msgstr ""

#: builtin/branch.c
#, c-format
msgid "Invalid branch name: '%s'"
msgstr ""

#: builtin/branch.c
msgid "Branch rename failed"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "Renamed a misnamed branch '%s' away"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "Branch renamed to %s, but HEAD is not updated!"
msgstr ""

#: builtin/branch.c
msgid "Branch is renamed, but update of config-file failed"
msgstr ""

#: builtin/branch.c
msgid "could not write branch description template"
msgstr ""

#: builtin/branch.c
msgid "Generic options"
msgstr ""

#: builtin/branch.c
msgid "show hash and subject, give twice for upstream branch"
msgstr ""

#: builtin/branch.c
msgid "suppress informational messages"
msgstr ""

#: builtin/branch.c
msgid "set up tracking mode (see git-pull(1))"
msgstr ""

#: builtin/branch.c
msgid "change upstream info"
msgstr ""

#: builtin/branch.c
msgid "upstream"
msgstr ""

#: builtin/branch.c
msgid "change the upstream info"
msgstr ""

#: builtin/branch.c
msgid "use colored output"
msgstr ""

#: builtin/branch.c
msgid "act on remote-tracking branches"
msgstr ""

#: builtin/branch.c
msgid "print only branches that contain the commit"
msgstr ""

#: builtin/branch.c
msgid "Specific git-branch actions:"
msgstr ""

#: builtin/branch.c
msgid "list both remote-tracking and local branches"
msgstr ""

#: builtin/branch.c
msgid "delete fully merged branch"
msgstr ""

#: builtin/branch.c
msgid "delete branch (even if not merged)"
msgstr ""

#: builtin/branch.c
msgid "move/rename a branch and its reflog"
msgstr ""

#: builtin/branch.c
msgid "move/rename a branch, even if target exists"
msgstr ""

#: builtin/branch.c
msgid "list branch names"
msgstr ""

#: builtin/branch.c
msgid "create the branch's reflog"
msgstr ""

#: builtin/branch.c
msgid "edit the description for the branch"
msgstr ""

#: builtin/branch.c
msgid "force creation, move/rename, deletion"
msgstr ""

#: builtin/branch.c
msgid "print only branches that are merged"
msgstr ""

#: builtin/branch.c
msgid "print only branches that are not merged"
msgstr ""

#: builtin/branch.c
msgid "list branches in columns"
msgstr ""

#: builtin/branch.c builtin/for-each-ref.c builtin/tag.c
msgid "key"
msgstr ""

#: builtin/branch.c builtin/for-each-ref.c builtin/tag.c
msgid "field name to sort on"
msgstr ""

#: builtin/branch.c builtin/for-each-ref.c builtin/notes.c builtin/tag.c
msgid "object"
msgstr ""

#: builtin/branch.c
msgid "print only branches of the object"
msgstr ""

#: builtin/branch.c
msgid "Failed to resolve HEAD as a valid ref."
msgstr ""

#: builtin/branch.c builtin/clone.c
msgid "HEAD not found below refs/heads!"
msgstr ""

#: builtin/branch.c
msgid "--column and --verbose are incompatible"
msgstr ""

#: builtin/branch.c
msgid "branch name required"
msgstr ""

#: builtin/branch.c
msgid "Cannot give description to detached HEAD"
msgstr ""

#: builtin/branch.c
msgid "cannot edit description of more than one branch"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "No commit on branch '%s' yet."
msgstr ""

#: builtin/branch.c
#, c-format
msgid "No branch named '%s'."
msgstr ""

#: builtin/branch.c
msgid "too many branches for a rename operation"
msgstr ""

#: builtin/branch.c
msgid "too many branches to set new upstream"
msgstr ""

#: builtin/branch.c
#, c-format
msgid ""
"could not set upstream of HEAD to %s when it does not point to any branch."
msgstr ""

#: builtin/branch.c
#, c-format
msgid "no such branch '%s'"
msgstr ""

#: builtin/branch.c
#, c-format
msgid "branch '%s' does not exist"
msgstr ""

#: builtin/branch.c
msgid "too many branches to unset upstream"
msgstr ""

#: builtin/branch.c
msgid "could not unset upstream of HEAD when it does not point to any branch."
msgstr ""

#: builtin/branch.c
#, c-format
msgid "Branch '%s' has no upstream information"
msgstr ""

#: builtin/branch.c
msgid "it does not make sense to create 'HEAD' manually"
msgstr ""

#: builtin/branch.c
msgid "-a and -r options to 'git branch' do not make sense with a branch name"
msgstr ""

#: builtin/branch.c
#, c-format
msgid ""
"The --set-upstream flag is deprecated and will be removed. Consider using --"
"track or --set-upstream-to\n"
msgstr ""

#: builtin/branch.c
#, c-format
msgid ""
"\n"
"If you wanted to make '%s' track '%s', do this:\n"
"\n"
msgstr ""

#: builtin/bundle.c
#, c-format
msgid "%s is okay\n"
msgstr ""

#: builtin/bundle.c
msgid "Need a repository to create a bundle."
msgstr ""

#: builtin/bundle.c
msgid "Need a repository to unbundle."
msgstr ""

#: builtin/cat-file.c
msgid ""
"git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-type]|-e|-p|"
"<type>|--textconv) <object>"
msgstr ""

#: builtin/cat-file.c
msgid "git cat-file (--batch | --batch-check) [--follow-symlinks]"
msgstr ""

#: builtin/cat-file.c
msgid "<type> can be one of: blob, tree, commit, tag"
msgstr ""

#: builtin/cat-file.c
msgid "show object type"
msgstr ""

#: builtin/cat-file.c
msgid "show object size"
msgstr ""

#: builtin/cat-file.c
msgid "exit with zero when there's no error"
msgstr ""

#: builtin/cat-file.c
msgid "pretty-print object's content"
msgstr ""

#: builtin/cat-file.c
msgid "for blob objects, run textconv on object's content"
msgstr ""

#: builtin/cat-file.c
msgid "allow -s and -t to work with broken/corrupt objects"
msgstr ""

#: builtin/cat-file.c
msgid "buffer --batch output"
msgstr ""

#: builtin/cat-file.c
msgid "show info and content of objects fed from the standard input"
msgstr ""

#: builtin/cat-file.c
msgid "show info about objects fed from the standard input"
msgstr ""

#: builtin/cat-file.c
msgid "follow in-tree symlinks (used with --batch or --batch-check)"
msgstr ""

#: builtin/cat-file.c
msgid "show all objects with --batch or --batch-check"
msgstr ""

#: builtin/check-attr.c
msgid "git check-attr [-a | --all | <attr>...] [--] <pathname>..."
msgstr ""

#: builtin/check-attr.c
msgid "git check-attr --stdin [-z] [-a | --all | <attr>...]"
msgstr ""

#: builtin/check-attr.c
msgid "report all attributes set on file"
msgstr ""

#: builtin/check-attr.c
msgid "use .gitattributes only from the index"
msgstr ""

#: builtin/check-attr.c builtin/check-ignore.c builtin/hash-object.c
msgid "read file names from stdin"
msgstr ""

#: builtin/check-attr.c builtin/check-ignore.c
msgid "terminate input and output records by a NUL character"
msgstr ""

#: builtin/check-ignore.c builtin/checkout.c builtin/gc.c
msgid "suppress progress reporting"
msgstr ""

#: builtin/check-ignore.c
msgid "show non-matching input paths"
msgstr ""

#: builtin/check-ignore.c
msgid "ignore index when checking"
msgstr ""

#: builtin/check-ignore.c
msgid "cannot specify pathnames with --stdin"
msgstr ""

#: builtin/check-ignore.c
msgid "-z only makes sense with --stdin"
msgstr ""

#: builtin/check-ignore.c
msgid "no path specified"
msgstr ""

#: builtin/check-ignore.c
msgid "--quiet is only valid with a single pathname"
msgstr ""

#: builtin/check-ignore.c
msgid "cannot have both --quiet and --verbose"
msgstr ""

#: builtin/check-ignore.c
msgid "--non-matching is only valid with --verbose"
msgstr ""

#: builtin/check-mailmap.c
msgid "git check-mailmap [<options>] <contact>..."
msgstr ""

#: builtin/check-mailmap.c
msgid "also read contacts from stdin"
msgstr ""

#: builtin/check-mailmap.c
#, c-format
msgid "unable to parse contact: %s"
msgstr ""

#: builtin/check-mailmap.c
msgid "no contacts specified"
msgstr ""

#: builtin/checkout-index.c
msgid "git checkout-index [<options>] [--] [<file>...]"
msgstr ""

#: builtin/checkout-index.c
msgid "stage should be between 1 and 3 or all"
msgstr ""

#: builtin/checkout-index.c
msgid "check out all files in the index"
msgstr ""

#: builtin/checkout-index.c
msgid "force overwrite of existing files"
msgstr ""

#: builtin/checkout-index.c
msgid "no warning for existing files and files not in index"
msgstr ""

#: builtin/checkout-index.c
msgid "don't checkout new files"
msgstr ""

#: builtin/checkout-index.c
msgid "update stat information in the index file"
msgstr ""

#: builtin/checkout-index.c
msgid "read list of paths from the standard input"
msgstr ""

#: builtin/checkout-index.c
msgid "write the content to temporary files"
msgstr ""

#: builtin/checkout-index.c builtin/column.c builtin/submodule--helper.c
msgid "string"
msgstr ""

#: builtin/checkout-index.c
msgid "when creating files, prepend <string>"
msgstr ""

#: builtin/checkout-index.c
msgid "copy out the files from named stage"
msgstr ""

#: builtin/checkout.c
msgid "git checkout [<options>] <branch>"
msgstr ""

#: builtin/checkout.c
msgid "git checkout [<options>] [<branch>] -- <file>..."
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "path '%s' does not have our version"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "path '%s' does not have their version"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "path '%s' does not have all necessary versions"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "path '%s' does not have necessary versions"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "path '%s': cannot merge"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "Unable to add merge result for '%s'"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "'%s' cannot be used with updating paths"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "'%s' cannot be used with %s"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "Cannot update paths and switch to branch '%s' at the same time."
msgstr ""

#: builtin/checkout.c
msgid "corrupt index file"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "path '%s' is unmerged"
msgstr ""

#: builtin/checkout.c
msgid "you need to resolve your current index first"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "Can not do reflog for '%s': %s\n"
msgstr ""

#: builtin/checkout.c
msgid "HEAD is now at"
msgstr ""

#: builtin/checkout.c builtin/clone.c
msgid "unable to update HEAD"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "Reset branch '%s'\n"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "Already on '%s'\n"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "Switched to and reset branch '%s'\n"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "Switched to a new branch '%s'\n"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "Switched to branch '%s'\n"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid " ... and %d more.\n"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid ""
"Warning: you are leaving %d commit behind, not connected to\n"
"any of your branches:\n"
"\n"
"%s\n"
msgid_plural ""
"Warning: you are leaving %d commits behind, not connected to\n"
"any of your branches:\n"
"\n"
"%s\n"
msgstr[0] ""
msgstr[1] ""

#: builtin/checkout.c
#, c-format
msgid ""
"If you want to keep it by creating a new branch, this may be a good time\n"
"to do so with:\n"
"\n"
" git branch <new-branch-name> %s\n"
"\n"
msgid_plural ""
"If you want to keep them by creating a new branch, this may be a good time\n"
"to do so with:\n"
"\n"
" git branch <new-branch-name> %s\n"
"\n"
msgstr[0] ""
msgstr[1] ""

#: builtin/checkout.c
msgid "internal error in revision walk"
msgstr ""

#: builtin/checkout.c
msgid "Previous HEAD position was"
msgstr ""

#: builtin/checkout.c
msgid "You are on a branch yet to be born"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "only one reference expected, %d given."
msgstr ""

#: builtin/checkout.c builtin/worktree.c
#, c-format
msgid "invalid reference: %s"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "reference is not a tree: %s"
msgstr ""

#: builtin/checkout.c
msgid "paths cannot be used with switching branches"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "'%s' cannot be used with switching branches"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "'%s' cannot be used with '%s'"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "Cannot switch branch to a non-commit '%s'"
msgstr ""

#: builtin/checkout.c builtin/clone.c builtin/remote.c builtin/worktree.c
msgid "branch"
msgstr ""

#: builtin/checkout.c
msgid "create and checkout a new branch"
msgstr ""

#: builtin/checkout.c
msgid "create/reset and checkout a branch"
msgstr ""

#: builtin/checkout.c
msgid "create reflog for new branch"
msgstr ""

#: builtin/checkout.c
msgid "detach the HEAD at named commit"
msgstr ""

#: builtin/checkout.c
msgid "set upstream info for new branch"
msgstr ""

#: builtin/checkout.c
msgid "new-branch"
msgstr ""

#: builtin/checkout.c
msgid "new unparented branch"
msgstr ""

#: builtin/checkout.c
msgid "checkout our version for unmerged files"
msgstr ""

#: builtin/checkout.c
msgid "checkout their version for unmerged files"
msgstr ""

#: builtin/checkout.c
msgid "force checkout (throw away local modifications)"
msgstr ""

#: builtin/checkout.c
msgid "perform a 3-way merge with the new branch"
msgstr ""

#: builtin/checkout.c builtin/merge.c
msgid "update ignored files (default)"
msgstr ""

#: builtin/checkout.c builtin/log.c parse-options.h
msgid "style"
msgstr ""

#: builtin/checkout.c
msgid "conflict style (merge or diff3)"
msgstr ""

#: builtin/checkout.c
msgid "do not limit pathspecs to sparse entries only"
msgstr ""

#: builtin/checkout.c
msgid "second guess 'git checkout <no-such-branch>'"
msgstr ""

#: builtin/checkout.c
msgid "do not check if another worktree is holding the given ref"
msgstr ""

#: builtin/checkout.c builtin/clone.c builtin/fetch.c builtin/merge.c
#: builtin/pull.c builtin/push.c builtin/send-pack.c
msgid "force progress reporting"
msgstr ""

#: builtin/checkout.c
msgid "-b, -B and --orphan are mutually exclusive"
msgstr ""

#: builtin/checkout.c
msgid "--track needs a branch name"
msgstr ""

#: builtin/checkout.c
msgid "Missing branch name; try -b"
msgstr ""

#: builtin/checkout.c
msgid "invalid path specification"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid ""
"Cannot update paths and switch to branch '%s' at the same time.\n"
"Did you intend to checkout '%s' which can not be resolved as commit?"
msgstr ""

#: builtin/checkout.c
#, c-format
msgid "git checkout: --detach does not take a path argument '%s'"
msgstr ""

#: builtin/checkout.c
msgid ""
"git checkout: --ours/--theirs, --force and --merge are incompatible when\n"
"checking out of the index."
msgstr ""

#: builtin/clean.c
msgid ""
"git clean [-d] [-f] [-i] [-n] [-q] [-e <pattern>] [-x | -X] [--] <paths>..."
msgstr ""

#: builtin/clean.c
#, c-format
msgid "Removing %s\n"
msgstr ""

#: builtin/clean.c
#, c-format
msgid "Would remove %s\n"
msgstr ""

#: builtin/clean.c
#, c-format
msgid "Skipping repository %s\n"
msgstr ""

#: builtin/clean.c
#, c-format
msgid "Would skip repository %s\n"
msgstr ""

#: builtin/clean.c
#, c-format
msgid "failed to remove %s"
msgstr ""

#: builtin/clean.c
msgid ""
"Prompt help:\n"
"1          - select a numbered item\n"
"foo        - select item based on unique prefix\n"
"           - (empty) select nothing"
msgstr ""

#: builtin/clean.c
msgid ""
"Prompt help:\n"
"1          - select a single item\n"
"3-5        - select a range of items\n"
"2-3,6-9    - select multiple ranges\n"
"foo        - select item based on unique prefix\n"
"-...       - unselect specified items\n"
"*          - choose all items\n"
"           - (empty) finish selecting"
msgstr ""

#: builtin/clean.c
#, c-format
msgid "Huh (%s)?"
msgstr ""

#: builtin/clean.c
#, c-format
msgid "Input ignore patterns>> "
msgstr ""

#: builtin/clean.c
#, c-format
msgid "WARNING: Cannot find items matched by: %s"
msgstr ""

#: builtin/clean.c
msgid "Select items to delete"
msgstr ""

#. TRANSLATORS: Make sure to keep [y/N] as is
#: builtin/clean.c
#, c-format
msgid "Remove %s [y/N]? "
msgstr ""

#: builtin/clean.c
msgid "Bye."
msgstr ""

#: builtin/clean.c
msgid ""
"clean               - start cleaning\n"
"filter by pattern   - exclude items from deletion\n"
"select by numbers   - select items to be deleted by numbers\n"
"ask each            - confirm each deletion (like \"rm -i\")\n"
"quit                - stop cleaning\n"
"help                - this screen\n"
"?                   - help for prompt selection"
msgstr ""

#: builtin/clean.c
msgid "*** Commands ***"
msgstr ""

#: builtin/clean.c
msgid "What now"
msgstr ""

#: builtin/clean.c
msgid "Would remove the following item:"
msgid_plural "Would remove the following items:"
msgstr[0] ""
msgstr[1] ""

#: builtin/clean.c
msgid "No more files to clean, exiting."
msgstr ""

#: builtin/clean.c
msgid "do not print names of files removed"
msgstr ""

#: builtin/clean.c
msgid "force"
msgstr ""

#: builtin/clean.c
msgid "interactive cleaning"
msgstr ""

#: builtin/clean.c
msgid "remove whole directories"
msgstr ""

#: builtin/clean.c builtin/describe.c builtin/grep.c builtin/ls-files.c
#: builtin/name-rev.c builtin/show-ref.c
msgid "pattern"
msgstr ""

#: builtin/clean.c
msgid "add <pattern> to ignore rules"
msgstr ""

#: builtin/clean.c
msgid "remove ignored files, too"
msgstr ""

#: builtin/clean.c
msgid "remove only ignored files"
msgstr ""

#: builtin/clean.c
msgid "-x and -X cannot be used together"
msgstr ""

#: builtin/clean.c
msgid ""
"clean.requireForce set to true and neither -i, -n, nor -f given; refusing to "
"clean"
msgstr ""

#: builtin/clean.c
msgid ""
"clean.requireForce defaults to true and neither -i, -n, nor -f given; "
"refusing to clean"
msgstr ""

#: builtin/clone.c
msgid "git clone [<options>] [--] <repo> [<dir>]"
msgstr ""

#: builtin/clone.c
msgid "don't create a checkout"
msgstr ""

#: builtin/clone.c builtin/init-db.c
msgid "create a bare repository"
msgstr ""

#: builtin/clone.c
msgid "create a mirror repository (implies bare)"
msgstr ""

#: builtin/clone.c
msgid "to clone from a local repository"
msgstr ""

#: builtin/clone.c
msgid "don't use local hardlinks, always copy"
msgstr ""

#: builtin/clone.c
msgid "setup as shared repository"
msgstr ""

#: builtin/clone.c
msgid "initialize submodules in the clone"
msgstr ""

#: builtin/clone.c
msgid "number of submodules cloned in parallel"
msgstr ""

#: builtin/clone.c builtin/init-db.c
msgid "template-directory"
msgstr ""

#: builtin/clone.c builtin/init-db.c
msgid "directory from which templates will be used"
msgstr ""

#: builtin/clone.c builtin/submodule--helper.c
msgid "reference repository"
msgstr ""

#: builtin/clone.c
msgid "use --reference only while cloning"
msgstr ""

#: builtin/clone.c builtin/column.c builtin/merge-file.c
msgid "name"
msgstr ""

#: builtin/clone.c
msgid "use <name> instead of 'origin' to track upstream"
msgstr ""

#: builtin/clone.c
msgid "checkout <branch> instead of the remote's HEAD"
msgstr ""

#: builtin/clone.c
msgid "path to git-upload-pack on the remote"
msgstr ""

#: builtin/clone.c builtin/fetch.c builtin/grep.c builtin/pull.c
msgid "depth"
msgstr ""

#: builtin/clone.c
msgid "create a shallow clone of that depth"
msgstr ""

#: builtin/clone.c
msgid "clone only one branch, HEAD or --branch"
msgstr ""

#: builtin/clone.c
msgid "any cloned submodules will be shallow"
msgstr ""

#: builtin/clone.c builtin/init-db.c
msgid "gitdir"
msgstr ""

#: builtin/clone.c builtin/init-db.c
msgid "separate git dir from working tree"
msgstr ""

#: builtin/clone.c
msgid "key=value"
msgstr ""

#: builtin/clone.c
msgid "set config inside the new repository"
msgstr ""

#: builtin/clone.c builtin/fetch.c builtin/push.c
msgid "use IPv4 addresses only"
msgstr ""

#: builtin/clone.c builtin/fetch.c builtin/push.c
msgid "use IPv6 addresses only"
msgstr ""

#: builtin/clone.c
msgid ""
"No directory name could be guessed.\n"
"Please specify a directory on the command line"
msgstr ""

#: builtin/clone.c
#, c-format
msgid "reference repository '%s' as a linked checkout is not supported yet."
msgstr ""

#: builtin/clone.c
#, c-format
msgid "reference repository '%s' is not a local repository."
msgstr ""

#: builtin/clone.c
#, c-format
msgid "reference repository '%s' is shallow"
msgstr ""

#: builtin/clone.c
#, c-format
msgid "reference repository '%s' is grafted"
msgstr ""

#: builtin/clone.c
#, c-format
msgid "%s exists and is not a directory"
msgstr ""

#: builtin/clone.c
#, c-format
msgid "failed to stat %s\n"
msgstr ""

#: builtin/clone.c
#, c-format
msgid "failed to create link '%s'"
msgstr ""

#: builtin/clone.c
#, c-format
msgid "failed to copy file to '%s'"
msgstr ""

#: builtin/clone.c
#, c-format
msgid "done.\n"
msgstr ""

#: builtin/clone.c
msgid ""
"Clone succeeded, but checkout failed.\n"
"You can inspect what was checked out with 'git status'\n"
"and retry the checkout with 'git checkout -f HEAD'\n"
msgstr ""

#: builtin/clone.c
#, c-format
msgid "Could not find remote branch %s to clone."
msgstr ""

#: builtin/clone.c
#, c-format
msgid "Checking connectivity... "
msgstr ""

#: builtin/clone.c
msgid "remote did not send all necessary objects"
msgstr ""

#: builtin/clone.c
#, c-format
msgid "unable to update %s"
msgstr ""

#: builtin/clone.c
msgid "remote HEAD refers to nonexistent ref, unable to checkout.\n"
msgstr ""

#: builtin/clone.c
msgid "unable to checkout working tree"
msgstr ""

#: builtin/clone.c
msgid "unable to write parameters to config file"
msgstr ""

#: builtin/clone.c
msgid "cannot repack to clean up"
msgstr ""

#: builtin/clone.c
msgid "cannot unlink temporary alternates file"
msgstr ""

#: builtin/clone.c builtin/receive-pack.c
msgid "Too many arguments."
msgstr ""

#: builtin/clone.c
msgid "You must specify a repository to clone."
msgstr ""

#: builtin/clone.c
#, c-format
msgid "--bare and --origin %s options are incompatible."
msgstr ""

#: builtin/clone.c
msgid "--bare and --separate-git-dir are incompatible."
msgstr ""

#: builtin/clone.c
#, c-format
msgid "repository '%s' does not exist"
msgstr ""

#: builtin/clone.c builtin/fetch.c
#, c-format
msgid "depth %s is not a positive number"
msgstr ""

#: builtin/clone.c
#, c-format
msgid "destination path '%s' already exists and is not an empty directory."
msgstr ""

#: builtin/clone.c
#, c-format
msgid "working tree '%s' already exists."
msgstr ""

#: builtin/clone.c builtin/submodule--helper.c builtin/worktree.c
#, c-format
msgid "could not create leading directories of '%s'"
msgstr ""

#: builtin/clone.c
#, c-format
msgid "could not create work tree dir '%s'"
msgstr ""

#: builtin/clone.c
#, c-format
msgid "Cloning into bare repository '%s'...\n"
msgstr ""

#: builtin/clone.c
#, c-format
msgid "Cloning into '%s'...\n"
msgstr ""

#: builtin/clone.c
msgid "--depth is ignored in local clones; use file:// instead."
msgstr ""

#: builtin/clone.c
msgid "source repository is shallow, ignoring --local"
msgstr ""

#: builtin/clone.c
msgid "--local is ignored"
msgstr ""

#: builtin/clone.c
#, c-format
msgid "Don't know how to clone %s"
msgstr ""

#: builtin/clone.c
#, c-format
msgid "Remote branch %s not found in upstream %s"
msgstr ""

#: builtin/clone.c
msgid "You appear to have cloned an empty repository."
msgstr ""

#: builtin/column.c
msgid "git column [<options>]"
msgstr ""

#: builtin/column.c
msgid "lookup config vars"
msgstr ""

#: builtin/column.c
msgid "layout to use"
msgstr ""

#: builtin/column.c
msgid "Maximum width"
msgstr ""

#: builtin/column.c
msgid "Padding space on left border"
msgstr ""

#: builtin/column.c
msgid "Padding space on right border"
msgstr ""

#: builtin/column.c
msgid "Padding space between columns"
msgstr ""

#: builtin/column.c
msgid "--command must be the first argument"
msgstr ""

#: builtin/commit.c
msgid "git commit [<options>] [--] <pathspec>..."
msgstr ""

#: builtin/commit.c
msgid "git status [<options>] [--] <pathspec>..."
msgstr ""

#: builtin/commit.c
msgid ""
"Your name and email address were configured automatically based\n"
"on your username and hostname. Please check that they are accurate.\n"
"You can suppress this message by setting them explicitly. Run the\n"
"following command and follow the instructions in your editor to edit\n"
"your configuration file:\n"
"\n"
"    git config --global --edit\n"
"\n"
"After doing this, you may fix the identity used for this commit with:\n"
"\n"
"    git commit --amend --reset-author\n"
msgstr ""

#: builtin/commit.c
msgid ""
"Your name and email address were configured automatically based\n"
"on your username and hostname. Please check that they are accurate.\n"
"You can suppress this message by setting them explicitly:\n"
"\n"
"    git config --global user.name \"Your Name\"\n"
"    git config --global user.email you@example.com\n"
"\n"
"After doing this, you may fix the identity used for this commit with:\n"
"\n"
"    git commit --amend --reset-author\n"
msgstr ""

#: builtin/commit.c
msgid ""
"You asked to amend the most recent commit, but doing so would make\n"
"it empty. You can repeat your command with --allow-empty, or you can\n"
"remove the commit entirely with \"git reset HEAD^\".\n"
msgstr ""

#: builtin/commit.c
msgid ""
"The previous cherry-pick is now empty, possibly due to conflict resolution.\n"
"If you wish to commit it anyway, use:\n"
"\n"
"    git commit --allow-empty\n"
"\n"
msgstr ""

#: builtin/commit.c
msgid "Otherwise, please use 'git reset'\n"
msgstr ""

#: builtin/commit.c
msgid ""
"If you wish to skip this commit, use:\n"
"\n"
"    git reset\n"
"\n"
"Then \"git cherry-pick --continue\" will resume cherry-picking\n"
"the remaining commits.\n"
msgstr ""

#: builtin/commit.c
msgid "failed to unpack HEAD tree object"
msgstr ""

#: builtin/commit.c
msgid "unable to create temporary index"
msgstr ""

#: builtin/commit.c
msgid "interactive add failed"
msgstr ""

#: builtin/commit.c
msgid "unable to update temporary index"
msgstr ""

#: builtin/commit.c
msgid "Failed to update main cache tree"
msgstr ""

#: builtin/commit.c
msgid "unable to write new_index file"
msgstr ""

#: builtin/commit.c
msgid "cannot do a partial commit during a merge."
msgstr ""

#: builtin/commit.c
msgid "cannot do a partial commit during a cherry-pick."
msgstr ""

#: builtin/commit.c
msgid "cannot read the index"
msgstr ""

#: builtin/commit.c
msgid "unable to write temporary index file"
msgstr ""

#: builtin/commit.c
#, c-format
msgid "commit '%s' lacks author header"
msgstr ""

#: builtin/commit.c
#, c-format
msgid "commit '%s' has malformed author line"
msgstr ""

#: builtin/commit.c
msgid "malformed --author parameter"
msgstr ""

#: builtin/commit.c
#, c-format
msgid "invalid date format: %s"
msgstr ""

#: builtin/commit.c
msgid ""
"unable to select a comment character that is not used\n"
"in the current commit message"
msgstr ""

#: builtin/commit.c
#, c-format
msgid "could not lookup commit %s"
msgstr ""

#: builtin/commit.c builtin/shortlog.c
#, c-format
msgid "(reading log message from standard input)\n"
msgstr ""

#: builtin/commit.c
msgid "could not read log from standard input"
msgstr ""

#: builtin/commit.c
#, c-format
msgid "could not read log file '%s'"
msgstr ""

#: builtin/commit.c
msgid "could not read SQUASH_MSG"
msgstr ""

#: builtin/commit.c
msgid "could not read MERGE_MSG"
msgstr ""

#: builtin/commit.c
msgid "could not write commit template"
msgstr ""

#: builtin/commit.c
#, c-format
msgid ""
"\n"
"It looks like you may be committing a merge.\n"
"If this is not correct, please remove the file\n"
"\t%s\n"
"and try again.\n"
msgstr ""

#: builtin/commit.c
#, c-format
msgid ""
"\n"
"It looks like you may be committing a cherry-pick.\n"
"If this is not correct, please remove the file\n"
"\t%s\n"
"and try again.\n"
msgstr ""

#: builtin/commit.c
#, c-format
msgid ""
"Please enter the commit message for your changes. Lines starting\n"
"with '%c' will be ignored, and an empty message aborts the commit.\n"
msgstr ""

#: builtin/commit.c
#, c-format
msgid ""
"Please enter the commit message for your changes. Lines starting\n"
"with '%c' will be kept; you may remove them yourself if you want to.\n"
"An empty message aborts the commit.\n"
msgstr ""

#: builtin/commit.c
#, c-format
msgid "%sAuthor:    %.*s <%.*s>"
msgstr ""

#: builtin/commit.c
#, c-format
msgid "%sDate:      %s"
msgstr ""

#: builtin/commit.c
#, c-format
msgid "%sCommitter: %.*s <%.*s>"
msgstr ""

#: builtin/commit.c
msgid "Cannot read index"
msgstr ""

#: builtin/commit.c
msgid "Error building trees"
msgstr ""

#: builtin/commit.c builtin/tag.c
#, c-format
msgid "Please supply the message using either -m or -F option.\n"
msgstr ""

#: builtin/commit.c
#, c-format
msgid "--author '%s' is not 'Name <email>' and matches no existing author"
msgstr ""

#: builtin/commit.c
#, c-format
msgid "Invalid untracked files mode '%s'"
msgstr ""

#: builtin/commit.c
msgid "--long and -z are incompatible"
msgstr ""

#: builtin/commit.c
msgid "Using both --reset-author and --author does not make sense"
msgstr ""

#: builtin/commit.c
msgid "You have nothing to amend."
msgstr ""

#: builtin/commit.c
msgid "You are in the middle of a merge -- cannot amend."
msgstr ""

#: builtin/commit.c
msgid "You are in the middle of a cherry-pick -- cannot amend."
msgstr ""

#: builtin/commit.c
msgid "Options --squash and --fixup cannot be used together"
msgstr ""

#: builtin/commit.c
msgid "Only one of -c/-C/-F/--fixup can be used."
msgstr ""

#: builtin/commit.c
msgid "Option -m cannot be combined with -c/-C/-F/--fixup."
msgstr ""

#: builtin/commit.c
msgid "--reset-author can be used only with -C, -c or --amend."
msgstr ""

#: builtin/commit.c
msgid "Only one of --include/--only/--all/--interactive/--patch can be used."
msgstr ""

#: builtin/commit.c
msgid "No paths with --include/--only does not make sense."
msgstr ""

#: builtin/commit.c
msgid "Clever... amending the last one with dirty index."
msgstr ""

#: builtin/commit.c
msgid "Explicit paths specified without -i or -o; assuming --only paths..."
msgstr ""

#: builtin/commit.c builtin/tag.c
#, c-format
msgid "Invalid cleanup mode %s"
msgstr ""

#: builtin/commit.c
msgid "Paths with -a does not make sense."
msgstr ""

#: builtin/commit.c
msgid "show status concisely"
msgstr ""

#: builtin/commit.c
msgid "show branch information"
msgstr ""

#: builtin/commit.c builtin/push.c builtin/worktree.c
msgid "machine-readable output"
msgstr ""

#: builtin/commit.c
msgid "show status in long format (default)"
msgstr ""

#: builtin/commit.c
msgid "terminate entries with NUL"
msgstr ""

#: builtin/commit.c builtin/fast-export.c builtin/tag.c
msgid "mode"
msgstr ""

#: builtin/commit.c
msgid "show untracked files, optional modes: all, normal, no. (Default: all)"
msgstr ""

#: builtin/commit.c
msgid "show ignored files"
msgstr ""

#: builtin/commit.c parse-options.h
msgid "when"
msgstr ""

#: builtin/commit.c
msgid ""
"ignore changes to submodules, optional when: all, dirty, untracked. "
"(Default: all)"
msgstr ""

#: builtin/commit.c
msgid "list untracked files in columns"
msgstr ""

#: builtin/commit.c
msgid "couldn't look up newly created commit"
msgstr ""

#: builtin/commit.c
msgid "could not parse newly created commit"
msgstr ""

#: builtin/commit.c
msgid "detached HEAD"
msgstr ""

#: builtin/commit.c
msgid " (root-commit)"
msgstr ""

#: builtin/commit.c
msgid "suppress summary after successful commit"
msgstr ""

#: builtin/commit.c
msgid "show diff in commit message template"
msgstr ""

#: builtin/commit.c
msgid "Commit message options"
msgstr ""

#: builtin/commit.c builtin/tag.c
msgid "read message from file"
msgstr ""

#: builtin/commit.c
msgid "author"
msgstr ""

#: builtin/commit.c
msgid "override author for commit"
msgstr ""

#: builtin/commit.c builtin/gc.c
msgid "date"
msgstr ""

#: builtin/commit.c
msgid "override date for commit"
msgstr ""

#: builtin/commit.c builtin/merge.c builtin/notes.c builtin/tag.c
msgid "message"
msgstr ""

#: builtin/commit.c
msgid "commit message"
msgstr ""

#: builtin/commit.c parse-options.h ref-filter.h
msgid "commit"
msgstr ""

#: builtin/commit.c
msgid "reuse and edit message from specified commit"
msgstr ""

#: builtin/commit.c
msgid "reuse message from specified commit"
msgstr ""

#: builtin/commit.c
msgid "use autosquash formatted message to fixup specified commit"
msgstr ""

#: builtin/commit.c
msgid "use autosquash formatted message to squash specified commit"
msgstr ""

#: builtin/commit.c
msgid "the commit is authored by me now (used with -C/-c/--amend)"
msgstr ""

#: builtin/commit.c builtin/log.c builtin/revert.c
msgid "add Signed-off-by:"
msgstr ""

#: builtin/commit.c
msgid "use specified template file"
msgstr ""

#: builtin/commit.c
msgid "force edit of commit"
msgstr ""

#: builtin/commit.c
msgid "default"
msgstr ""

#: builtin/commit.c builtin/tag.c
msgid "how to strip spaces and #comments from message"
msgstr ""

#: builtin/commit.c
msgid "include status in commit message template"
msgstr ""

#: builtin/commit.c builtin/merge.c builtin/pull.c builtin/revert.c
msgid "GPG sign commit"
msgstr ""

#: builtin/commit.c
msgid "Commit contents options"
msgstr ""

#: builtin/commit.c
msgid "commit all changed files"
msgstr ""

#: builtin/commit.c
msgid "add specified files to index for commit"
msgstr ""

#: builtin/commit.c
msgid "interactively add files"
msgstr ""

#: builtin/commit.c
msgid "interactively add changes"
msgstr ""

#: builtin/commit.c
msgid "commit only specified files"
msgstr ""

#: builtin/commit.c
msgid "bypass pre-commit hook"
msgstr ""

#: builtin/commit.c
msgid "show what would be committed"
msgstr ""

#: builtin/commit.c
msgid "amend previous commit"
msgstr ""

#: builtin/commit.c
msgid "bypass post-rewrite hook"
msgstr ""

#: builtin/commit.c
msgid "ok to record an empty change"
msgstr ""

#: builtin/commit.c
msgid "ok to record a change with an empty message"
msgstr ""

#: builtin/commit.c
msgid "could not parse HEAD commit"
msgstr ""

#: builtin/commit.c
#, c-format
msgid "Corrupt MERGE_HEAD file (%s)"
msgstr ""

#: builtin/commit.c
msgid "could not read MERGE_MODE"
msgstr ""

#: builtin/commit.c
#, c-format
msgid "could not read commit message: %s"
msgstr ""

#: builtin/commit.c
#, c-format
msgid "Aborting commit; you did not edit the message.\n"
msgstr ""

#: builtin/commit.c
#, c-format
msgid "Aborting commit due to empty commit message.\n"
msgstr ""

#: builtin/commit.c
msgid ""
"Repository has been updated, but unable to write\n"
"new_index file. Check that disk is not full and quota is\n"
"not exceeded, and then \"git reset HEAD\" to recover."
msgstr ""

#: builtin/config.c
msgid "git config [<options>]"
msgstr ""

#: builtin/config.c
msgid "Config file location"
msgstr ""

#: builtin/config.c
msgid "use global config file"
msgstr ""

#: builtin/config.c
msgid "use system config file"
msgstr ""

#: builtin/config.c
msgid "use repository config file"
msgstr ""

#: builtin/config.c
msgid "use given config file"
msgstr ""

#: builtin/config.c
msgid "blob-id"
msgstr ""

#: builtin/config.c
msgid "read config from given blob object"
msgstr ""

#: builtin/config.c
msgid "Action"
msgstr ""

#: builtin/config.c
msgid "get value: name [value-regex]"
msgstr ""

#: builtin/config.c
msgid "get all values: key [value-regex]"
msgstr ""

#: builtin/config.c
msgid "get values for regexp: name-regex [value-regex]"
msgstr ""

#: builtin/config.c
msgid "get value specific for the URL: section[.var] URL"
msgstr ""

#: builtin/config.c
msgid "replace all matching variables: name value [value_regex]"
msgstr ""

#: builtin/config.c
msgid "add a new variable: name value"
msgstr ""

#: builtin/config.c
msgid "remove a variable: name [value-regex]"
msgstr ""

#: builtin/config.c
msgid "remove all matches: name [value-regex]"
msgstr ""

#: builtin/config.c
msgid "rename section: old-name new-name"
msgstr ""

#: builtin/config.c
msgid "remove a section: name"
msgstr ""

#: builtin/config.c
msgid "list all"
msgstr ""

#: builtin/config.c
msgid "open an editor"
msgstr ""

#: builtin/config.c
msgid "find the color configured: slot [default]"
msgstr ""

#: builtin/config.c
msgid "find the color setting: slot [stdout-is-tty]"
msgstr ""

#: builtin/config.c
msgid "Type"
msgstr ""

#: builtin/config.c
msgid "value is \"true\" or \"false\""
msgstr ""

#: builtin/config.c
msgid "value is decimal number"
msgstr ""

#: builtin/config.c
msgid "value is --bool or --int"
msgstr ""

#: builtin/config.c
msgid "value is a path (file or directory name)"
msgstr ""

#: builtin/config.c
msgid "Other"
msgstr ""

#: builtin/config.c
msgid "terminate values with NUL byte"
msgstr ""

#: builtin/config.c
msgid "show variable names only"
msgstr ""

#: builtin/config.c
msgid "respect include directives on lookup"
msgstr ""

#: builtin/config.c
msgid "show origin of config (file, standard input, blob, command line)"
msgstr ""

#: builtin/config.c
msgid "unable to parse default color value"
msgstr ""

#: builtin/config.c
#, c-format
msgid ""
"# This is Git's per-user configuration file.\n"
"[user]\n"
"# Please adapt and uncomment the following lines:\n"
"#\tname = %s\n"
"#\temail = %s\n"
msgstr ""

#: builtin/config.c
#, c-format
msgid "cannot create configuration file %s"
msgstr ""

#: builtin/count-objects.c
msgid "git count-objects [-v] [-H | --human-readable]"
msgstr ""

#: builtin/count-objects.c
msgid "print sizes in human readable format"
msgstr ""

#: builtin/describe.c
msgid "git describe [<options>] [<commit-ish>...]"
msgstr ""

#: builtin/describe.c
msgid "git describe [<options>] --dirty"
msgstr ""

#: builtin/describe.c
#, c-format
msgid "annotated tag %s not available"
msgstr ""

#: builtin/describe.c
#, c-format
msgid "annotated tag %s has no embedded name"
msgstr ""

#: builtin/describe.c
#, c-format
msgid "tag '%s' is really '%s' here"
msgstr ""

#: builtin/describe.c builtin/log.c
#, c-format
msgid "Not a valid object name %s"
msgstr ""

#: builtin/describe.c
#, c-format
msgid "%s is not a valid '%s' object"
msgstr ""

#: builtin/describe.c
#, c-format
msgid "no tag exactly matches '%s'"
msgstr ""

#: builtin/describe.c
#, c-format
msgid "searching to describe %s\n"
msgstr ""

#: builtin/describe.c
#, c-format
msgid "finished search at %s\n"
msgstr ""

#: builtin/describe.c
#, c-format
msgid ""
"No annotated tags can describe '%s'.\n"
"However, there were unannotated tags: try --tags."
msgstr ""

#: builtin/describe.c
#, c-format
msgid ""
"No tags can describe '%s'.\n"
"Try --always, or create some tags."
msgstr ""

#: builtin/describe.c
#, c-format
msgid "traversed %lu commits\n"
msgstr ""

#: builtin/describe.c
#, c-format
msgid ""
"more than %i tags found; listed %i most recent\n"
"gave up search at %s\n"
msgstr ""

#: builtin/describe.c
msgid "find the tag that comes after the commit"
msgstr ""

#: builtin/describe.c
msgid "debug search strategy on stderr"
msgstr ""

#: builtin/describe.c
msgid "use any ref"
msgstr ""

#: builtin/describe.c
msgid "use any tag, even unannotated"
msgstr ""

#: builtin/describe.c
msgid "always use long format"
msgstr ""

#: builtin/describe.c
msgid "only follow first parent"
msgstr ""

#: builtin/describe.c
msgid "only output exact matches"
msgstr ""

#: builtin/describe.c
msgid "consider <n> most recent tags (default: 10)"
msgstr ""

#: builtin/describe.c
msgid "only consider tags matching <pattern>"
msgstr ""

#: builtin/describe.c builtin/name-rev.c
msgid "show abbreviated commit object as fallback"
msgstr ""

#: builtin/describe.c
msgid "mark"
msgstr ""

#: builtin/describe.c
msgid "append <mark> on dirty working tree (default: \"-dirty\")"
msgstr ""

#: builtin/describe.c
msgid "--long is incompatible with --abbrev=0"
msgstr ""

#: builtin/describe.c
msgid "No names found, cannot describe anything."
msgstr ""

#: builtin/describe.c
msgid "--dirty is incompatible with commit-ishes"
msgstr ""

#: builtin/diff.c
#, c-format
msgid "'%s': not a regular file or symlink"
msgstr ""

#: builtin/diff.c
#, c-format
msgid "invalid option: %s"
msgstr ""

#: builtin/diff.c
msgid "Not a git repository"
msgstr ""

#: builtin/diff.c
#, c-format
msgid "invalid object '%s' given."
msgstr ""

#: builtin/diff.c
#, c-format
msgid "more than two blobs given: '%s'"
msgstr ""

#: builtin/diff.c
#, c-format
msgid "unhandled object '%s' given."
msgstr ""

#: builtin/fast-export.c
msgid "git fast-export [rev-list-opts]"
msgstr ""

#: builtin/fast-export.c
msgid "show progress after <n> objects"
msgstr ""

#: builtin/fast-export.c
msgid "select handling of signed tags"
msgstr ""

#: builtin/fast-export.c
msgid "select handling of tags that tag filtered objects"
msgstr ""

#: builtin/fast-export.c
msgid "Dump marks to this file"
msgstr ""

#: builtin/fast-export.c
msgid "Import marks from this file"
msgstr ""

#: builtin/fast-export.c
msgid "Fake a tagger when tags lack one"
msgstr ""

#: builtin/fast-export.c
msgid "Output full tree for each commit"
msgstr ""

#: builtin/fast-export.c
msgid "Use the done feature to terminate the stream"
msgstr ""

#: builtin/fast-export.c
msgid "Skip output of blob data"
msgstr ""

#: builtin/fast-export.c
msgid "refspec"
msgstr ""

#: builtin/fast-export.c
msgid "Apply refspec to exported refs"
msgstr ""

#: builtin/fast-export.c
msgid "anonymize output"
msgstr ""

#: builtin/fetch.c
msgid "git fetch [<options>] [<repository> [<refspec>...]]"
msgstr ""

#: builtin/fetch.c
msgid "git fetch [<options>] <group>"
msgstr ""

#: builtin/fetch.c
msgid "git fetch --multiple [<options>] [(<repository> | <group>)...]"
msgstr ""

#: builtin/fetch.c
msgid "git fetch --all [<options>]"
msgstr ""

#: builtin/fetch.c builtin/pull.c
msgid "fetch from all remotes"
msgstr ""

#: builtin/fetch.c builtin/pull.c
msgid "append to .git/FETCH_HEAD instead of overwriting"
msgstr ""

#: builtin/fetch.c builtin/pull.c
msgid "path to upload pack on remote end"
msgstr ""

#: builtin/fetch.c builtin/pull.c
msgid "force overwrite of local branch"
msgstr ""

#: builtin/fetch.c
msgid "fetch from multiple remotes"
msgstr ""

#: builtin/fetch.c builtin/pull.c
msgid "fetch all tags and associated objects"
msgstr ""

#: builtin/fetch.c
msgid "do not fetch all tags (--no-tags)"
msgstr ""

#: builtin/fetch.c
msgid "number of submodules fetched in parallel"
msgstr ""

#: builtin/fetch.c builtin/pull.c
msgid "prune remote-tracking branches no longer on remote"
msgstr ""

#: builtin/fetch.c builtin/pull.c
msgid "on-demand"
msgstr ""

#: builtin/fetch.c builtin/pull.c
msgid "control recursive fetching of submodules"
msgstr ""

#: builtin/fetch.c builtin/pull.c
msgid "keep downloaded pack"
msgstr ""

#: builtin/fetch.c
msgid "allow updating of HEAD ref"
msgstr ""

#: builtin/fetch.c builtin/pull.c
msgid "deepen history of shallow clone"
msgstr ""

#: builtin/fetch.c builtin/pull.c
msgid "convert to a complete repository"
msgstr ""

#: builtin/fetch.c builtin/log.c
msgid "dir"
msgstr ""

#: builtin/fetch.c
msgid "prepend this to submodule path output"
msgstr ""

#: builtin/fetch.c
msgid "default mode for recursion"
msgstr ""

#: builtin/fetch.c builtin/pull.c
msgid "accept refs that update .git/shallow"
msgstr ""

#: builtin/fetch.c builtin/pull.c
msgid "refmap"
msgstr ""

#: builtin/fetch.c builtin/pull.c
msgid "specify fetch refmap"
msgstr ""

#: builtin/fetch.c
msgid "Couldn't find remote ref HEAD"
msgstr ""

#: builtin/fetch.c
#, c-format
msgid "object %s not found"
msgstr ""

#: builtin/fetch.c
msgid "[up to date]"
msgstr ""

#: builtin/fetch.c
#, c-format
msgid "! %-*s %-*s -> %s  (can't fetch in current branch)"
msgstr ""

#: builtin/fetch.c
msgid "[rejected]"
msgstr ""

#: builtin/fetch.c
msgid "[tag update]"
msgstr ""

#: builtin/fetch.c
msgid "  (unable to update local ref)"
msgstr ""

#: builtin/fetch.c
msgid "[new tag]"
msgstr ""

#: builtin/fetch.c
msgid "[new branch]"
msgstr ""

#: builtin/fetch.c
msgid "[new ref]"
msgstr ""

#: builtin/fetch.c
msgid "unable to update local ref"
msgstr ""

#: builtin/fetch.c
msgid "forced update"
msgstr ""

#: builtin/fetch.c
msgid "(non-fast-forward)"
msgstr ""

#: builtin/fetch.c
#, c-format
msgid "%s did not send all necessary objects\n"
msgstr ""

#: builtin/fetch.c
#, c-format
msgid "reject %s because shallow roots are not allowed to be updated"
msgstr ""

#: builtin/fetch.c
#, c-format
msgid "From %.*s\n"
msgstr ""

#: builtin/fetch.c
#, c-format
msgid ""
"some local refs could not be updated; try running\n"
" 'git remote prune %s' to remove any old, conflicting branches"
msgstr ""

#: builtin/fetch.c
#, c-format
msgid "   (%s will become dangling)"
msgstr ""

#: builtin/fetch.c
#, c-format
msgid "   (%s has become dangling)"
msgstr ""

#: builtin/fetch.c
msgid "[deleted]"
msgstr ""

#: builtin/fetch.c builtin/remote.c
msgid "(none)"
msgstr ""

#: builtin/fetch.c
#, c-format
msgid "Refusing to fetch into current branch %s of non-bare repository"
msgstr ""

#: builtin/fetch.c
#, c-format
msgid "Option \"%s\" value \"%s\" is not valid for %s"
msgstr ""

#: builtin/fetch.c
#, c-format
msgid "Option \"%s\" is ignored for %s\n"
msgstr ""

#: builtin/fetch.c
#, c-format
msgid "Don't know how to fetch from %s"
msgstr ""

#: builtin/fetch.c
#, c-format
msgid "Fetching %s\n"
msgstr ""

#: builtin/fetch.c builtin/remote.c
#, c-format
msgid "Could not fetch %s"
msgstr ""

#: builtin/fetch.c
msgid ""
"No remote repository specified.  Please, specify either a URL or a\n"
"remote name from which new revisions should be fetched."
msgstr ""

#: builtin/fetch.c
msgid "You need to specify a tag name."
msgstr ""

#: builtin/fetch.c
msgid "--depth and --unshallow cannot be used together"
msgstr ""

#: builtin/fetch.c
msgid "--unshallow on a complete repository does not make sense"
msgstr ""

#: builtin/fetch.c
msgid "fetch --all does not take a repository argument"
msgstr ""

#: builtin/fetch.c
msgid "fetch --all does not make sense with refspecs"
msgstr ""

#: builtin/fetch.c
#, c-format
msgid "No such remote or remote group: %s"
msgstr ""

#: builtin/fetch.c
msgid "Fetching a group and specifying refspecs does not make sense"
msgstr ""

#: builtin/fmt-merge-msg.c
msgid ""
"git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]"
msgstr ""

#: builtin/fmt-merge-msg.c
msgid "populate log with at most <n> entries from shortlog"
msgstr ""

#: builtin/fmt-merge-msg.c
msgid "alias for --log (deprecated)"
msgstr ""

#: builtin/fmt-merge-msg.c
msgid "text"
msgstr ""

#: builtin/fmt-merge-msg.c
msgid "use <text> as start of message"
msgstr ""

#: builtin/fmt-merge-msg.c
msgid "file to read from"
msgstr ""

#: builtin/for-each-ref.c
msgid "git for-each-ref [<options>] [<pattern>]"
msgstr ""

#: builtin/for-each-ref.c
msgid "git for-each-ref [--points-at <object>]"
msgstr ""

#: builtin/for-each-ref.c
msgid "git for-each-ref [(--merged | --no-merged) [<object>]]"
msgstr ""

#: builtin/for-each-ref.c
msgid "git for-each-ref [--contains [<object>]]"
msgstr ""

#: builtin/for-each-ref.c
msgid "quote placeholders suitably for shells"
msgstr ""

#: builtin/for-each-ref.c
msgid "quote placeholders suitably for perl"
msgstr ""

#: builtin/for-each-ref.c
msgid "quote placeholders suitably for python"
msgstr ""

#: builtin/for-each-ref.c
msgid "quote placeholders suitably for Tcl"
msgstr ""

#: builtin/for-each-ref.c
msgid "show only <n> matched refs"
msgstr ""

#: builtin/for-each-ref.c builtin/tag.c
msgid "format to use for the output"
msgstr ""

#: builtin/for-each-ref.c
msgid "print only refs which points at the given object"
msgstr ""

#: builtin/for-each-ref.c
msgid "print only refs that are merged"
msgstr ""

#: builtin/for-each-ref.c
msgid "print only refs that are not merged"
msgstr ""

#: builtin/for-each-ref.c
msgid "print only refs which contain the commit"
msgstr ""

#: builtin/fsck.c builtin/prune.c
msgid "Checking connectivity"
msgstr ""

#: builtin/fsck.c
msgid "Checking object directories"
msgstr ""

#: builtin/fsck.c
msgid "git fsck [<options>] [<object>...]"
msgstr ""

#: builtin/fsck.c
msgid "show unreachable objects"
msgstr ""

#: builtin/fsck.c
msgid "show dangling objects"
msgstr ""

#: builtin/fsck.c
msgid "report tags"
msgstr ""

#: builtin/fsck.c
msgid "report root nodes"
msgstr ""

#: builtin/fsck.c
msgid "make index objects head nodes"
msgstr ""

#: builtin/fsck.c
msgid "make reflogs head nodes (default)"
msgstr ""

#: builtin/fsck.c
msgid "also consider packs and alternate objects"
msgstr ""

#: builtin/fsck.c
msgid "check only connectivity"
msgstr ""

#: builtin/fsck.c
msgid "enable more strict checking"
msgstr ""

#: builtin/fsck.c
msgid "write dangling objects in .git/lost-found"
msgstr ""

#: builtin/fsck.c builtin/prune.c
msgid "show progress"
msgstr ""

#: builtin/fsck.c
msgid "Checking objects"
msgstr ""

#: builtin/gc.c
msgid "git gc [<options>]"
msgstr ""

#: builtin/gc.c
#, c-format
msgid "Invalid %s: '%s'"
msgstr ""

#: builtin/gc.c
#, c-format
msgid "insanely long object directory %.*s"
msgstr ""

#: builtin/gc.c
#, c-format
msgid ""
"The last gc run reported the following. Please correct the root cause\n"
"and remove %s.\n"
"Automatic cleanup will not be performed until the file is removed.\n"
"\n"
"%s"
msgstr ""

#: builtin/gc.c
msgid "prune unreferenced objects"
msgstr ""

#: builtin/gc.c
msgid "be more thorough (increased runtime)"
msgstr ""

#: builtin/gc.c
msgid "enable auto-gc mode"
msgstr ""

#: builtin/gc.c
msgid "force running gc even if there may be another gc running"
msgstr ""

#: builtin/gc.c
#, c-format
msgid "Auto packing the repository in background for optimum performance.\n"
msgstr ""

#: builtin/gc.c
#, c-format
msgid "Auto packing the repository for optimum performance.\n"
msgstr ""

#: builtin/gc.c
#, c-format
msgid "See \"git help gc\" for manual housekeeping.\n"
msgstr ""

#: builtin/gc.c
#, c-format
msgid ""
"gc is already running on machine '%s' pid %<PRIuMAX> (use --force if not)"
msgstr ""

#: builtin/gc.c
msgid ""
"There are too many unreachable loose objects; run 'git prune' to remove them."
msgstr ""

#: builtin/grep.c
msgid "git grep [<options>] [-e] <pattern> [<rev>...] [[--] <path>...]"
msgstr ""

#: builtin/grep.c
#, c-format
msgid "grep: failed to create thread: %s"
msgstr ""

#: builtin/grep.c
#, c-format
msgid "invalid number of threads specified (%d) for %s"
msgstr ""

#: builtin/grep.c
#, c-format
msgid "unable to read tree (%s)"
msgstr ""

#: builtin/grep.c
#, c-format
msgid "unable to grep from object of type %s"
msgstr ""

#: builtin/grep.c
#, c-format
msgid "switch `%c' expects a numerical value"
msgstr ""

#: builtin/grep.c
#, c-format
msgid "cannot open '%s'"
msgstr ""

#: builtin/grep.c
msgid "search in index instead of in the work tree"
msgstr ""

#: builtin/grep.c
msgid "find in contents not managed by git"
msgstr ""

#: builtin/grep.c
msgid "search in both tracked and untracked files"
msgstr ""

#: builtin/grep.c
msgid "ignore files specified via '.gitignore'"
msgstr ""

#: builtin/grep.c
msgid "show non-matching lines"
msgstr ""

#: builtin/grep.c
msgid "case insensitive matching"
msgstr ""

#: builtin/grep.c
msgid "match patterns only at word boundaries"
msgstr ""

#: builtin/grep.c
msgid "process binary files as text"
msgstr ""

#: builtin/grep.c
msgid "don't match patterns in binary files"
msgstr ""

#: builtin/grep.c
msgid "process binary files with textconv filters"
msgstr ""

#: builtin/grep.c
msgid "descend at most <depth> levels"
msgstr ""

#: builtin/grep.c
msgid "use extended POSIX regular expressions"
msgstr ""

#: builtin/grep.c
msgid "use basic POSIX regular expressions (default)"
msgstr ""

#: builtin/grep.c
msgid "interpret patterns as fixed strings"
msgstr ""

#: builtin/grep.c
msgid "use Perl-compatible regular expressions"
msgstr ""

#: builtin/grep.c
msgid "show line numbers"
msgstr ""

#: builtin/grep.c
msgid "don't show filenames"
msgstr ""

#: builtin/grep.c
msgid "show filenames"
msgstr ""

#: builtin/grep.c
msgid "show filenames relative to top directory"
msgstr ""

#: builtin/grep.c
msgid "show only filenames instead of matching lines"
msgstr ""

#: builtin/grep.c
msgid "synonym for --files-with-matches"
msgstr ""

#: builtin/grep.c
msgid "show only the names of files without match"
msgstr ""

#: builtin/grep.c
msgid "print NUL after filenames"
msgstr ""

#: builtin/grep.c
msgid "show the number of matches instead of matching lines"
msgstr ""

#: builtin/grep.c
msgid "highlight matches"
msgstr ""

#: builtin/grep.c
msgid "print empty line between matches from different files"
msgstr ""

#: builtin/grep.c
msgid "show filename only once above matches from same file"
msgstr ""

#: builtin/grep.c
msgid "show <n> context lines before and after matches"
msgstr ""

#: builtin/grep.c
msgid "show <n> context lines before matches"
msgstr ""

#: builtin/grep.c
msgid "show <n> context lines after matches"
msgstr ""

#: builtin/grep.c
msgid "use <n> worker threads"
msgstr ""

#: builtin/grep.c
msgid "shortcut for -C NUM"
msgstr ""

#: builtin/grep.c
msgid "show a line with the function name before matches"
msgstr ""

#: builtin/grep.c
msgid "show the surrounding function"
msgstr ""

#: builtin/grep.c
msgid "read patterns from file"
msgstr ""

#: builtin/grep.c
msgid "match <pattern>"
msgstr ""

#: builtin/grep.c
msgid "combine patterns specified with -e"
msgstr ""

#: builtin/grep.c
msgid "indicate hit with exit status without output"
msgstr ""

#: builtin/grep.c
msgid "show only matches from files that match all patterns"
msgstr ""

#: builtin/grep.c
msgid "show parse tree for grep expression"
msgstr ""

#: builtin/grep.c
msgid "pager"
msgstr ""

#: builtin/grep.c
msgid "show matching files in the pager"
msgstr ""

#: builtin/grep.c
msgid "allow calling of grep(1) (ignored by this build)"
msgstr ""

#: builtin/grep.c
msgid "no pattern given."
msgstr ""

#: builtin/grep.c builtin/index-pack.c
#, c-format
msgid "invalid number of threads specified (%d)"
msgstr ""

#: builtin/grep.c
msgid "--open-files-in-pager only works on the worktree"
msgstr ""

#: builtin/grep.c
msgid "--cached or --untracked cannot be used with --no-index."
msgstr ""

#: builtin/grep.c
msgid "--no-index or --untracked cannot be used with revs."
msgstr ""

#: builtin/grep.c
msgid "--[no-]exclude-standard cannot be used for tracked contents."
msgstr ""

#: builtin/grep.c
msgid "both --cached and trees are given."
msgstr ""

#: builtin/hash-object.c
msgid ""
"git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] "
"[--] <file>..."
msgstr ""

#: builtin/hash-object.c
msgid "git hash-object  --stdin-paths"
msgstr ""

#: builtin/hash-object.c
msgid "type"
msgstr ""

#: builtin/hash-object.c
msgid "object type"
msgstr ""

#: builtin/hash-object.c
msgid "write the object into the object database"
msgstr ""

#: builtin/hash-object.c
msgid "read the object from stdin"
msgstr ""

#: builtin/hash-object.c
msgid "store file as is without filters"
msgstr ""

#: builtin/hash-object.c
msgid ""
"just hash any random garbage to create corrupt objects for debugging Git"
msgstr ""

#: builtin/hash-object.c
msgid "process file as it were from this path"
msgstr ""

#: builtin/help.c
msgid "print all available commands"
msgstr ""

#: builtin/help.c
msgid "print list of useful guides"
msgstr ""

#: builtin/help.c
msgid "show man page"
msgstr ""

#: builtin/help.c
msgid "show manual in web browser"
msgstr ""

#: builtin/help.c
msgid "show info page"
msgstr ""

#: builtin/help.c
msgid "git help [--all] [--guides] [--man | --web | --info] [<command>]"
msgstr ""

#: builtin/help.c
#, c-format
msgid "unrecognized help format '%s'"
msgstr ""

#: builtin/help.c
msgid "Failed to start emacsclient."
msgstr ""

#: builtin/help.c
msgid "Failed to parse emacsclient version."
msgstr ""

#: builtin/help.c
#, c-format
msgid "emacsclient version '%d' too old (< 22)."
msgstr ""

#: builtin/help.c
#, c-format
msgid "failed to exec '%s'"
msgstr ""

#: builtin/help.c
#, c-format
msgid ""
"'%s': path for unsupported man viewer.\n"
"Please consider using 'man.<tool>.cmd' instead."
msgstr ""

#: builtin/help.c
#, c-format
msgid ""
"'%s': cmd for supported man viewer.\n"
"Please consider using 'man.<tool>.path' instead."
msgstr ""

#: builtin/help.c
#, c-format
msgid "'%s': unknown man viewer."
msgstr ""

#: builtin/help.c
msgid "no man viewer handled the request"
msgstr ""

#: builtin/help.c
msgid "no info viewer handled the request"
msgstr ""

#: builtin/help.c
msgid "Defining attributes per path"
msgstr ""

#: builtin/help.c
msgid "Everyday Git With 20 Commands Or So"
msgstr ""

#: builtin/help.c
msgid "A Git glossary"
msgstr ""

#: builtin/help.c
msgid "Specifies intentionally untracked files to ignore"
msgstr ""

#: builtin/help.c
msgid "Defining submodule properties"
msgstr ""

#: builtin/help.c
msgid "Specifying revisions and ranges for Git"
msgstr ""

#: builtin/help.c
msgid "A tutorial introduction to Git (for version 1.5.1 or newer)"
msgstr ""

#: builtin/help.c
msgid "An overview of recommended workflows with Git"
msgstr ""

#: builtin/help.c
msgid "The common Git guides are:\n"
msgstr ""

#: builtin/help.c
#, c-format
msgid "usage: %s%s"
msgstr ""

#: builtin/help.c
#, c-format
msgid "`git %s' is aliased to `%s'"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "unable to open %s"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "object type mismatch at %s"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "did not receive expected object %s"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "object %s: expected type %s, found %s"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "cannot fill %d byte"
msgid_plural "cannot fill %d bytes"
msgstr[0] ""
msgstr[1] ""

#: builtin/index-pack.c
msgid "early EOF"
msgstr ""

#: builtin/index-pack.c
msgid "read error on input"
msgstr ""

#: builtin/index-pack.c
msgid "used more bytes than were available"
msgstr ""

#: builtin/index-pack.c
msgid "pack too large for current definition of off_t"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "unable to create '%s'"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "cannot open packfile '%s'"
msgstr ""

#: builtin/index-pack.c
msgid "pack signature mismatch"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "pack version %<PRIu32> unsupported"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "pack has bad object at offset %lu: %s"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "inflate returned %d"
msgstr ""

#: builtin/index-pack.c
msgid "offset value overflow for delta base object"
msgstr ""

#: builtin/index-pack.c
msgid "delta base offset is out of bound"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "unknown object type %d"
msgstr ""

#: builtin/index-pack.c
msgid "cannot pread pack file"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "premature end of pack file, %lu byte missing"
msgid_plural "premature end of pack file, %lu bytes missing"
msgstr[0] ""
msgstr[1] ""

#: builtin/index-pack.c
msgid "serious inflate inconsistency"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "SHA1 COLLISION FOUND WITH %s !"
msgstr ""

#: builtin/index-pack.c builtin/pack-objects.c
#, c-format
msgid "unable to read %s"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "cannot read existing object %s"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "invalid blob object %s"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "invalid %s"
msgstr ""

#: builtin/index-pack.c
msgid "Error in object"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "Not all child objects of %s are reachable"
msgstr ""

#: builtin/index-pack.c
msgid "failed to apply delta"
msgstr ""

#: builtin/index-pack.c
msgid "Receiving objects"
msgstr ""

#: builtin/index-pack.c
msgid "Indexing objects"
msgstr ""

#: builtin/index-pack.c
msgid "pack is corrupted (SHA1 mismatch)"
msgstr ""

#: builtin/index-pack.c
msgid "cannot fstat packfile"
msgstr ""

#: builtin/index-pack.c
msgid "pack has junk at the end"
msgstr ""

#: builtin/index-pack.c
msgid "confusion beyond insanity in parse_pack_objects()"
msgstr ""

#: builtin/index-pack.c
msgid "Resolving deltas"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "unable to create thread: %s"
msgstr ""

#: builtin/index-pack.c
msgid "confusion beyond insanity"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "completed with %d local object"
msgid_plural "completed with %d local objects"
msgstr[0] ""
msgstr[1] ""

#: builtin/index-pack.c
#, c-format
msgid "Unexpected tail checksum for %s (disk corruption?)"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "pack has %d unresolved delta"
msgid_plural "pack has %d unresolved deltas"
msgstr[0] ""
msgstr[1] ""

#: builtin/index-pack.c
#, c-format
msgid "unable to deflate appended object (%d)"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "local object %s is corrupt"
msgstr ""

#: builtin/index-pack.c
msgid "error while closing pack file"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "cannot write keep file '%s'"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "cannot close written keep file '%s'"
msgstr ""

#: builtin/index-pack.c
msgid "cannot store pack file"
msgstr ""

#: builtin/index-pack.c
msgid "cannot store index file"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "bad pack.indexversion=%<PRIu32>"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "no threads support, ignoring %s"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "Cannot open existing pack file '%s'"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "Cannot open existing pack idx file for '%s'"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "non delta: %d object"
msgid_plural "non delta: %d objects"
msgstr[0] ""
msgstr[1] ""

#: builtin/index-pack.c
#, c-format
msgid "chain length = %d: %lu object"
msgid_plural "chain length = %d: %lu objects"
msgstr[0] ""
msgstr[1] ""

#: builtin/index-pack.c
#, c-format
msgid "packfile name '%s' does not end with '.pack'"
msgstr ""

#: builtin/index-pack.c
msgid "Cannot come back to cwd"
msgstr ""

#: builtin/index-pack.c
#, c-format
msgid "bad %s"
msgstr ""

#: builtin/index-pack.c
msgid "--fix-thin cannot be used without --stdin"
msgstr ""

#: builtin/index-pack.c
msgid "--verify with no packfile name given"
msgstr ""

#: builtin/init-db.c
#, c-format
msgid "cannot stat '%s'"
msgstr ""

#: builtin/init-db.c
#, c-format
msgid "cannot stat template '%s'"
msgstr ""

#: builtin/init-db.c
#, c-format
msgid "cannot opendir '%s'"
msgstr ""

#: builtin/init-db.c
#, c-format
msgid "cannot readlink '%s'"
msgstr ""

#: builtin/init-db.c
#, c-format
msgid "cannot symlink '%s' '%s'"
msgstr ""

#: builtin/init-db.c
#, c-format
msgid "cannot copy '%s' to '%s'"
msgstr ""

#: builtin/init-db.c
#, c-format
msgid "ignoring template %s"
msgstr ""

#: builtin/init-db.c
#, c-format
msgid "templates not found %s"
msgstr ""

#: builtin/init-db.c
#, c-format
msgid "not copying templates from '%s': %s"
msgstr ""

#: builtin/init-db.c
#, c-format
msgid "%s already exists"
msgstr ""

#: builtin/init-db.c
#, c-format
msgid "unable to handle file type %d"
msgstr ""

#: builtin/init-db.c
#, c-format
msgid "unable to move %s to %s"
msgstr ""

#. TRANSLATORS: The first '%s' is either "Reinitialized
#. existing" or "Initialized empty", the second " shared" or
#. "", and the last '%s%s' is the verbatim directory name.
#: builtin/init-db.c
#, c-format
msgid "%s%s Git repository in %s%s\n"
msgstr ""

#: builtin/init-db.c
msgid "Reinitialized existing"
msgstr ""

#: builtin/init-db.c
msgid "Initialized empty"
msgstr ""

#: builtin/init-db.c
msgid " shared"
msgstr ""

#: builtin/init-db.c
msgid ""
"git init [-q | --quiet] [--bare] [--template=<template-directory>] [--"
"shared[=<permissions>]] [<directory>]"
msgstr ""

#: builtin/init-db.c
msgid "permissions"
msgstr ""

#: builtin/init-db.c
msgid "specify that the git repository is to be shared amongst several users"
msgstr ""

#: builtin/init-db.c
#, c-format
msgid "cannot mkdir %s"
msgstr ""

#: builtin/init-db.c
#, c-format
msgid "cannot chdir to %s"
msgstr ""

#: builtin/init-db.c
#, c-format
msgid ""
"%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-"
"dir=<directory>)"
msgstr ""

#: builtin/init-db.c
#, c-format
msgid "Cannot access work tree '%s'"
msgstr ""

#: builtin/interpret-trailers.c
msgid ""
"git interpret-trailers [--in-place] [--trim-empty] [(--trailer "
"<token>[(=|:)<value>])...] [<file>...]"
msgstr ""

#: builtin/interpret-trailers.c
msgid "edit files in place"
msgstr ""

#: builtin/interpret-trailers.c
msgid "trim empty trailers"
msgstr ""

#: builtin/interpret-trailers.c
msgid "trailer"
msgstr ""

#: builtin/interpret-trailers.c
msgid "trailer(s) to add"
msgstr ""

#: builtin/interpret-trailers.c
msgid "no input file given for in-place editing"
msgstr ""

#: builtin/log.c
msgid "git log [<options>] [<revision-range>] [[--] <path>...]"
msgstr ""

#: builtin/log.c
msgid "git show [<options>] <object>..."
msgstr ""

#: builtin/log.c
#, c-format
msgid "invalid --decorate option: %s"
msgstr ""

#: builtin/log.c
msgid "suppress diff output"
msgstr ""

#: builtin/log.c
msgid "show source"
msgstr ""

#: builtin/log.c
msgid "Use mail map file"
msgstr ""

#: builtin/log.c
msgid "decorate options"
msgstr ""

#: builtin/log.c
msgid "Process line range n,m in file, counting from 1"
msgstr ""

#: builtin/log.c
#, c-format
msgid "Final output: %d %s\n"
msgstr ""

#: builtin/log.c
#, c-format
msgid "git show %s: bad file"
msgstr ""

#: builtin/log.c
#, c-format
msgid "Could not read object %s"
msgstr ""

#: builtin/log.c
#, c-format
msgid "Unknown type: %d"
msgstr ""

#: builtin/log.c
msgid "format.headers without value"
msgstr ""

#: builtin/log.c
msgid "name of output directory is too long"
msgstr ""

#: builtin/log.c
#, c-format
msgid "Cannot open patch file %s"
msgstr ""

#: builtin/log.c
msgid "Need exactly one range."
msgstr ""

#: builtin/log.c
msgid "Not a range."
msgstr ""

#: builtin/log.c
msgid "Cover letter needs email format"
msgstr ""

#: builtin/log.c
#, c-format
msgid "insane in-reply-to: %s"
msgstr ""

#: builtin/log.c
msgid "git format-patch [<options>] [<since> | <revision-range>]"
msgstr ""

#: builtin/log.c
msgid "Two output directories?"
msgstr ""

#: builtin/log.c
#, c-format
msgid "Unknown commit %s"
msgstr ""

#: builtin/log.c builtin/notes.c builtin/tag.c
#, c-format
msgid "Failed to resolve '%s' as a valid ref."
msgstr ""

#: builtin/log.c
msgid "Could not find exact merge base."
msgstr ""

#: builtin/log.c
msgid ""
"Failed to get upstream, if you want to record base commit automatically,\n"
"please use git branch --set-upstream-to to track a remote branch.\n"
"Or you could specify base commit by --base=<base-commit-id> manually."
msgstr ""

#: builtin/log.c
msgid "Failed to find exact merge base"
msgstr ""

#: builtin/log.c
msgid "base commit should be the ancestor of revision list"
msgstr ""

#: builtin/log.c
msgid "base commit shouldn't be in revision list"
msgstr ""

#: builtin/log.c
msgid "cannot get patch id"
msgstr ""

#: builtin/log.c
msgid "use [PATCH n/m] even with a single patch"
msgstr ""

#: builtin/log.c
msgid "use [PATCH] even with multiple patches"
msgstr ""

#: builtin/log.c
msgid "print patches to standard out"
msgstr ""

#: builtin/log.c
msgid "generate a cover letter"
msgstr ""

#: builtin/log.c
msgid "use simple number sequence for output file names"
msgstr ""

#: builtin/log.c
msgid "sfx"
msgstr ""

#: builtin/log.c
msgid "use <sfx> instead of '.patch'"
msgstr ""

#: builtin/log.c
msgid "start numbering patches at <n> instead of 1"
msgstr ""

#: builtin/log.c
msgid "mark the series as Nth re-roll"
msgstr ""

#: builtin/log.c
msgid "Use [<prefix>] instead of [PATCH]"
msgstr ""

#: builtin/log.c
msgid "store resulting files in <dir>"
msgstr ""

#: builtin/log.c
msgid "don't strip/add [PATCH]"
msgstr ""

#: builtin/log.c
msgid "don't output binary diffs"
msgstr ""

#: builtin/log.c
msgid "output all-zero hash in From header"
msgstr ""

#: builtin/log.c
msgid "don't include a patch matching a commit upstream"
msgstr ""

#: builtin/log.c
msgid "show patch format instead of default (patch + stat)"
msgstr ""

#: builtin/log.c
msgid "Messaging"
msgstr ""

#: builtin/log.c
msgid "header"
msgstr ""

#: builtin/log.c
msgid "add email header"
msgstr ""

#: builtin/log.c
msgid "email"
msgstr ""

#: builtin/log.c
msgid "add To: header"
msgstr ""

#: builtin/log.c
msgid "add Cc: header"
msgstr ""

#: builtin/log.c
msgid "ident"
msgstr ""

#: builtin/log.c
msgid "set From address to <ident> (or committer ident if absent)"
msgstr ""

#: builtin/log.c
msgid "message-id"
msgstr ""

#: builtin/log.c
msgid "make first mail a reply to <message-id>"
msgstr ""

#: builtin/log.c
msgid "boundary"
msgstr ""

#: builtin/log.c
msgid "attach the patch"
msgstr ""

#: builtin/log.c
msgid "inline the patch"
msgstr ""

#: builtin/log.c
msgid "enable message threading, styles: shallow, deep"
msgstr ""

#: builtin/log.c
msgid "signature"
msgstr ""

#: builtin/log.c
msgid "add a signature"
msgstr ""

#: builtin/log.c
msgid "base-commit"
msgstr ""

#: builtin/log.c
msgid "add prerequisite tree info to the patch series"
msgstr ""

#: builtin/log.c
msgid "add a signature from a file"
msgstr ""

#: builtin/log.c
msgid "don't print the patch filenames"
msgstr ""

#: builtin/log.c
msgid "-n and -k are mutually exclusive."
msgstr ""

#: builtin/log.c
msgid "--subject-prefix and -k are mutually exclusive."
msgstr ""

#: builtin/log.c
msgid "--name-only does not make sense"
msgstr ""

#: builtin/log.c
msgid "--name-status does not make sense"
msgstr ""

#: builtin/log.c
msgid "--check does not make sense"
msgstr ""

#: builtin/log.c
msgid "standard output, or directory, which one?"
msgstr ""

#: builtin/log.c
#, c-format
msgid "Could not create directory '%s'"
msgstr ""

#: builtin/log.c
#, c-format
msgid "unable to read signature file '%s'"
msgstr ""

#: builtin/log.c
msgid "Failed to create output files"
msgstr ""

#: builtin/log.c
msgid "git cherry [-v] [<upstream> [<head> [<limit>]]]"
msgstr ""

#: builtin/log.c
#, c-format
msgid ""
"Could not find a tracked remote branch, please specify <upstream> manually.\n"
msgstr ""

#: builtin/ls-files.c
msgid "git ls-files [<options>] [<file>...]"
msgstr ""

#: builtin/ls-files.c
msgid "identify the file status with tags"
msgstr ""

#: builtin/ls-files.c
msgid "use lowercase letters for 'assume unchanged' files"
msgstr ""

#: builtin/ls-files.c
msgid "show cached files in the output (default)"
msgstr ""

#: builtin/ls-files.c
msgid "show deleted files in the output"
msgstr ""

#: builtin/ls-files.c
msgid "show modified files in the output"
msgstr ""

#: builtin/ls-files.c
msgid "show other files in the output"
msgstr ""

#: builtin/ls-files.c
msgid "show ignored files in the output"
msgstr ""

#: builtin/ls-files.c
msgid "show staged contents' object name in the output"
msgstr ""

#: builtin/ls-files.c
msgid "show files on the filesystem that need to be removed"
msgstr ""

#: builtin/ls-files.c
msgid "show 'other' directories' names only"
msgstr ""

#: builtin/ls-files.c
msgid "show line endings of files"
msgstr ""

#: builtin/ls-files.c
msgid "don't show empty directories"
msgstr ""

#: builtin/ls-files.c
msgid "show unmerged files in the output"
msgstr ""

#: builtin/ls-files.c
msgid "show resolve-undo information"
msgstr ""

#: builtin/ls-files.c
msgid "skip files matching pattern"
msgstr ""

#: builtin/ls-files.c
msgid "exclude patterns are read from <file>"
msgstr ""

#: builtin/ls-files.c
msgid "read additional per-directory exclude patterns in <file>"
msgstr ""

#: builtin/ls-files.c
msgid "add the standard git exclusions"
msgstr ""

#: builtin/ls-files.c
msgid "make the output relative to the project top directory"
msgstr ""

#: builtin/ls-files.c
msgid "if any <file> is not in the index, treat this as an error"
msgstr ""

#: builtin/ls-files.c
msgid "tree-ish"
msgstr ""

#: builtin/ls-files.c
msgid "pretend that paths removed since <tree-ish> are still present"
msgstr ""

#: builtin/ls-files.c
msgid "show debugging data"
msgstr ""

#: builtin/ls-remote.c
msgid ""
"git ls-remote [--heads] [--tags] [--refs] [--upload-pack=<exec>]\n"
"                     [-q | --quiet] [--exit-code] [--get-url]\n"
"                     [--symref] [<repository> [<refs>...]]"
msgstr ""

#: builtin/ls-remote.c
msgid "do not print remote URL"
msgstr ""

#: builtin/ls-remote.c
msgid "exec"
msgstr ""

#: builtin/ls-remote.c
msgid "path of git-upload-pack on the remote host"
msgstr ""

#: builtin/ls-remote.c
msgid "limit to tags"
msgstr ""

#: builtin/ls-remote.c
msgid "limit to heads"
msgstr ""

#: builtin/ls-remote.c
msgid "do not show peeled tags"
msgstr ""

#: builtin/ls-remote.c
msgid "take url.<base>.insteadOf into account"
msgstr ""

#: builtin/ls-remote.c
msgid "exit with exit code 2 if no matching refs are found"
msgstr ""

#: builtin/ls-remote.c
msgid "show underlying ref in addition to the object pointed by it"
msgstr ""

#: builtin/ls-tree.c
msgid "git ls-tree [<options>] <tree-ish> [<path>...]"
msgstr ""

#: builtin/ls-tree.c
msgid "only show trees"
msgstr ""

#: builtin/ls-tree.c
msgid "recurse into subtrees"
msgstr ""

#: builtin/ls-tree.c
msgid "show trees when recursing"
msgstr ""

#: builtin/ls-tree.c
msgid "terminate entries with NUL byte"
msgstr ""

#: builtin/ls-tree.c
msgid "include object size"
msgstr ""

#: builtin/ls-tree.c
msgid "list only filenames"
msgstr ""

#: builtin/ls-tree.c
msgid "use full path names"
msgstr ""

#: builtin/ls-tree.c
msgid "list entire tree; not just current directory (implies --full-name)"
msgstr ""

#: builtin/merge.c
msgid "git merge [<options>] [<commit>...]"
msgstr ""

#: builtin/merge.c
msgid "git merge [<options>] <msg> HEAD <commit>"
msgstr ""

#: builtin/merge.c
msgid "git merge --abort"
msgstr ""

#: builtin/merge.c
msgid "switch `m' requires a value"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Could not find merge strategy '%s'.\n"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Available strategies are:"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Available custom strategies are:"
msgstr ""

#: builtin/merge.c builtin/pull.c
msgid "do not show a diffstat at the end of the merge"
msgstr ""

#: builtin/merge.c builtin/pull.c
msgid "show a diffstat at the end of the merge"
msgstr ""

#: builtin/merge.c builtin/pull.c
msgid "(synonym to --stat)"
msgstr ""

#: builtin/merge.c builtin/pull.c
msgid "add (at most <n>) entries from shortlog to merge commit message"
msgstr ""

#: builtin/merge.c builtin/pull.c
msgid "create a single commit instead of doing a merge"
msgstr ""

#: builtin/merge.c builtin/pull.c
msgid "perform a commit if the merge succeeds (default)"
msgstr ""

#: builtin/merge.c builtin/pull.c
msgid "edit message before committing"
msgstr ""

#: builtin/merge.c
msgid "allow fast-forward (default)"
msgstr ""

#: builtin/merge.c builtin/pull.c
msgid "abort if fast-forward is not possible"
msgstr ""

#: builtin/merge.c
msgid "Verify that the named commit has a valid GPG signature"
msgstr ""

#: builtin/merge.c builtin/notes.c builtin/pull.c builtin/revert.c
msgid "strategy"
msgstr ""

#: builtin/merge.c builtin/pull.c
msgid "merge strategy to use"
msgstr ""

#: builtin/merge.c builtin/pull.c
msgid "option=value"
msgstr ""

#: builtin/merge.c builtin/pull.c
msgid "option for selected merge strategy"
msgstr ""

#: builtin/merge.c
msgid "merge commit message (for a non-fast-forward merge)"
msgstr ""

#: builtin/merge.c
msgid "abort the current in-progress merge"
msgstr ""

#: builtin/merge.c builtin/pull.c
msgid "allow merging unrelated histories"
msgstr ""

#: builtin/merge.c
msgid "could not run stash."
msgstr ""

#: builtin/merge.c
msgid "stash failed"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "not a valid object: %s"
msgstr ""

#: builtin/merge.c
msgid "read-tree failed"
msgstr ""

#: builtin/merge.c
msgid " (nothing to squash)"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Squash commit -- not updating HEAD\n"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Could not write to '%s'"
msgstr ""

#: builtin/merge.c
msgid "Writing SQUASH_MSG"
msgstr ""

#: builtin/merge.c
msgid "Finishing SQUASH_MSG"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "No merge message -- not updating HEAD\n"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "'%s' does not point to a commit"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Bad branch.%s.mergeoptions string: %s"
msgstr ""

#: builtin/merge.c
msgid "Not handling anything other than two heads merge."
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Unknown option for merge-recursive: -X%s"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "unable to write %s"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Could not read from '%s'"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Not committing merge; use 'git commit' to complete the merge.\n"
msgstr ""

#: builtin/merge.c
#, c-format
msgid ""
"Please enter a commit message to explain why this merge is necessary,\n"
"especially if it merges an updated upstream into a topic branch.\n"
"\n"
"Lines starting with '%c' will be ignored, and an empty message aborts\n"
"the commit.\n"
msgstr ""

#: builtin/merge.c
msgid "Empty commit message."
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Wonderful.\n"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Automatic merge failed; fix conflicts and then commit the result.\n"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "'%s' is not a commit"
msgstr ""

#: builtin/merge.c
msgid "No current branch."
msgstr ""

#: builtin/merge.c
msgid "No remote for the current branch."
msgstr ""

#: builtin/merge.c
msgid "No default upstream defined for the current branch."
msgstr ""

#: builtin/merge.c
#, c-format
msgid "No remote-tracking branch for %s from %s"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "could not close '%s'"
msgstr ""

#: builtin/merge.c
msgid "There is no merge to abort (MERGE_HEAD missing)."
msgstr ""

#: builtin/merge.c
msgid ""
"You have not concluded your merge (MERGE_HEAD exists).\n"
"Please, commit your changes before you merge."
msgstr ""

#: builtin/merge.c
msgid ""
"You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\n"
"Please, commit your changes before you merge."
msgstr ""

#: builtin/merge.c
msgid "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists)."
msgstr ""

#: builtin/merge.c
msgid "You cannot combine --squash with --no-ff."
msgstr ""

#: builtin/merge.c
msgid "No commit specified and merge.defaultToUpstream not set."
msgstr ""

#: builtin/merge.c
msgid "Squash commit into empty head not supported yet"
msgstr ""

#: builtin/merge.c
msgid "Non-fast-forward commit does not make sense into an empty head"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "%s - not something we can merge"
msgstr ""

#: builtin/merge.c
msgid "Can merge only exactly one commit into empty head"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Commit %s has an untrusted GPG signature, allegedly by %s."
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Commit %s has a bad GPG signature allegedly by %s."
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Commit %s does not have a GPG signature."
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Commit %s has a good GPG signature by %s\n"
msgstr ""

#: builtin/merge.c
msgid "refusing to merge unrelated histories"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Updating %s..%s\n"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Trying really trivial in-index merge...\n"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Nope.\n"
msgstr ""

#: builtin/merge.c
msgid "Not possible to fast-forward, aborting."
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Rewinding the tree to pristine...\n"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Trying merge strategy %s...\n"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "No merge strategy handled the merge.\n"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Merge with strategy %s failed.\n"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Using the %s to prepare resolving by hand.\n"
msgstr ""

#: builtin/merge.c
#, c-format
msgid "Automatic merge went well; stopped before committing as requested\n"
msgstr ""

#: builtin/merge-base.c
msgid "git merge-base [-a | --all] <commit> <commit>..."
msgstr ""

#: builtin/merge-base.c
msgid "git merge-base [-a | --all] --octopus <commit>..."
msgstr ""

#: builtin/merge-base.c
msgid "git merge-base --independent <commit>..."
msgstr ""

#: builtin/merge-base.c
msgid "git merge-base --is-ancestor <commit> <commit>"
msgstr ""

#: builtin/merge-base.c
msgid "git merge-base --fork-point <ref> [<commit>]"
msgstr ""

#: builtin/merge-base.c
msgid "output all common ancestors"
msgstr ""

#: builtin/merge-base.c
msgid "find ancestors for a single n-way merge"
msgstr ""

#: builtin/merge-base.c
msgid "list revs not reachable from others"
msgstr ""

#: builtin/merge-base.c
msgid "is the first one ancestor of the other?"
msgstr ""

#: builtin/merge-base.c
msgid "find where <commit> forked from reflog of <ref>"
msgstr ""

#: builtin/merge-file.c
msgid ""
"git merge-file [<options>] [-L <name1> [-L <orig> [-L <name2>]]] <file1> "
"<orig-file> <file2>"
msgstr ""

#: builtin/merge-file.c
msgid "send results to standard output"
msgstr ""

#: builtin/merge-file.c
msgid "use a diff3 based merge"
msgstr ""

#: builtin/merge-file.c
msgid "for conflicts, use our version"
msgstr ""

#: builtin/merge-file.c
msgid "for conflicts, use their version"
msgstr ""

#: builtin/merge-file.c
msgid "for conflicts, use a union version"
msgstr ""

#: builtin/merge-file.c
msgid "for conflicts, use this marker size"
msgstr ""

#: builtin/merge-file.c
msgid "do not warn about conflicts"
msgstr ""

#: builtin/merge-file.c
msgid "set labels for file1/orig-file/file2"
msgstr ""

#: builtin/mktree.c
msgid "git mktree [-z] [--missing] [--batch]"
msgstr ""

#: builtin/mktree.c
msgid "input is NUL terminated"
msgstr ""

#: builtin/mktree.c builtin/write-tree.c
msgid "allow missing objects"
msgstr ""

#: builtin/mktree.c
msgid "allow creation of more than one tree"
msgstr ""

#: builtin/mv.c
msgid "git mv [<options>] <source>... <destination>"
msgstr ""

#: builtin/mv.c
#, c-format
msgid "Directory %s is in index and no submodule?"
msgstr ""

#: builtin/mv.c builtin/rm.c
msgid "Please stage your changes to .gitmodules or stash them to proceed"
msgstr ""

#: builtin/mv.c
#, c-format
msgid "%.*s is in index"
msgstr ""

#: builtin/mv.c
msgid "force move/rename even if target exists"
msgstr ""

#: builtin/mv.c
msgid "skip move/rename errors"
msgstr ""

#: builtin/mv.c
#, c-format
msgid "destination '%s' is not a directory"
msgstr ""

#: builtin/mv.c
#, c-format
msgid "Checking rename of '%s' to '%s'\n"
msgstr ""

#: builtin/mv.c
msgid "bad source"
msgstr ""

#: builtin/mv.c
msgid "can not move directory into itself"
msgstr ""

#: builtin/mv.c
msgid "cannot move directory over file"
msgstr ""

#: builtin/mv.c
msgid "source directory is empty"
msgstr ""

#: builtin/mv.c
msgid "not under version control"
msgstr ""

#: builtin/mv.c
msgid "destination exists"
msgstr ""

#: builtin/mv.c
#, c-format
msgid "overwriting '%s'"
msgstr ""

#: builtin/mv.c
msgid "Cannot overwrite"
msgstr ""

#: builtin/mv.c
msgid "multiple sources for the same target"
msgstr ""

#: builtin/mv.c
msgid "destination directory does not exist"
msgstr ""

#: builtin/mv.c
#, c-format
msgid "%s, source=%s, destination=%s"
msgstr ""

#: builtin/mv.c
#, c-format
msgid "Renaming %s to %s\n"
msgstr ""

#: builtin/mv.c builtin/remote.c builtin/repack.c
#, c-format
msgid "renaming '%s' failed"
msgstr ""

#: builtin/name-rev.c
msgid "git name-rev [<options>] <commit>..."
msgstr ""

#: builtin/name-rev.c
msgid "git name-rev [<options>] --all"
msgstr ""

#: builtin/name-rev.c
msgid "git name-rev [<options>] --stdin"
msgstr ""

#: builtin/name-rev.c
msgid "print only names (no SHA-1)"
msgstr ""

#: builtin/name-rev.c
msgid "only use tags to name the commits"
msgstr ""

#: builtin/name-rev.c
msgid "only use refs matching <pattern>"
msgstr ""

#: builtin/name-rev.c
msgid "list all commits reachable from all refs"
msgstr ""

#: builtin/name-rev.c
msgid "read from stdin"
msgstr ""

#: builtin/name-rev.c
msgid "allow to print `undefined` names (default)"
msgstr ""

#: builtin/name-rev.c
msgid "dereference tags in the input (internal use)"
msgstr ""

#: builtin/notes.c
msgid "git notes [--ref <notes-ref>] [list [<object>]]"
msgstr ""

#: builtin/notes.c
msgid ""
"git notes [--ref <notes-ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> "
"| (-c | -C) <object>] [<object>]"
msgstr ""

#: builtin/notes.c
msgid "git notes [--ref <notes-ref>] copy [-f] <from-object> <to-object>"
msgstr ""

#: builtin/notes.c
msgid ""
"git notes [--ref <notes-ref>] append [--allow-empty] [-m <msg> | -F <file> | "
"(-c | -C) <object>] [<object>]"
msgstr ""

#: builtin/notes.c
msgid "git notes [--ref <notes-ref>] edit [--allow-empty] [<object>]"
msgstr ""

#: builtin/notes.c
msgid "git notes [--ref <notes-ref>] show [<object>]"
msgstr ""

#: builtin/notes.c
msgid ""
"git notes [--ref <notes-ref>] merge [-v | -q] [-s <strategy>] <notes-ref>"
msgstr ""

#: builtin/notes.c
msgid "git notes merge --commit [-v | -q]"
msgstr ""

#: builtin/notes.c
msgid "git notes merge --abort [-v | -q]"
msgstr ""

#: builtin/notes.c
msgid "git notes [--ref <notes-ref>] remove [<object>...]"
msgstr ""

#: builtin/notes.c
msgid "git notes [--ref <notes-ref>] prune [-n | -v]"
msgstr ""

#: builtin/notes.c
msgid "git notes [--ref <notes-ref>] get-ref"
msgstr ""

#: builtin/notes.c
msgid "git notes [list [<object>]]"
msgstr ""

#: builtin/notes.c
msgid "git notes add [<options>] [<object>]"
msgstr ""

#: builtin/notes.c
msgid "git notes copy [<options>] <from-object> <to-object>"
msgstr ""

#: builtin/notes.c
msgid "git notes copy --stdin [<from-object> <to-object>]..."
msgstr ""

#: builtin/notes.c
msgid "git notes append [<options>] [<object>]"
msgstr ""

#: builtin/notes.c
msgid "git notes edit [<object>]"
msgstr ""

#: builtin/notes.c
msgid "git notes show [<object>]"
msgstr ""

#: builtin/notes.c
msgid "git notes merge [<options>] <notes-ref>"
msgstr ""

#: builtin/notes.c
msgid "git notes merge --commit [<options>]"
msgstr ""

#: builtin/notes.c
msgid "git notes merge --abort [<options>]"
msgstr ""

#: builtin/notes.c
msgid "git notes remove [<object>]"
msgstr ""

#: builtin/notes.c
msgid "git notes prune [<options>]"
msgstr ""

#: builtin/notes.c
msgid "git notes get-ref"
msgstr ""

#: builtin/notes.c
#, c-format
msgid "unable to start 'show' for object '%s'"
msgstr ""

#: builtin/notes.c
msgid "could not read 'show' output"
msgstr ""

#: builtin/notes.c
#, c-format
msgid "failed to finish 'show' for object '%s'"
msgstr ""

#: builtin/notes.c builtin/tag.c
#, c-format
msgid "could not create file '%s'"
msgstr ""

#: builtin/notes.c
msgid "Please supply the note contents using either -m or -F option"
msgstr ""

#: builtin/notes.c
msgid "unable to write note object"
msgstr ""

#: builtin/notes.c
#, c-format
msgid "The note contents have been left in %s"
msgstr ""

#: builtin/notes.c builtin/tag.c
#, c-format
msgid "cannot read '%s'"
msgstr ""

#: builtin/notes.c builtin/tag.c
#, c-format
msgid "could not open or read '%s'"
msgstr ""

#: builtin/notes.c
#, c-format
msgid "Failed to read object '%s'."
msgstr ""

#: builtin/notes.c
#, c-format
msgid "Cannot read note data from non-blob object '%s'."
msgstr ""

#: builtin/notes.c
msgid "too many parameters"
msgstr ""

#: builtin/notes.c
#, c-format
msgid "No note found for object %s."
msgstr ""

#: builtin/notes.c
msgid "note contents as a string"
msgstr ""

#: builtin/notes.c
msgid "note contents in a file"
msgstr ""

#: builtin/notes.c
msgid "reuse and edit specified note object"
msgstr ""

#: builtin/notes.c
msgid "reuse specified note object"
msgstr ""

#: builtin/notes.c
msgid "allow storing empty note"
msgstr ""

#: builtin/notes.c
msgid "replace existing notes"
msgstr ""

#: builtin/notes.c
#, c-format
msgid ""
"Cannot add notes. Found existing notes for object %s. Use '-f' to overwrite "
"existing notes"
msgstr ""

#: builtin/notes.c
#, c-format
msgid "Overwriting existing notes for object %s\n"
msgstr ""

#: builtin/notes.c
#, c-format
msgid "Removing note for object %s\n"
msgstr ""

#: builtin/notes.c
msgid "read objects from stdin"
msgstr ""

#: builtin/notes.c
msgid "load rewriting config for <command> (implies --stdin)"
msgstr ""

#: builtin/notes.c
msgid "too few parameters"
msgstr ""

#: builtin/notes.c
#, c-format
msgid ""
"Cannot copy notes. Found existing notes for object %s. Use '-f' to overwrite "
"existing notes"
msgstr ""

#: builtin/notes.c
#, c-format
msgid "Missing notes on source object %s. Cannot copy."
msgstr ""

#: builtin/notes.c
#, c-format
msgid ""
"The -m/-F/-c/-C options have been deprecated for the 'edit' subcommand.\n"
"Please use 'git notes add -f -m/-F/-c/-C' instead.\n"
msgstr ""

#: builtin/notes.c
msgid "General options"
msgstr ""

#: builtin/notes.c
msgid "Merge options"
msgstr ""

#: builtin/notes.c
msgid ""
"resolve notes conflicts using the given strategy (manual/ours/theirs/union/"
"cat_sort_uniq)"
msgstr ""

#: builtin/notes.c
msgid "Committing unmerged notes"
msgstr ""

#: builtin/notes.c
msgid "finalize notes merge by committing unmerged notes"
msgstr ""

#: builtin/notes.c
msgid "Aborting notes merge resolution"
msgstr ""

#: builtin/notes.c
msgid "abort notes merge"
msgstr ""

#: builtin/notes.c
#, c-format
msgid "A notes merge into %s is already in-progress at %s"
msgstr ""

#: builtin/notes.c
#, c-format
msgid "Object %s has no note\n"
msgstr ""

#: builtin/notes.c
msgid "attempt to remove non-existent note is not an error"
msgstr ""

#: builtin/notes.c
msgid "read object names from the standard input"
msgstr ""

#: builtin/notes.c
msgid "notes-ref"
msgstr ""

#: builtin/notes.c
msgid "use notes from <notes-ref>"
msgstr ""

#: builtin/notes.c builtin/remote.c
#, c-format
msgid "Unknown subcommand: %s"
msgstr ""

#: builtin/pack-objects.c
msgid ""
"git pack-objects --stdout [<options>...] [< <ref-list> | < <object-list>]"
msgstr ""

#: builtin/pack-objects.c
msgid ""
"git pack-objects [<options>...] <base-name> [< <ref-list> | < <object-list>]"
msgstr ""

#: builtin/pack-objects.c
#, c-format
msgid "deflate error (%d)"
msgstr ""

#: builtin/pack-objects.c
msgid "disabling bitmap writing, packs are split due to pack.packSizeLimit"
msgstr ""

#: builtin/pack-objects.c
msgid "Writing objects"
msgstr ""

#: builtin/pack-objects.c
msgid "disabling bitmap writing, as some objects are not being packed"
msgstr ""

#: builtin/pack-objects.c
msgid "Compressing objects"
msgstr ""

#: builtin/pack-objects.c
#, c-format
msgid "unsupported index version %s"
msgstr ""

#: builtin/pack-objects.c
#, c-format
msgid "bad index version '%s'"
msgstr ""

#: builtin/pack-objects.c
msgid "do not show progress meter"
msgstr ""

#: builtin/pack-objects.c
msgid "show progress meter"
msgstr ""

#: builtin/pack-objects.c
msgid "show progress meter during object writing phase"
msgstr ""

#: builtin/pack-objects.c
msgid "similar to --all-progress when progress meter is shown"
msgstr ""

#: builtin/pack-objects.c
msgid "version[,offset]"
msgstr ""

#: builtin/pack-objects.c
msgid "write the pack index file in the specified idx format version"
msgstr ""

#: builtin/pack-objects.c
msgid "maximum size of each output pack file"
msgstr ""

#: builtin/pack-objects.c
msgid "ignore borrowed objects from alternate object store"
msgstr ""

#: builtin/pack-objects.c
msgid "ignore packed objects"
msgstr ""

#: builtin/pack-objects.c
msgid "limit pack window by objects"
msgstr ""

#: builtin/pack-objects.c
msgid "limit pack window by memory in addition to object limit"
msgstr ""

#: builtin/pack-objects.c
msgid "maximum length of delta chain allowed in the resulting pack"
msgstr ""

#: builtin/pack-objects.c
msgid "reuse existing deltas"
msgstr ""

#: builtin/pack-objects.c
msgid "reuse existing objects"
msgstr ""

#: builtin/pack-objects.c
msgid "use OFS_DELTA objects"
msgstr ""

#: builtin/pack-objects.c
msgid "use threads when searching for best delta matches"
msgstr ""

#: builtin/pack-objects.c
msgid "do not create an empty pack output"
msgstr ""

#: builtin/pack-objects.c
msgid "read revision arguments from standard input"
msgstr ""

#: builtin/pack-objects.c
msgid "limit the objects to those that are not yet packed"
msgstr ""

#: builtin/pack-objects.c
msgid "include objects reachable from any reference"
msgstr ""

#: builtin/pack-objects.c
msgid "include objects referred by reflog entries"
msgstr ""

#: builtin/pack-objects.c
msgid "include objects referred to by the index"
msgstr ""

#: builtin/pack-objects.c
msgid "output pack to stdout"
msgstr ""

#: builtin/pack-objects.c
msgid "include tag objects that refer to objects to be packed"
msgstr ""

#: builtin/pack-objects.c
msgid "keep unreachable objects"
msgstr ""

#: builtin/pack-objects.c parse-options.h
msgid "time"
msgstr ""

#: builtin/pack-objects.c
msgid "unpack unreachable objects newer than <time>"
msgstr ""

#: builtin/pack-objects.c
msgid "create thin packs"
msgstr ""

#: builtin/pack-objects.c
msgid "create packs suitable for shallow fetches"
msgstr ""

#: builtin/pack-objects.c
msgid "ignore packs that have companion .keep file"
msgstr ""

#: builtin/pack-objects.c
msgid "pack compression level"
msgstr ""

#: builtin/pack-objects.c
msgid "do not hide commits by grafts"
msgstr ""

#: builtin/pack-objects.c
msgid "use a bitmap index if available to speed up counting objects"
msgstr ""

#: builtin/pack-objects.c
msgid "write a bitmap index together with the pack index"
msgstr ""

#: builtin/pack-objects.c
msgid "Counting objects"
msgstr ""

#: builtin/pack-refs.c
msgid "git pack-refs [<options>]"
msgstr ""

#: builtin/pack-refs.c
msgid "pack everything"
msgstr ""

#: builtin/pack-refs.c
msgid "prune loose refs (default)"
msgstr ""

#: builtin/prune-packed.c
msgid "git prune-packed [-n | --dry-run] [-q | --quiet]"
msgstr ""

#: builtin/prune-packed.c
msgid "Removing duplicate objects"
msgstr ""

#: builtin/prune.c
msgid "git prune [-n] [-v] [--expire <time>] [--] [<head>...]"
msgstr ""

#: builtin/prune.c builtin/worktree.c
msgid "do not remove, show only"
msgstr ""

#: builtin/prune.c builtin/worktree.c
msgid "report pruned objects"
msgstr ""

#: builtin/prune.c builtin/worktree.c
msgid "expire objects older than <time>"
msgstr ""

#: builtin/prune.c
msgid "cannot prune in a precious-objects repo"
msgstr ""

#: builtin/pull.c
msgid "git pull [<options>] [<repository> [<refspec>...]]"
msgstr ""

#: builtin/pull.c
msgid "Options related to merging"
msgstr ""

#: builtin/pull.c
msgid "incorporate changes by rebasing rather than merging"
msgstr ""

#: builtin/pull.c builtin/revert.c
msgid "allow fast-forward"
msgstr ""

#: builtin/pull.c
msgid "verify that the named commit has a valid GPG signature"
msgstr ""

#: builtin/pull.c
msgid "automatically stash/stash pop before and after rebase"
msgstr ""

#: builtin/pull.c
msgid "Options related to fetching"
msgstr ""

#: builtin/pull.c
msgid "number of submodules pulled in parallel"
msgstr ""

#: builtin/pull.c
#, c-format
msgid "Invalid value for pull.ff: %s"
msgstr ""

#: builtin/pull.c
msgid "Cannot pull with rebase: You have unstaged changes."
msgstr ""

#: builtin/pull.c
msgid "Additionally, your index contains uncommitted changes."
msgstr ""

#: builtin/pull.c
msgid "Cannot pull with rebase: Your index contains uncommitted changes."
msgstr ""

#: builtin/pull.c
msgid ""
"There is no candidate for rebasing against among the refs that you just "
"fetched."
msgstr ""

#: builtin/pull.c
msgid ""
"There are no candidates for merging among the refs that you just fetched."
msgstr ""

#: builtin/pull.c
msgid ""
"Generally this means that you provided a wildcard refspec which had no\n"
"matches on the remote end."
msgstr ""

#: builtin/pull.c
#, c-format
msgid ""
"You asked to pull from the remote '%s', but did not specify\n"
"a branch. Because this is not the default configured remote\n"
"for your current branch, you must specify a branch on the command line."
msgstr ""

#: builtin/pull.c git-parse-remote.sh
msgid "You are not currently on a branch."
msgstr ""

#: builtin/pull.c git-parse-remote.sh
msgid "Please specify which branch you want to rebase against."
msgstr ""

#: builtin/pull.c git-parse-remote.sh
msgid "Please specify which branch you want to merge with."
msgstr ""

#: builtin/pull.c
msgid "See git-pull(1) for details."
msgstr ""

#: builtin/pull.c git-parse-remote.sh
msgid "<remote>"
msgstr ""

#: builtin/pull.c git-parse-remote.sh
msgid "<branch>"
msgstr ""

#: builtin/pull.c git-parse-remote.sh
msgid "There is no tracking information for the current branch."
msgstr ""

#: builtin/pull.c git-parse-remote.sh
msgid ""
"If you wish to set tracking information for this branch you can do so with:"
msgstr ""

#: builtin/pull.c
#, c-format
msgid ""
"Your configuration specifies to merge with the ref '%s'\n"
"from the remote, but no such ref was fetched."
msgstr ""

#: builtin/pull.c
msgid "--[no-]autostash option is only valid with --rebase."
msgstr ""

#: builtin/pull.c
msgid "Updating an unborn branch with changes added to the index."
msgstr ""

#: builtin/pull.c
#, c-format
msgid ""
"fetch updated the current branch head.\n"
"fast-forwarding your working tree from\n"
"commit %s."
msgstr ""

#: builtin/pull.c
#, c-format
msgid ""
"Cannot fast-forward your working tree.\n"
"After making sure that you saved anything precious from\n"
"$ git diff %s\n"
"output, run\n"
"$ git reset --hard\n"
"to recover."
msgstr ""

#: builtin/pull.c
msgid "Cannot merge multiple branches into empty head."
msgstr ""

#: builtin/pull.c
msgid "Cannot rebase onto multiple branches."
msgstr ""

#: builtin/push.c
msgid "git push [<options>] [<repository> [<refspec>...]]"
msgstr ""

#: builtin/push.c
msgid "tag shorthand without <tag>"
msgstr ""

#: builtin/push.c
msgid "--delete only accepts plain target ref names"
msgstr ""

#: builtin/push.c
msgid ""
"\n"
"To choose either option permanently, see push.default in 'git help config'."
msgstr ""

#: builtin/push.c
#, c-format
msgid ""
"The upstream branch of your current branch does not match\n"
"the name of your current branch.  To push to the upstream branch\n"
"on the remote, use\n"
"\n"
"    git push %s HEAD:%s\n"
"\n"
"To push to the branch of the same name on the remote, use\n"
"\n"
"    git push %s %s\n"
"%s"
msgstr ""

#: builtin/push.c
#, c-format
msgid ""
"You are not currently on a branch.\n"
"To push the history leading to the current (detached HEAD)\n"
"state now, use\n"
"\n"
"    git push %s HEAD:<name-of-remote-branch>\n"
msgstr ""

#: builtin/push.c
#, c-format
msgid ""
"The current branch %s has no upstream branch.\n"
"To push the current branch and set the remote as upstream, use\n"
"\n"
"    git push --set-upstream %s %s\n"
msgstr ""

#: builtin/push.c
#, c-format
msgid "The current branch %s has multiple upstream branches, refusing to push."
msgstr ""

#: builtin/push.c
#, c-format
msgid ""
"You are pushing to remote '%s', which is not the upstream of\n"
"your current branch '%s', without telling me what to push\n"
"to update which remote branch."
msgstr ""

#: builtin/push.c
msgid ""
"You didn't specify any refspecs to push, and push.default is \"nothing\"."
msgstr ""

#: builtin/push.c
msgid ""
"Updates were rejected because the tip of your current branch is behind\n"
"its remote counterpart. Integrate the remote changes (e.g.\n"
"'git pull ...') before pushing again.\n"
"See the 'Note about fast-forwards' in 'git push --help' for details."
msgstr ""

#: builtin/push.c
msgid ""
"Updates were rejected because a pushed branch tip is behind its remote\n"
"counterpart. Check out this branch and integrate the remote changes\n"
"(e.g. 'git pull ...') before pushing again.\n"
"See the 'Note about fast-forwards' in 'git push --help' for details."
msgstr ""

#: builtin/push.c
msgid ""
"Updates were rejected because the remote contains work that you do\n"
"not have locally. This is usually caused by another repository pushing\n"
"to the same ref. You may want to first integrate the remote changes\n"
"(e.g., 'git pull ...') before pushing again.\n"
"See the 'Note about fast-forwards' in 'git push --help' for details."
msgstr ""

#: builtin/push.c
msgid "Updates were rejected because the tag already exists in the remote."
msgstr ""

#: builtin/push.c
msgid ""
"You cannot update a remote ref that points at a non-commit object,\n"
"or update a remote ref to make it point at a non-commit object,\n"
"without using the '--force' option.\n"
msgstr ""

#: builtin/push.c
#, c-format
msgid "Pushing to %s\n"
msgstr ""

#: builtin/push.c
#, c-format
msgid "failed to push some refs to '%s'"
msgstr ""

#: builtin/push.c
#, c-format
msgid "bad repository '%s'"
msgstr ""

#: builtin/push.c
msgid ""
"No configured push destination.\n"
"Either specify the URL from the command-line or configure a remote "
"repository using\n"
"\n"
"    git remote add <name> <url>\n"
"\n"
"and then push using the remote name\n"
"\n"
"    git push <name>\n"
msgstr ""

#: builtin/push.c
msgid "--all and --tags are incompatible"
msgstr ""

#: builtin/push.c
msgid "--all can't be combined with refspecs"
msgstr ""

#: builtin/push.c
msgid "--mirror and --tags are incompatible"
msgstr ""

#: builtin/push.c
msgid "--mirror can't be combined with refspecs"
msgstr ""

#: builtin/push.c
msgid "--all and --mirror are incompatible"
msgstr ""

#: builtin/push.c
msgid "repository"
msgstr ""

#: builtin/push.c builtin/send-pack.c
msgid "push all refs"
msgstr ""

#: builtin/push.c builtin/send-pack.c
msgid "mirror all refs"
msgstr ""

#: builtin/push.c
msgid "delete refs"
msgstr ""

#: builtin/push.c
msgid "push tags (can't be used with --all or --mirror)"
msgstr ""

#: builtin/push.c builtin/send-pack.c
msgid "force updates"
msgstr ""

#: builtin/push.c builtin/send-pack.c
msgid "refname>:<expect"
msgstr ""

#: builtin/push.c builtin/send-pack.c
msgid "require old value of ref to be at this value"
msgstr ""

#: builtin/push.c
msgid "control recursive pushing of submodules"
msgstr ""

#: builtin/push.c builtin/send-pack.c
msgid "use thin pack"
msgstr ""

#: builtin/push.c builtin/send-pack.c
msgid "receive pack program"
msgstr ""

#: builtin/push.c
msgid "set upstream for git pull/status"
msgstr ""

#: builtin/push.c
msgid "prune locally removed refs"
msgstr ""

#: builtin/push.c
msgid "bypass pre-push hook"
msgstr ""

#: builtin/push.c
msgid "push missing but relevant tags"
msgstr ""

#: builtin/push.c builtin/send-pack.c
msgid "GPG sign the push"
msgstr ""

#: builtin/push.c builtin/send-pack.c
msgid "request atomic transaction on remote side"
msgstr ""

#: builtin/push.c
msgid "--delete is incompatible with --all, --mirror and --tags"
msgstr ""

#: builtin/push.c
msgid "--delete doesn't make sense without any refs"
msgstr ""

#: builtin/read-tree.c
msgid ""
"git read-tree [(-m [--trivial] [--aggressive] | --reset | --prefix=<prefix>) "
"[-u [--exclude-per-directory=<gitignore>] | -i]] [--no-sparse-checkout] [--"
"index-output=<file>] (--empty | <tree-ish1> [<tree-ish2> [<tree-ish3>]])"
msgstr ""

#: builtin/read-tree.c
msgid "write resulting index to <file>"
msgstr ""

#: builtin/read-tree.c
msgid "only empty the index"
msgstr ""

#: builtin/read-tree.c
msgid "Merging"
msgstr ""

#: builtin/read-tree.c
msgid "perform a merge in addition to a read"
msgstr ""

#: builtin/read-tree.c
msgid "3-way merge if no file level merging required"
msgstr ""

#: builtin/read-tree.c
msgid "3-way merge in presence of adds and removes"
msgstr ""

#: builtin/read-tree.c
msgid "same as -m, but discard unmerged entries"
msgstr ""

#: builtin/read-tree.c
msgid "<subdirectory>/"
msgstr ""

#: builtin/read-tree.c
msgid "read the tree into the index under <subdirectory>/"
msgstr ""

#: builtin/read-tree.c
msgid "update working tree with merge result"
msgstr ""

#: builtin/read-tree.c
msgid "gitignore"
msgstr ""

#: builtin/read-tree.c
msgid "allow explicitly ignored files to be overwritten"
msgstr ""

#: builtin/read-tree.c
msgid "don't check the working tree after merging"
msgstr ""

#: builtin/read-tree.c
msgid "don't update the index or the work tree"
msgstr ""

#: builtin/read-tree.c
msgid "skip applying sparse checkout filter"
msgstr ""

#: builtin/read-tree.c
msgid "debug unpack-trees"
msgstr ""

#: builtin/receive-pack.c
msgid "git receive-pack <git-dir>"
msgstr ""

#: builtin/receive-pack.c
msgid "quiet"
msgstr ""

#: builtin/receive-pack.c
msgid "You must specify a directory."
msgstr ""

#: builtin/reflog.c
#, c-format
msgid "'%s' for '%s' is not a valid timestamp"
msgstr ""

#: builtin/reflog.c
#, c-format
msgid "'%s' is not a valid timestamp"
msgstr ""

#: builtin/remote.c
msgid "git remote [-v | --verbose]"
msgstr ""

#: builtin/remote.c
msgid ""
"git remote add [-t <branch>] [-m <master>] [-f] [--tags | --no-tags] [--"
"mirror=<fetch|push>] <name> <url>"
msgstr ""

#: builtin/remote.c
msgid "git remote rename <old> <new>"
msgstr ""

#: builtin/remote.c
msgid "git remote remove <name>"
msgstr ""

#: builtin/remote.c
msgid "git remote set-head <name> (-a | --auto | -d | --delete | <branch>)"
msgstr ""

#: builtin/remote.c
msgid "git remote [-v | --verbose] show [-n] <name>"
msgstr ""

#: builtin/remote.c
msgid "git remote prune [-n | --dry-run] <name>"
msgstr ""

#: builtin/remote.c
msgid ""
"git remote [-v | --verbose] update [-p | --prune] [(<group> | <remote>)...]"
msgstr ""

#: builtin/remote.c
msgid "git remote set-branches [--add] <name> <branch>..."
msgstr ""

#: builtin/remote.c
msgid "git remote get-url [--push] [--all] <name>"
msgstr ""

#: builtin/remote.c
msgid "git remote set-url [--push] <name> <newurl> [<oldurl>]"
msgstr ""

#: builtin/remote.c
msgid "git remote set-url --add <name> <newurl>"
msgstr ""

#: builtin/remote.c
msgid "git remote set-url --delete <name> <url>"
msgstr ""

#: builtin/remote.c
msgid "git remote add [<options>] <name> <url>"
msgstr ""

#: builtin/remote.c
msgid "git remote set-branches <name> <branch>..."
msgstr ""

#: builtin/remote.c
msgid "git remote set-branches --add <name> <branch>..."
msgstr ""

#: builtin/remote.c
msgid "git remote show [<options>] <name>"
msgstr ""

#: builtin/remote.c
msgid "git remote prune [<options>] <name>"
msgstr ""

#: builtin/remote.c
msgid "git remote update [<options>] [<group> | <remote>]..."
msgstr ""

#: builtin/remote.c
#, c-format
msgid "Updating %s"
msgstr ""

#: builtin/remote.c
msgid ""
"--mirror is dangerous and deprecated; please\n"
"\t use --mirror=fetch or --mirror=push instead"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "unknown mirror argument: %s"
msgstr ""

#: builtin/remote.c
msgid "fetch the remote branches"
msgstr ""

#: builtin/remote.c
msgid "import all tags and associated objects when fetching"
msgstr ""

#: builtin/remote.c
msgid "or do not fetch any tag at all (--no-tags)"
msgstr ""

#: builtin/remote.c
msgid "branch(es) to track"
msgstr ""

#: builtin/remote.c
msgid "master branch"
msgstr ""

#: builtin/remote.c
msgid "push|fetch"
msgstr ""

#: builtin/remote.c
msgid "set up remote as a mirror to push to or fetch from"
msgstr ""

#: builtin/remote.c
msgid "specifying a master branch makes no sense with --mirror"
msgstr ""

#: builtin/remote.c
msgid "specifying branches to track makes sense only with fetch mirrors"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "remote %s already exists."
msgstr ""

#: builtin/remote.c
#, c-format
msgid "'%s' is not a valid remote name"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "Could not setup master '%s'"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "Could not get fetch map for refspec %s"
msgstr ""

#: builtin/remote.c
msgid "(matching)"
msgstr ""

#: builtin/remote.c
msgid "(delete)"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "No such remote: %s"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "Could not rename config section '%s' to '%s'"
msgstr ""

#: builtin/remote.c
#, c-format
msgid ""
"Not updating non-default fetch refspec\n"
"\t%s\n"
"\tPlease update the configuration manually if necessary."
msgstr ""

#: builtin/remote.c
#, c-format
msgid "deleting '%s' failed"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "creating '%s' failed"
msgstr ""

#: builtin/remote.c
msgid ""
"Note: A branch outside the refs/remotes/ hierarchy was not removed;\n"
"to delete it, use:"
msgid_plural ""
"Note: Some branches outside the refs/remotes/ hierarchy were not removed;\n"
"to delete them, use:"
msgstr[0] ""
msgstr[1] ""

#: builtin/remote.c
#, c-format
msgid "Could not remove config section '%s'"
msgstr ""

#: builtin/remote.c
#, c-format
msgid " new (next fetch will store in remotes/%s)"
msgstr ""

#: builtin/remote.c
msgid " tracked"
msgstr ""

#: builtin/remote.c
msgid " stale (use 'git remote prune' to remove)"
msgstr ""

#: builtin/remote.c
msgid " ???"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "invalid branch.%s.merge; cannot rebase onto > 1 branch"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "rebases interactively onto remote %s"
msgstr ""

#: builtin/remote.c
#, c-format
msgid " merges with remote %s"
msgstr ""

#: builtin/remote.c
msgid "    and with remote"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "merges with remote %s"
msgstr ""

#: builtin/remote.c
msgid "   and with remote"
msgstr ""

#: builtin/remote.c
msgid "create"
msgstr ""

#: builtin/remote.c
msgid "delete"
msgstr ""

#: builtin/remote.c
msgid "up to date"
msgstr ""

#: builtin/remote.c
msgid "fast-forwardable"
msgstr ""

#: builtin/remote.c
msgid "local out of date"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "    %-*s forces to %-*s (%s)"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "    %-*s pushes to %-*s (%s)"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "    %-*s forces to %s"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "    %-*s pushes to %s"
msgstr ""

#: builtin/remote.c
msgid "do not query remotes"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "* remote %s"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "  Fetch URL: %s"
msgstr ""

#: builtin/remote.c
msgid "(no URL)"
msgstr ""

#. TRANSLATORS: the colon ':' should align with
#. the one in "  Fetch URL: %s" translation
#: builtin/remote.c
#, c-format
msgid "  Push  URL: %s"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "  HEAD branch: %s"
msgstr ""

#: builtin/remote.c
#, c-format
msgid ""
"  HEAD branch (remote HEAD is ambiguous, may be one of the following):\n"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "  Remote branch:%s"
msgid_plural "  Remote branches:%s"
msgstr[0] ""
msgstr[1] ""

#: builtin/remote.c
msgid " (status not queried)"
msgstr ""

#: builtin/remote.c
msgid "  Local branch configured for 'git pull':"
msgid_plural "  Local branches configured for 'git pull':"
msgstr[0] ""
msgstr[1] ""

#: builtin/remote.c
msgid "  Local refs will be mirrored by 'git push'"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "  Local ref configured for 'git push'%s:"
msgid_plural "  Local refs configured for 'git push'%s:"
msgstr[0] ""
msgstr[1] ""

#: builtin/remote.c
msgid "set refs/remotes/<name>/HEAD according to remote"
msgstr ""

#: builtin/remote.c
msgid "delete refs/remotes/<name>/HEAD"
msgstr ""

#: builtin/remote.c
msgid "Cannot determine remote HEAD"
msgstr ""

#: builtin/remote.c
msgid "Multiple remote HEAD branches. Please choose one explicitly with:"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "Could not delete %s"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "Not a valid ref: %s"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "Could not setup %s"
msgstr ""

#: builtin/remote.c
#, c-format
msgid " %s will become dangling!"
msgstr ""

#: builtin/remote.c
#, c-format
msgid " %s has become dangling!"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "Pruning %s"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "URL: %s"
msgstr ""

#: builtin/remote.c
#, c-format
msgid " * [would prune] %s"
msgstr ""

#: builtin/remote.c
#, c-format
msgid " * [pruned] %s"
msgstr ""

#: builtin/remote.c
msgid "prune remotes after fetching"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "No such remote '%s'"
msgstr ""

#: builtin/remote.c
msgid "add branch"
msgstr ""

#: builtin/remote.c
msgid "no remote specified"
msgstr ""

#: builtin/remote.c
msgid "query push URLs rather than fetch URLs"
msgstr ""

#: builtin/remote.c
msgid "return all URLs"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "no URLs configured for remote '%s'"
msgstr ""

#: builtin/remote.c
msgid "manipulate push URLs"
msgstr ""

#: builtin/remote.c
msgid "add URL"
msgstr ""

#: builtin/remote.c
msgid "delete URLs"
msgstr ""

#: builtin/remote.c
msgid "--add --delete doesn't make sense"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "Invalid old URL pattern: %s"
msgstr ""

#: builtin/remote.c
#, c-format
msgid "No such URL found: %s"
msgstr ""

#: builtin/remote.c
msgid "Will not delete all non-push URLs"
msgstr ""

#: builtin/remote.c
msgid "be verbose; must be placed before a subcommand"
msgstr ""

#: builtin/repack.c
msgid "git repack [<options>]"
msgstr ""

#: builtin/repack.c
msgid "pack everything in a single pack"
msgstr ""

#: builtin/repack.c
msgid "same as -a, and turn unreachable objects loose"
msgstr ""

#: builtin/repack.c
msgid "remove redundant packs, and run git-prune-packed"
msgstr ""

#: builtin/repack.c
msgid "pass --no-reuse-delta to git-pack-objects"
msgstr ""

#: builtin/repack.c
msgid "pass --no-reuse-object to git-pack-objects"
msgstr ""

#: builtin/repack.c
msgid "do not run git-update-server-info"
msgstr ""

#: builtin/repack.c
msgid "pass --local to git-pack-objects"
msgstr ""

#: builtin/repack.c
msgid "write bitmap index"
msgstr ""

#: builtin/repack.c
msgid "approxidate"
msgstr ""

#: builtin/repack.c
msgid "with -A, do not loosen objects older than this"
msgstr ""

#: builtin/repack.c
msgid "size of the window used for delta compression"
msgstr ""

#: builtin/repack.c
msgid "bytes"
msgstr ""

#: builtin/repack.c
msgid "same as the above, but limit memory size instead of entries count"
msgstr ""

#: builtin/repack.c
msgid "limits the maximum delta depth"
msgstr ""

#: builtin/repack.c
msgid "maximum size of each packfile"
msgstr ""

#: builtin/repack.c
msgid "repack objects in packs marked with .keep"
msgstr ""

#: builtin/repack.c
msgid "cannot delete packs in a precious-objects repo"
msgstr ""

#: builtin/repack.c
#, c-format
msgid "removing '%s' failed"
msgstr ""

#: builtin/replace.c
msgid "git replace [-f] <object> <replacement>"
msgstr ""

#: builtin/replace.c
msgid "git replace [-f] --edit <object>"
msgstr ""

#: builtin/replace.c
msgid "git replace [-f] --graft <commit> [<parent>...]"
msgstr ""

#: builtin/replace.c
msgid "git replace -d <object>..."
msgstr ""

#: builtin/replace.c
msgid "git replace [--format=<format>] [-l [<pattern>]]"
msgstr ""

#: builtin/replace.c
#, c-format
msgid "Not a valid object name: '%s'"
msgstr ""

#: builtin/replace.c
#, c-format
msgid "bad mergetag in commit '%s'"
msgstr ""

#: builtin/replace.c
#, c-format
msgid "malformed mergetag in commit '%s'"
msgstr ""

#: builtin/replace.c
#, c-format
msgid ""
"original commit '%s' contains mergetag '%s' that is discarded; use --edit "
"instead of --graft"
msgstr ""

#: builtin/replace.c
#, c-format
msgid "the original commit '%s' has a gpg signature."
msgstr ""

#: builtin/replace.c
msgid "the signature will be removed in the replacement commit!"
msgstr ""

#: builtin/replace.c
#, c-format
msgid "could not write replacement commit for: '%s'"
msgstr ""

#: builtin/replace.c
msgid "list replace refs"
msgstr ""

#: builtin/replace.c
msgid "delete replace refs"
msgstr ""

#: builtin/replace.c
msgid "edit existing object"
msgstr ""

#: builtin/replace.c
msgid "change a commit's parents"
msgstr ""

#: builtin/replace.c
msgid "replace the ref if it exists"
msgstr ""

#: builtin/replace.c
msgid "do not pretty-print contents for --edit"
msgstr ""

#: builtin/replace.c
msgid "use this format"
msgstr ""

#: builtin/rerere.c
msgid "git rerere [clear | forget <path>... | status | remaining | diff | gc]"
msgstr ""

#: builtin/rerere.c
msgid "register clean resolutions in index"
msgstr ""

#: builtin/reset.c
msgid ""
"git reset [--mixed | --soft | --hard | --merge | --keep] [-q] [<commit>]"
msgstr ""

#: builtin/reset.c
msgid "git reset [-q] <tree-ish> [--] <paths>..."
msgstr ""

#: builtin/reset.c
msgid "git reset --patch [<tree-ish>] [--] [<paths>...]"
msgstr ""

#: builtin/reset.c
msgid "mixed"
msgstr ""

#: builtin/reset.c
msgid "soft"
msgstr ""

#: builtin/reset.c
msgid "hard"
msgstr ""

#: builtin/reset.c
msgid "merge"
msgstr ""

#: builtin/reset.c
msgid "keep"
msgstr ""

#: builtin/reset.c
msgid "You do not have a valid HEAD."
msgstr ""

#: builtin/reset.c
msgid "Failed to find tree of HEAD."
msgstr ""

#: builtin/reset.c
#, c-format
msgid "Failed to find tree of %s."
msgstr ""

#: builtin/reset.c
#, c-format
msgid "HEAD is now at %s"
msgstr ""

#: builtin/reset.c
#, c-format
msgid "Cannot do a %s reset in the middle of a merge."
msgstr ""

#: builtin/reset.c
msgid "be quiet, only report errors"
msgstr ""

#: builtin/reset.c
msgid "reset HEAD and index"
msgstr ""

#: builtin/reset.c
msgid "reset only HEAD"
msgstr ""

#: builtin/reset.c
msgid "reset HEAD, index and working tree"
msgstr ""

#: builtin/reset.c
msgid "reset HEAD but keep local changes"
msgstr ""

#: builtin/reset.c
msgid "record only the fact that removed paths will be added later"
msgstr ""

#: builtin/reset.c
#, c-format
msgid "Failed to resolve '%s' as a valid revision."
msgstr ""

#: builtin/reset.c
#, c-format
msgid "Failed to resolve '%s' as a valid tree."
msgstr ""

#: builtin/reset.c
msgid "--patch is incompatible with --{hard,mixed,soft}"
msgstr ""

#: builtin/reset.c
msgid "--mixed with paths is deprecated; use 'git reset -- <paths>' instead."
msgstr ""

#: builtin/reset.c
#, c-format
msgid "Cannot do %s reset with paths."
msgstr ""

#: builtin/reset.c
#, c-format
msgid "%s reset is not allowed in a bare repository"
msgstr ""

#: builtin/reset.c
msgid "-N can only be used with --mixed"
msgstr ""

#: builtin/reset.c
msgid "Unstaged changes after reset:"
msgstr ""

#: builtin/reset.c
#, c-format
msgid "Could not reset index file to revision '%s'."
msgstr ""

#: builtin/reset.c
msgid "Could not write new index file."
msgstr ""

#: builtin/rev-list.c
msgid "rev-list does not support display of notes"
msgstr ""

#: builtin/rev-parse.c
msgid "git rev-parse --parseopt [<options>] -- [<args>...]"
msgstr ""

#: builtin/rev-parse.c
msgid "keep the `--` passed as an arg"
msgstr ""

#: builtin/rev-parse.c
msgid "stop parsing after the first non-option argument"
msgstr ""

#: builtin/rev-parse.c
msgid "output in stuck long form"
msgstr ""

#: builtin/rev-parse.c
msgid ""
"git rev-parse --parseopt [<options>] -- [<args>...]\n"
"   or: git rev-parse --sq-quote [<arg>...]\n"
"   or: git rev-parse [<options>] [<arg>...]\n"
"\n"
"Run \"git rev-parse --parseopt -h\" for more information on the first usage."
msgstr ""

#: builtin/revert.c
msgid "git revert [<options>] <commit-ish>..."
msgstr ""

#: builtin/revert.c
msgid "git revert <subcommand>"
msgstr ""

#: builtin/revert.c
msgid "git cherry-pick [<options>] <commit-ish>..."
msgstr ""

#: builtin/revert.c
msgid "git cherry-pick <subcommand>"
msgstr ""

#: builtin/revert.c
#, c-format
msgid "%s: %s cannot be used with %s"
msgstr ""

#: builtin/revert.c
msgid "end revert or cherry-pick sequence"
msgstr ""

#: builtin/revert.c
msgid "resume revert or cherry-pick sequence"
msgstr ""

#: builtin/revert.c
msgid "cancel revert or cherry-pick sequence"
msgstr ""

#: builtin/revert.c
msgid "don't automatically commit"
msgstr ""

#: builtin/revert.c
msgid "edit the commit message"
msgstr ""

#: builtin/revert.c
msgid "parent number"
msgstr ""

#: builtin/revert.c
msgid "merge strategy"
msgstr ""

#: builtin/revert.c
msgid "option"
msgstr ""

#: builtin/revert.c
msgid "option for merge strategy"
msgstr ""

#: builtin/revert.c
msgid "append commit name"
msgstr ""

#: builtin/revert.c
msgid "preserve initially empty commits"
msgstr ""

#: builtin/revert.c
msgid "allow commits with empty messages"
msgstr ""

#: builtin/revert.c
msgid "keep redundant, empty commits"
msgstr ""

#: builtin/revert.c
msgid "program error"
msgstr ""

#: builtin/revert.c
msgid "revert failed"
msgstr ""

#: builtin/revert.c
msgid "cherry-pick failed"
msgstr ""

#: builtin/rm.c
msgid "git rm [<options>] [--] <file>..."
msgstr ""

#: builtin/rm.c
msgid ""
"the following submodule (or one of its nested submodules)\n"
"uses a .git directory:"
msgid_plural ""
"the following submodules (or one of their nested submodules)\n"
"use a .git directory:"
msgstr[0] ""
msgstr[1] ""

#: builtin/rm.c
msgid ""
"\n"
"(use 'rm -rf' if you really want to remove it including all of its history)"
msgstr ""

#: builtin/rm.c
msgid ""
"the following file has staged content different from both the\n"
"file and the HEAD:"
msgid_plural ""
"the following files have staged content different from both the\n"
"file and the HEAD:"
msgstr[0] ""
msgstr[1] ""

#: builtin/rm.c
msgid ""
"\n"
"(use -f to force removal)"
msgstr ""

#: builtin/rm.c
msgid "the following file has changes staged in the index:"
msgid_plural "the following files have changes staged in the index:"
msgstr[0] ""
msgstr[1] ""

#: builtin/rm.c
msgid ""
"\n"
"(use --cached to keep the file, or -f to force removal)"
msgstr ""

#: builtin/rm.c
msgid "the following file has local modifications:"
msgid_plural "the following files have local modifications:"
msgstr[0] ""
msgstr[1] ""

#: builtin/rm.c
msgid "do not list removed files"
msgstr ""

#: builtin/rm.c
msgid "only remove from the index"
msgstr ""

#: builtin/rm.c
msgid "override the up-to-date check"
msgstr ""

#: builtin/rm.c
msgid "allow recursive removal"
msgstr ""

#: builtin/rm.c
msgid "exit with a zero status even if nothing matched"
msgstr ""

#: builtin/rm.c
#, c-format
msgid "not removing '%s' recursively without -r"
msgstr ""

#: builtin/rm.c
#, c-format
msgid "git rm: unable to remove %s"
msgstr ""

#: builtin/send-pack.c
msgid ""
"git send-pack [--all | --mirror] [--dry-run] [--force] [--receive-pack=<git-"
"receive-pack>] [--verbose] [--thin] [--atomic] [<host>:]<directory> "
"[<ref>...]\n"
"  --all and explicit <ref> specification are mutually exclusive."
msgstr ""

#: builtin/send-pack.c
msgid "remote name"
msgstr ""

#: builtin/send-pack.c
msgid "use stateless RPC protocol"
msgstr ""

#: builtin/send-pack.c
msgid "read refs from stdin"
msgstr ""

#: builtin/send-pack.c
msgid "print status from remote helper"
msgstr ""

#: builtin/shortlog.c
msgid "git shortlog [<options>] [<revision-range>] [[--] [<path>...]]"
msgstr ""

#: builtin/shortlog.c
msgid "sort output according to the number of commits per author"
msgstr ""

#: builtin/shortlog.c
msgid "Suppress commit descriptions, only provides commit count"
msgstr ""

#: builtin/shortlog.c
msgid "Show the email address of each author"
msgstr ""

#: builtin/shortlog.c
msgid "w[,i1[,i2]]"
msgstr ""

#: builtin/shortlog.c
msgid "Linewrap output"
msgstr ""

#: builtin/show-branch.c
msgid ""
"git show-branch [-a | --all] [-r | --remotes] [--topo-order | --date-order]\n"
"\t\t[--current] [--color[=<when>] | --no-color] [--sparse]\n"
"\t\t[--more=<n> | --list | --independent | --merge-base]\n"
"\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]"
msgstr ""

#: builtin/show-branch.c
msgid "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]"
msgstr ""

#: builtin/show-branch.c
msgid "show remote-tracking and local branches"
msgstr ""

#: builtin/show-branch.c
msgid "show remote-tracking branches"
msgstr ""

#: builtin/show-branch.c
msgid "color '*!+-' corresponding to the branch"
msgstr ""

#: builtin/show-branch.c
msgid "show <n> more commits after the common ancestor"
msgstr ""

#: builtin/show-branch.c
msgid "synonym to more=-1"
msgstr ""

#: builtin/show-branch.c
msgid "suppress naming strings"
msgstr ""

#: builtin/show-branch.c
msgid "include the current branch"
msgstr ""

#: builtin/show-branch.c
msgid "name commits with their object names"
msgstr ""

#: builtin/show-branch.c
msgid "show possible merge bases"
msgstr ""

#: builtin/show-branch.c
msgid "show refs unreachable from any other ref"
msgstr ""

#: builtin/show-branch.c
msgid "show commits in topological order"
msgstr ""

#: builtin/show-branch.c
msgid "show only commits not on the first branch"
msgstr ""

#: builtin/show-branch.c
msgid "show merges reachable from only one tip"
msgstr ""

#: builtin/show-branch.c
msgid "topologically sort, maintaining date order where possible"
msgstr ""

#: builtin/show-branch.c
msgid "<n>[,<base>]"
msgstr ""

#: builtin/show-branch.c
msgid "show <n> most recent ref-log entries starting at base"
msgstr ""

#: builtin/show-ref.c
msgid ""
"git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --"
"hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<pattern>...]"
msgstr ""

#: builtin/show-ref.c
msgid "git show-ref --exclude-existing[=<pattern>]"
msgstr ""

#: builtin/show-ref.c
msgid "only show tags (can be combined with heads)"
msgstr ""

#: builtin/show-ref.c
msgid "only show heads (can be combined with tags)"
msgstr ""

#: builtin/show-ref.c
msgid "stricter reference checking, requires exact ref path"
msgstr ""

#: builtin/show-ref.c
msgid "show the HEAD reference, even if it would be filtered out"
msgstr ""

#: builtin/show-ref.c
msgid "dereference tags into object IDs"
msgstr ""

#: builtin/show-ref.c
msgid "only show SHA1 hash using <n> digits"
msgstr ""

#: builtin/show-ref.c
msgid "do not print results to stdout (useful with --verify)"
msgstr ""

#: builtin/show-ref.c
msgid "show refs from stdin that aren't in local repository"
msgstr ""

#: builtin/stripspace.c
msgid "git stripspace [-s | --strip-comments]"
msgstr ""

#: builtin/stripspace.c
msgid "git stripspace [-c | --comment-lines]"
msgstr ""

#: builtin/stripspace.c
msgid "skip and remove all lines starting with comment character"
msgstr ""

#: builtin/stripspace.c
msgid "prepend comment character and space to each line"
msgstr ""

#: builtin/submodule--helper.c
#, c-format
msgid "No such ref: %s"
msgstr ""

#: builtin/submodule--helper.c
#, c-format
msgid "Expecting a full ref name, got %s"
msgstr ""

#: builtin/submodule--helper.c
#, c-format
msgid "cannot strip one component off url '%s'"
msgstr ""

#: builtin/submodule--helper.c
msgid "alternative anchor for relative paths"
msgstr ""

#: builtin/submodule--helper.c
msgid "git submodule--helper list [--prefix=<path>] [<path>...]"
msgstr ""

#: builtin/submodule--helper.c
#, c-format
msgid "No url found for submodule path '%s' in .gitmodules"
msgstr ""

#: builtin/submodule--helper.c
#, c-format
msgid "Failed to register url for submodule path '%s'"
msgstr ""

#: builtin/submodule--helper.c
#, c-format
msgid "Submodule '%s' (%s) registered for path '%s'\n"
msgstr ""

#: builtin/submodule--helper.c
#, c-format
msgid "warning: command update mode suggested for submodule '%s'\n"
msgstr ""

#: builtin/submodule--helper.c
#, c-format
msgid "Failed to register update mode for submodule path '%s'"
msgstr ""

#: builtin/submodule--helper.c
msgid "Suppress output for initializing a submodule"
msgstr ""

#: builtin/submodule--helper.c
msgid "git submodule--helper init [<path>]"
msgstr ""

#: builtin/submodule--helper.c
msgid "git submodule--helper name <path>"
msgstr ""

#: builtin/submodule--helper.c
#, c-format
msgid "no submodule mapping found in .gitmodules for path '%s'"
msgstr ""

#: builtin/submodule--helper.c
msgid "where the new submodule will be cloned to"
msgstr ""

#: builtin/submodule--helper.c
msgid "name of the new submodule"
msgstr ""

#: builtin/submodule--helper.c
msgid "url where to clone the submodule from"
msgstr ""

#: builtin/submodule--helper.c
msgid "depth for shallow clones"
msgstr ""

#: builtin/submodule--helper.c
msgid ""
"git submodule--helper clone [--prefix=<path>] [--quiet] [--reference "
"<repository>] [--name <name>] [--depth <depth>] --url <url> --path <path>"
msgstr ""

#: builtin/submodule--helper.c
#, c-format
msgid "could not create directory '%s'"
msgstr ""

#: builtin/submodule--helper.c
#, c-format
msgid "clone of '%s' into submodule path '%s' failed"
msgstr ""

#: builtin/submodule--helper.c
#, c-format
msgid "cannot open file '%s'"
msgstr ""

#: builtin/submodule--helper.c
#, c-format
msgid "could not close file %s"
msgstr ""

#: builtin/submodule--helper.c
#, c-format
msgid "could not get submodule directory for '%s'"
msgstr ""

#: builtin/submodule--helper.c
#, c-format
msgid "Submodule path '%s' not initialized"
msgstr ""

#: builtin/submodule--helper.c
msgid "Maybe you want to use 'update --init'?"
msgstr ""

#: builtin/submodule--helper.c
#, c-format
msgid "Skipping unmerged submodule %s"
msgstr ""

#: builtin/submodule--helper.c
#, c-format
msgid "Skipping submodule '%s'"
msgstr ""

#: builtin/submodule--helper.c
msgid "path into the working tree"
msgstr ""

#: builtin/submodule--helper.c
msgid "path into the working tree, across nested submodule boundaries"
msgstr ""

#: builtin/submodule--helper.c
msgid "rebase, merge, checkout or none"
msgstr ""

#: builtin/submodule--helper.c
msgid "Create a shallow clone truncated to the specified number of revisions"
msgstr ""

#: builtin/submodule--helper.c
msgid "parallel jobs"
msgstr ""

#: builtin/submodule--helper.c
msgid "don't print cloning progress"
msgstr ""

#: builtin/submodule--helper.c
msgid "git submodule--helper update_clone [--prefix=<path>] [<path>...]"
msgstr ""

#: builtin/submodule--helper.c
msgid "bad value for update parameter"
msgstr ""

#: builtin/submodule--helper.c
msgid "submodule--helper subcommand must be called with a subcommand"
msgstr ""

#: builtin/submodule--helper.c
#, c-format
msgid "'%s' is not a valid submodule--helper subcommand"
msgstr ""

#: builtin/symbolic-ref.c
msgid "git symbolic-ref [<options>] <name> [<ref>]"
msgstr ""

#: builtin/symbolic-ref.c
msgid "git symbolic-ref -d [-q] <name>"
msgstr ""

#: builtin/symbolic-ref.c
msgid "suppress error message for non-symbolic (detached) refs"
msgstr ""

#: builtin/symbolic-ref.c
msgid "delete symbolic ref"
msgstr ""

#: builtin/symbolic-ref.c
msgid "shorten ref output"
msgstr ""

#: builtin/symbolic-ref.c builtin/update-ref.c
msgid "reason"
msgstr ""

#: builtin/symbolic-ref.c builtin/update-ref.c
msgid "reason of the update"
msgstr ""

#: builtin/tag.c
msgid ""
"git tag [-a | -s | -u <key-id>] [-f] [-m <msg> | -F <file>] <tagname> "
"[<head>]"
msgstr ""

#: builtin/tag.c
msgid "git tag -d <tagname>..."
msgstr ""

#: builtin/tag.c
msgid ""
"git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>]\n"
"\t\t[--format=<format>] [--[no-]merged [<commit>]] [<pattern>...]"
msgstr ""

#: builtin/tag.c
msgid "git tag -v <tagname>..."
msgstr ""

#: builtin/tag.c
#, c-format
msgid "tag name too long: %.*s..."
msgstr ""

#: builtin/tag.c
#, c-format
msgid "tag '%s' not found."
msgstr ""

#: builtin/tag.c
#, c-format
msgid "Deleted tag '%s' (was %s)\n"
msgstr ""

#: builtin/tag.c
#, c-format
msgid ""
"\n"
"Write a message for tag:\n"
"  %s\n"
"Lines starting with '%c' will be ignored.\n"
msgstr ""

#: builtin/tag.c
#, c-format
msgid ""
"\n"
"Write a message for tag:\n"
"  %s\n"
"Lines starting with '%c' will be kept; you may remove them yourself if you "
"want to.\n"
msgstr ""

#: builtin/tag.c
msgid "unable to sign the tag"
msgstr ""

#: builtin/tag.c
msgid "unable to write tag file"
msgstr ""

#: builtin/tag.c
msgid "bad object type."
msgstr ""

#: builtin/tag.c
msgid "tag header too big."
msgstr ""

#: builtin/tag.c
msgid "no tag message?"
msgstr ""

#: builtin/tag.c
#, c-format
msgid "The tag message has been left in %s\n"
msgstr ""

#: builtin/tag.c
msgid "list tag names"
msgstr ""

#: builtin/tag.c
msgid "print <n> lines of each tag message"
msgstr ""

#: builtin/tag.c
msgid "delete tags"
msgstr ""

#: builtin/tag.c
msgid "verify tags"
msgstr ""

#: builtin/tag.c
msgid "Tag creation options"
msgstr ""

#: builtin/tag.c
msgid "annotated tag, needs a message"
msgstr ""

#: builtin/tag.c
msgid "tag message"
msgstr ""

#: builtin/tag.c
msgid "annotated and GPG-signed tag"
msgstr ""

#: builtin/tag.c
msgid "use another key to sign the tag"
msgstr ""

#: builtin/tag.c
msgid "replace the tag if exists"
msgstr ""

#: builtin/tag.c builtin/update-ref.c
msgid "create a reflog"
msgstr ""

#: builtin/tag.c
msgid "Tag listing options"
msgstr ""

#: builtin/tag.c
msgid "show tag list in columns"
msgstr ""

#: builtin/tag.c
msgid "print only tags that contain the commit"
msgstr ""

#: builtin/tag.c
msgid "print only tags that are merged"
msgstr ""

#: builtin/tag.c
msgid "print only tags that are not merged"
msgstr ""

#: builtin/tag.c
msgid "print only tags of the object"
msgstr ""

#: builtin/tag.c
msgid "--column and -n are incompatible"
msgstr ""

#: builtin/tag.c
msgid "-n option is only allowed with -l."
msgstr ""

#: builtin/tag.c
msgid "--contains option is only allowed with -l."
msgstr ""

#: builtin/tag.c
msgid "--points-at option is only allowed with -l."
msgstr ""

#: builtin/tag.c
msgid "--merged and --no-merged option are only allowed with -l"
msgstr ""

#: builtin/tag.c
msgid "only one -F or -m option is allowed."
msgstr ""

#: builtin/tag.c
msgid "too many params"
msgstr ""

#: builtin/tag.c
#, c-format
msgid "'%s' is not a valid tag name."
msgstr ""

#: builtin/tag.c
#, c-format
msgid "tag '%s' already exists"
msgstr ""

#: builtin/tag.c
#, c-format
msgid "Updated tag '%s' (was %s)\n"
msgstr ""

#: builtin/unpack-objects.c
msgid "Unpacking objects"
msgstr ""

#: builtin/update-index.c
#, c-format
msgid "failed to create directory %s"
msgstr ""

#: builtin/update-index.c
#, c-format
msgid "failed to stat %s"
msgstr ""

#: builtin/update-index.c
#, c-format
msgid "failed to create file %s"
msgstr ""

#: builtin/update-index.c
#, c-format
msgid "failed to delete file %s"
msgstr ""

#: builtin/update-index.c
#, c-format
msgid "failed to delete directory %s"
msgstr ""

#: builtin/update-index.c
#, c-format
msgid "Testing mtime in '%s' "
msgstr ""

#: builtin/update-index.c
msgid "directory stat info does not change after adding a new file"
msgstr ""

#: builtin/update-index.c
msgid "directory stat info does not change after adding a new directory"
msgstr ""

#: builtin/update-index.c
msgid "directory stat info changes after updating a file"
msgstr ""

#: builtin/update-index.c
msgid "directory stat info changes after adding a file inside subdirectory"
msgstr ""

#: builtin/update-index.c
msgid "directory stat info does not change after deleting a file"
msgstr ""

#: builtin/update-index.c
msgid "directory stat info does not change after deleting a directory"
msgstr ""

#: builtin/update-index.c
msgid " OK"
msgstr ""

#: builtin/update-index.c
msgid "git update-index [<options>] [--] [<file>...]"
msgstr ""

#: builtin/update-index.c
msgid "continue refresh even when index needs update"
msgstr ""

#: builtin/update-index.c
msgid "refresh: ignore submodules"
msgstr ""

#: builtin/update-index.c
msgid "do not ignore new files"
msgstr ""

#: builtin/update-index.c
msgid "let files replace directories and vice-versa"
msgstr ""

#: builtin/update-index.c
msgid "notice files missing from worktree"
msgstr ""

#: builtin/update-index.c
msgid "refresh even if index contains unmerged entries"
msgstr ""

#: builtin/update-index.c
msgid "refresh stat information"
msgstr ""

#: builtin/update-index.c
msgid "like --refresh, but ignore assume-unchanged setting"
msgstr ""

#: builtin/update-index.c
msgid "<mode>,<object>,<path>"
msgstr ""

#: builtin/update-index.c
msgid "add the specified entry to the index"
msgstr ""

#: builtin/update-index.c
msgid "(+/-)x"
msgstr ""

#: builtin/update-index.c
msgid "override the executable bit of the listed files"
msgstr ""

#: builtin/update-index.c
msgid "mark files as \"not changing\""
msgstr ""

#: builtin/update-index.c
msgid "clear assumed-unchanged bit"
msgstr ""

#: builtin/update-index.c
msgid "mark files as \"index-only\""
msgstr ""

#: builtin/update-index.c
msgid "clear skip-worktree bit"
msgstr ""

#: builtin/update-index.c
msgid "add to index only; do not add content to object database"
msgstr ""

#: builtin/update-index.c
msgid "remove named paths even if present in worktree"
msgstr ""

#: builtin/update-index.c
msgid "with --stdin: input lines are terminated by null bytes"
msgstr ""

#: builtin/update-index.c
msgid "read list of paths to be updated from standard input"
msgstr ""

#: builtin/update-index.c
msgid "add entries from standard input to the index"
msgstr ""

#: builtin/update-index.c
msgid "repopulate stages #2 and #3 for the listed paths"
msgstr ""

#: builtin/update-index.c
msgid "only update entries that differ from HEAD"
msgstr ""

#: builtin/update-index.c
msgid "ignore files missing from worktree"
msgstr ""

#: builtin/update-index.c
msgid "report actions to standard output"
msgstr ""

#: builtin/update-index.c
msgid "(for porcelains) forget saved unresolved conflicts"
msgstr ""

#: builtin/update-index.c
msgid "write index in this format"
msgstr ""

#: builtin/update-index.c
msgid "enable or disable split index"
msgstr ""

#: builtin/update-index.c
msgid "enable/disable untracked cache"
msgstr ""

#: builtin/update-index.c
msgid "test if the filesystem supports untracked cache"
msgstr ""

#: builtin/update-index.c
msgid "enable untracked cache without testing the filesystem"
msgstr ""

#: builtin/update-index.c
msgid "Untracked cache disabled"
msgstr ""

#: builtin/update-index.c
#, c-format
msgid "Untracked cache enabled for '%s'"
msgstr ""

#: builtin/update-ref.c
msgid "git update-ref [<options>] -d <refname> [<old-val>]"
msgstr ""

#: builtin/update-ref.c
msgid "git update-ref [<options>]    <refname> <new-val> [<old-val>]"
msgstr ""

#: builtin/update-ref.c
msgid "git update-ref [<options>] --stdin [-z]"
msgstr ""

#: builtin/update-ref.c
msgid "delete the reference"
msgstr ""

#: builtin/update-ref.c
msgid "update <refname> not the one it points to"
msgstr ""

#: builtin/update-ref.c
msgid "stdin has NUL-terminated arguments"
msgstr ""

#: builtin/update-ref.c
msgid "read updates from stdin"
msgstr ""

#: builtin/update-server-info.c
msgid "git update-server-info [--force]"
msgstr ""

#: builtin/update-server-info.c
msgid "update the info files from scratch"
msgstr ""

#: builtin/verify-commit.c
msgid "git verify-commit [-v | --verbose] <commit>..."
msgstr ""

#: builtin/verify-commit.c
msgid "print commit contents"
msgstr ""

#: builtin/verify-commit.c builtin/verify-tag.c
msgid "print raw gpg status output"
msgstr ""

#: builtin/verify-pack.c
msgid "git verify-pack [-v | --verbose] [-s | --stat-only] <pack>..."
msgstr ""

#: builtin/verify-pack.c
msgid "verbose"
msgstr ""

#: builtin/verify-pack.c
msgid "show statistics only"
msgstr ""

#: builtin/verify-tag.c
msgid "git verify-tag [-v | --verbose] <tag>..."
msgstr ""

#: builtin/verify-tag.c
msgid "print tag contents"
msgstr ""

#: builtin/worktree.c
msgid "git worktree add [<options>] <path> [<branch>]"
msgstr ""

#: builtin/worktree.c
msgid "git worktree prune [<options>]"
msgstr ""

#: builtin/worktree.c
msgid "git worktree list [<options>]"
msgstr ""

#: builtin/worktree.c
#, c-format
msgid "Removing worktrees/%s: not a valid directory"
msgstr ""

#: builtin/worktree.c
#, c-format
msgid "Removing worktrees/%s: gitdir file does not exist"
msgstr ""

#: builtin/worktree.c
#, c-format
msgid "Removing worktrees/%s: unable to read gitdir file (%s)"
msgstr ""

#: builtin/worktree.c
#, c-format
msgid "Removing worktrees/%s: invalid gitdir file"
msgstr ""

#: builtin/worktree.c
#, c-format
msgid "Removing worktrees/%s: gitdir file points to non-existent location"
msgstr ""

#: builtin/worktree.c
#, c-format
msgid "failed to remove '%s'"
msgstr ""

#: builtin/worktree.c
#, c-format
msgid "'%s' already exists"
msgstr ""

#: builtin/worktree.c
#, c-format
msgid "could not create directory of '%s'"
msgstr ""

#: builtin/worktree.c
#, c-format
msgid "Preparing %s (identifier %s)"
msgstr ""

#: builtin/worktree.c
msgid "checkout <branch> even if already checked out in other worktree"
msgstr ""

#: builtin/worktree.c
msgid "create a new branch"
msgstr ""

#: builtin/worktree.c
msgid "create or reset a branch"
msgstr ""

#: builtin/worktree.c
msgid "detach HEAD at named commit"
msgstr ""

#: builtin/worktree.c
msgid "populate the new working tree"
msgstr ""

#: builtin/worktree.c
msgid "-b, -B, and --detach are mutually exclusive"
msgstr ""

#: builtin/write-tree.c
msgid "git write-tree [--missing-ok] [--prefix=<prefix>/]"
msgstr ""

#: builtin/write-tree.c
msgid "<prefix>/"
msgstr ""

#: builtin/write-tree.c
msgid "write tree object for a subdirectory <prefix>"
msgstr ""

#: builtin/write-tree.c
msgid "only useful for debugging"
msgstr ""

#: credential-cache--daemon.c
msgid "print debugging messages to stderr"
msgstr ""

#: git.c
msgid ""
"'git help -a' and 'git help -g' list available subcommands and some\n"
"concept guides. See 'git help <command>' or 'git help <concept>'\n"
"to read about a specific subcommand or concept."
msgstr ""

#: http.c
msgid "Public key pinning not supported with cURL < 7.44.0"
msgstr ""

#: common-cmds.h
msgid "start a working area (see also: git help tutorial)"
msgstr ""

#: common-cmds.h
msgid "work on the current change (see also: git help everyday)"
msgstr ""

#: common-cmds.h
msgid "examine the history and state (see also: git help revisions)"
msgstr ""

#: common-cmds.h
msgid "grow, mark and tweak your common history"
msgstr ""

#: common-cmds.h
msgid "collaborate (see also: git help workflows)"
msgstr ""

#: common-cmds.h
msgid "Add file contents to the index"
msgstr ""

#: common-cmds.h
msgid "Use binary search to find the commit that introduced a bug"
msgstr ""

#: common-cmds.h
msgid "List, create, or delete branches"
msgstr ""

#: common-cmds.h
msgid "Switch branches or restore working tree files"
msgstr ""

#: common-cmds.h
msgid "Clone a repository into a new directory"
msgstr ""

#: common-cmds.h
msgid "Record changes to the repository"
msgstr ""

#: common-cmds.h
msgid "Show changes between commits, commit and working tree, etc"
msgstr ""

#: common-cmds.h
msgid "Download objects and refs from another repository"
msgstr ""

#: common-cmds.h
msgid "Print lines matching a pattern"
msgstr ""

#: common-cmds.h
msgid "Create an empty Git repository or reinitialize an existing one"
msgstr ""

#: common-cmds.h
msgid "Show commit logs"
msgstr ""

#: common-cmds.h
msgid "Join two or more development histories together"
msgstr ""

#: common-cmds.h
msgid "Move or rename a file, a directory, or a symlink"
msgstr ""

#: common-cmds.h
msgid "Fetch from and integrate with another repository or a local branch"
msgstr ""

#: common-cmds.h
msgid "Update remote refs along with associated objects"
msgstr ""

#: common-cmds.h
msgid "Reapply commits on top of another base tip"
msgstr ""

#: common-cmds.h
msgid "Reset current HEAD to the specified state"
msgstr ""

#: common-cmds.h
msgid "Remove files from the working tree and from the index"
msgstr ""

#: common-cmds.h
msgid "Show various types of objects"
msgstr ""

#: common-cmds.h
msgid "Show the working tree status"
msgstr ""

#: common-cmds.h
msgid "Create, list, delete or verify a tag object signed with GPG"
msgstr ""

#: parse-options.h
msgid "expiry-date"
msgstr ""

#: parse-options.h
msgid "no-op (backward compatibility)"
msgstr ""

#: parse-options.h
msgid "be more verbose"
msgstr ""

#: parse-options.h
msgid "be more quiet"
msgstr ""

#: parse-options.h
msgid "use <n> digits to display SHA-1s"
msgstr ""

#: rerere.h
msgid "update the index with reused conflict resolution if possible"
msgstr ""

#: git-bisect.sh
msgid "You need to start by \"git bisect start\""
msgstr ""

#. TRANSLATORS: Make sure to include [Y] and [n] in your
#. translation. The program will only accept English input
#. at this point.
#: git-bisect.sh
msgid "Do you want me to do it for you [Y/n]? "
msgstr ""

#: git-bisect.sh
#, sh-format
msgid "unrecognised option: '$arg'"
msgstr ""

#: git-bisect.sh
#, sh-format
msgid "'$arg' does not appear to be a valid revision"
msgstr ""

#: git-bisect.sh
msgid "Bad HEAD - I need a HEAD"
msgstr ""

#: git-bisect.sh
#, sh-format
msgid ""
"Checking out '$start_head' failed. Try 'git bisect reset <valid-branch>'."
msgstr ""

#: git-bisect.sh
msgid "won't bisect on cg-seek'ed tree"
msgstr ""

#: git-bisect.sh
msgid "Bad HEAD - strange symbolic ref"
msgstr ""

#: git-bisect.sh
#, sh-format
msgid "Bad bisect_write argument: $state"
msgstr ""

#: git-bisect.sh
#, sh-format
msgid "Bad rev input: $arg"
msgstr ""

#: git-bisect.sh
msgid "Please call 'bisect_state' with at least one argument."
msgstr ""

#: git-bisect.sh
#, sh-format
msgid "Bad rev input: $rev"
msgstr ""

#: git-bisect.sh
#, sh-format
msgid "'git bisect $TERM_BAD' can take only one argument."
msgstr ""

#: git-bisect.sh
#, sh-format
msgid "Warning: bisecting only with a $TERM_BAD commit."
msgstr ""

#. TRANSLATORS: Make sure to include [Y] and [n] in your
#. translation. The program will only accept English input
#. at this point.
#: git-bisect.sh
msgid "Are you sure [Y/n]? "
msgstr ""

#: git-bisect.sh
#, sh-format
msgid ""
"You need to give me at least one $bad_syn and one $good_syn revision.\n"
"(You can use \"git bisect $bad_syn\" and \"git bisect $good_syn\" for that.)"
msgstr ""

#: git-bisect.sh
#, sh-format
msgid ""
"You need to start by \"git bisect start\".\n"
"You then need to give me at least one $good_syn and one $bad_syn revision.\n"
"(You can use \"git bisect $bad_syn\" and \"git bisect $good_syn\" for that.)"
msgstr ""

#: git-bisect.sh
msgid "We are not bisecting."
msgstr ""

#: git-bisect.sh
#, sh-format
msgid "'$invalid' is not a valid commit"
msgstr ""

#: git-bisect.sh
#, sh-format
msgid ""
"Could not check out original HEAD '$branch'.\n"
"Try 'git bisect reset <commit>'."
msgstr ""

#: git-bisect.sh
msgid "No logfile given"
msgstr ""

#: git-bisect.sh
#, sh-format
msgid "cannot read $file for replaying"
msgstr ""

#: git-bisect.sh
msgid "?? what are you talking about?"
msgstr ""

#: git-bisect.sh
#, sh-format
msgid "running $command"
msgstr ""

#: git-bisect.sh
#, sh-format
msgid ""
"bisect run failed:\n"
"exit code $res from '$command' is < 0 or >= 128"
msgstr ""

#: git-bisect.sh
msgid "bisect run cannot continue any more"
msgstr ""

#: git-bisect.sh
#, sh-format
msgid ""
"bisect run failed:\n"
"'bisect_state $state' exited with error code $res"
msgstr ""

#: git-bisect.sh
msgid "bisect run success"
msgstr ""

#: git-bisect.sh
msgid "please use two different terms"
msgstr ""

#: git-bisect.sh
#, sh-format
msgid "'$term' is not a valid term"
msgstr ""

#: git-bisect.sh
#, sh-format
msgid "can't use the builtin command '$term' as a term"
msgstr ""

#: git-bisect.sh
#, sh-format
msgid "can't change the meaning of term '$term'"
msgstr ""

#: git-bisect.sh
#, sh-format
msgid "Invalid command: you're currently in a $TERM_BAD/$TERM_GOOD bisect."
msgstr ""

#: git-bisect.sh
msgid "no terms defined"
msgstr ""

#: git-bisect.sh
#, sh-format
msgid ""
"invalid argument $arg for 'git bisect terms'.\n"
"Supported options are: --term-good|--term-old and --term-bad|--term-new."
msgstr ""

#: git-rebase.sh
msgid ""
"When you have resolved this problem, run \"git rebase --continue\".\n"
"If you prefer to skip this patch, run \"git rebase --skip\" instead.\n"
"To check out the original branch and stop rebasing, run \"git rebase --abort"
"\"."
msgstr ""

#: git-rebase.sh
msgid "Applied autostash."
msgstr ""

#: git-rebase.sh
#, sh-format
msgid "Cannot store $stash_sha1"
msgstr ""

#: git-rebase.sh
msgid ""
"Applying autostash resulted in conflicts.\n"
"Your changes are safe in the stash.\n"
"You can run \"git stash pop\" or \"git stash drop\" at any time.\n"
msgstr ""

#: git-rebase.sh
msgid "The pre-rebase hook refused to rebase."
msgstr ""

#: git-rebase.sh
msgid "It looks like git-am is in progress. Cannot rebase."
msgstr ""

#: git-rebase.sh
msgid "No rebase in progress?"
msgstr ""

#: git-rebase.sh
msgid "The --edit-todo action can only be used during interactive rebase."
msgstr ""

#: git-rebase.sh
msgid "Cannot read HEAD"
msgstr ""

#: git-rebase.sh
msgid ""
"You must edit all merge conflicts and then\n"
"mark them as resolved using git add"
msgstr ""

#: git-rebase.sh
#, sh-format
msgid "Could not move back to $head_name"
msgstr ""

#: git-rebase.sh
#, sh-format
msgid ""
"It seems that there is already a $state_dir_base directory, and\n"
"I wonder if you are in the middle of another rebase.  If that is the\n"
"case, please try\n"
"\t$cmd_live_rebase\n"
"If that is not the case, please\n"
"\t$cmd_clear_stale_rebase\n"
"and run me again.  I am stopping in case you still have something\n"
"valuable there."
msgstr ""

#: git-rebase.sh
#, sh-format
msgid "invalid upstream $upstream_name"
msgstr ""

#: git-rebase.sh
#, sh-format
msgid "$onto_name: there are more than one merge bases"
msgstr ""

#: git-rebase.sh
#, sh-format
msgid "$onto_name: there is no merge base"
msgstr ""

#: git-rebase.sh
#, sh-format
msgid "Does not point to a valid commit: $onto_name"
msgstr ""

#: git-rebase.sh
#, sh-format
msgid "fatal: no such branch: $branch_name"
msgstr ""

#: git-rebase.sh
msgid "Cannot autostash"
msgstr ""

#: git-rebase.sh
#, sh-format
msgid "Created autostash: $stash_abbrev"
msgstr ""

#: git-rebase.sh
msgid "Please commit or stash them."
msgstr ""

#: git-rebase.sh
#, sh-format
msgid "Current branch $branch_name is up to date."
msgstr ""

#: git-rebase.sh
#, sh-format
msgid "Current branch $branch_name is up to date, rebase forced."
msgstr ""

#: git-rebase.sh
#, sh-format
msgid "Changes from $mb to $onto:"
msgstr ""

#: git-rebase.sh
msgid "First, rewinding head to replay your work on top of it..."
msgstr ""

#: git-rebase.sh
#, sh-format
msgid "Fast-forwarded $branch_name to $onto_name."
msgstr ""

#: git-stash.sh
msgid "git stash clear with parameters is unimplemented"
msgstr ""

#: git-stash.sh
msgid "You do not have the initial commit yet"
msgstr ""

#: git-stash.sh
msgid "Cannot save the current index state"
msgstr ""

#: git-stash.sh
msgid "Cannot save the current worktree state"
msgstr ""

#: git-stash.sh
msgid "No changes selected"
msgstr ""

#: git-stash.sh
msgid "Cannot remove temporary index (can't happen)"
msgstr ""

#: git-stash.sh
msgid "Cannot record working tree state"
msgstr ""

#: git-stash.sh
#, sh-format
msgid "Cannot update $ref_stash with $w_commit"
msgstr ""

#. TRANSLATORS: $option is an invalid option, like
#. `--blah-blah'. The 7 spaces at the beginning of the
#. second line correspond to "error: ". So you should line
#. up the second line with however many characters the
#. translation of "error: " takes in your language. E.g. in
#. English this is:
#.
#. $ git stash save --blah-blah 2>&1 | head -n 2
#. error: unknown option for 'stash save': --blah-blah
#. To provide a message, use git stash save -- '--blah-blah'
#: git-stash.sh
#, sh-format
msgid ""
"error: unknown option for 'stash save': $option\n"
"       To provide a message, use git stash save -- '$option'"
msgstr ""

#: git-stash.sh
msgid "No local changes to save"
msgstr ""

#: git-stash.sh
msgid "Cannot initialize stash"
msgstr ""

#: git-stash.sh
msgid "Cannot save the current status"
msgstr ""

#: git-stash.sh
msgid "Cannot remove worktree changes"
msgstr ""

#: git-stash.sh
#, sh-format
msgid "unknown option: $opt"
msgstr ""

#: git-stash.sh
msgid "No stash found."
msgstr ""

#: git-stash.sh
#, sh-format
msgid "Too many revisions specified: $REV"
msgstr ""

#: git-stash.sh
#, sh-format
msgid "$reference is not a valid reference"
msgstr ""

#: git-stash.sh
#, sh-format
msgid "'$args' is not a stash-like commit"
msgstr ""

#: git-stash.sh
#, sh-format
msgid "'$args' is not a stash reference"
msgstr ""

#: git-stash.sh
msgid "unable to refresh index"
msgstr ""

#: git-stash.sh
msgid "Cannot apply a stash in the middle of a merge"
msgstr ""

#: git-stash.sh
msgid "Conflicts in index. Try without --index."
msgstr ""

#: git-stash.sh
msgid "Could not save index tree"
msgstr ""

#: git-stash.sh
msgid "Cannot unstage modified files"
msgstr ""

#: git-stash.sh
msgid "Index was not unstashed."
msgstr ""

#: git-stash.sh
#, sh-format
msgid "Dropped ${REV} ($s)"
msgstr ""

#: git-stash.sh
#, sh-format
msgid "${REV}: Could not drop stash entry"
msgstr ""

#: git-stash.sh
msgid "No branch name specified"
msgstr ""

#: git-stash.sh
msgid "(To restore them type \"git stash apply\")"
msgstr ""

#: git-submodule.sh
msgid "Relative path can only be used from the toplevel of the working tree"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "repo URL: '$repo' must be absolute or begin with ./|../"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "'$sm_path' already exists in the index"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid ""
"The following path is ignored by one of your .gitignore files:\n"
"$sm_path\n"
"Use -f if you really want to add it."
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Adding existing repo at '$sm_path' to the index"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "'$sm_path' already exists and is not a valid git repo"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "A git directory for '$sm_name' is found locally with remote(s):"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid ""
"If you want to reuse this local git directory instead of cloning again from"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid ""
"use the '--force' option. If the local git directory is not the correct repo"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid ""
"or you are unsure what this means choose another name with the '--name' "
"option."
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Reactivating local git directory for submodule '$sm_name'."
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Unable to checkout submodule '$sm_path'"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Failed to add submodule '$sm_path'"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Failed to register submodule '$sm_path'"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Entering '$displaypath'"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Stopping at '$displaypath'; script returned non-zero status."
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "pathspec and --all are incompatible"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Use '--all' if you really want to deinitialize all submodules"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Submodule work tree '$displaypath' contains a .git directory"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid ""
"(use 'rm -rf' if you really want to remove it including all of its history)"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid ""
"Submodule work tree '$displaypath' contains local modifications; use '-f' to "
"discard them"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Cleared directory '$displaypath'"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Could not remove submodule work tree '$displaypath'"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Could not create empty submodule directory '$displaypath'"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Submodule '$name' ($url) unregistered for path '$displaypath'"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Unable to find current revision in submodule path '$displaypath'"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Unable to fetch in submodule path '$sm_path'"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Unable to fetch in submodule path '$displaypath'"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Unable to checkout '$sha1' in submodule path '$displaypath'"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Submodule path '$displaypath': checked out '$sha1'"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Unable to rebase '$sha1' in submodule path '$displaypath'"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Submodule path '$displaypath': rebased into '$sha1'"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Unable to merge '$sha1' in submodule path '$displaypath'"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Submodule path '$displaypath': merged in '$sha1'"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Execution of '$command $sha1' failed in submodule path '$displaypath'"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Submodule path '$displaypath': '$command $sha1'"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Failed to recurse into submodule path '$displaypath'"
msgstr ""

#: git-submodule.sh
msgid "The --cached option cannot be used with the --files option"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "unexpected mode $mod_dst"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "  Warn: $display_name doesn't contain commit $sha1_src"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "  Warn: $display_name doesn't contain commit $sha1_dst"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "  Warn: $display_name doesn't contain commits $sha1_src and $sha1_dst"
msgstr ""

#: git-submodule.sh
msgid "blob"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Failed to recurse into submodule path '$sm_path'"
msgstr ""

#: git-submodule.sh
#, sh-format
msgid "Synchronizing submodule url for '$displaypath'"
msgstr ""

#: git-parse-remote.sh
#, sh-format
msgid "See git-${cmd}(1) for details."
msgstr ""
